Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CHAR
    false
    true

Grammar

Rule 0     S' -> s
Rule 1     s -> block
Rule 2     block -> block instruccion
Rule 3     block -> instruccion
Rule 4     instruccion -> print PUNTOCOMA
Rule 5     instruccion -> ifinstruction
Rule 6     instruccion -> declaration
Rule 7     instruccion -> assignment
Rule 8     instruccion -> whileinstruction
Rule 9     instruccion -> instancia PUNTOCOMA
Rule 10    instruccion -> operadores PUNTOCOMA
Rule 11    instruccion -> forinstruction
Rule 12    instruccion -> breakstmt PUNTOCOMA
Rule 13    instruccion -> continuestmt
Rule 14    instruccion -> arraydeclaration
Rule 15    instruccion -> functionstmt
Rule 16    instruccion -> call
Rule 17    instruccion -> returnstmt
Rule 18    instruccion -> pusheo
Rule 19    instruccion -> switch_statement
Rule 20    instruccion -> constante
Rule 21    instruccion -> interfacecreation
Rule 22    instruccion -> interdeclaration
Rule 23    instruccion -> assigmentarray
Rule 24    print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER
Rule 25    declaration -> VAR ID DOSPUNTOS type IGUAL expresion PUNTOCOMA
Rule 26    constante -> CONST ID DOSPUNTOS type IGUAL expresion PUNTOCOMA
Rule 27    assignment -> VAR ID IGUAL expresion PUNTOCOMA
Rule 28    constante -> CONST ID IGUAL expresion PUNTOCOMA
Rule 29    arraydeclaration -> VAR ID DOSPUNTOS type CORIZQ CORDER IGUAL expresion PUNTOCOMA
Rule 30    expresion -> CORIZQ expressionList CORDER
Rule 31    expresion -> ID PUNTO LENGHT
Rule 32    expresion -> ID PUNTO INDEXOF PARIZQ expresion PARDER
Rule 33    expresion -> ID PUNTO POP PARIZQ PARDER
Rule 34    pusheo -> ID PUNTO PUSH PARIZQ expresion PARDER PUNTOCOMA
Rule 35    expresion -> ID PUNTO JOIN PARIZQ PARDER
Rule 36    instancia -> ID IGUAL expresion
Rule 37    operadores -> expresion MAS MAS
Rule 38    type -> NUMBER
Rule 39    type -> FLOAT
Rule 40    type -> STRING
Rule 41    type -> BOOLEAN
Rule 42    type -> ID
Rule 43    type -> type CORIZQ CORDER
Rule 44    whileinstruction -> WHILE PARIZQ expresion PARDER CHR_IZQ block CHR_DER
Rule 45    forinstruction -> FOR PARIZQ declaration expresion PUNTOCOMA operadores PARDER CHR_IZQ block CHR_DER
Rule 46    expresion -> PARSEINT PARIZQ expresion PARDER
Rule 47    expresion -> PARSEFLOAT PARIZQ expresion PARDER
Rule 48    expresion -> expresion PUNTO TOSTRING PARIZQ PARDER
Rule 49    expresion -> ID PUNTO TOSTRING PARIZQ PARDER
Rule 50    expresion -> TYPEOF expresion
Rule 51    ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER
Rule 52    ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE ifinstruction
Rule 53    ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER
Rule 54    switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement default_case CHR_DER
Rule 55    switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement CHR_DER
Rule 56    cases_statement -> cases_statement case_statement
Rule 57    cases_statement -> case_statement
Rule 58    case_statement -> CASE expresion DOSPUNTOS block
Rule 59    default_case -> DEFAULT DOSPUNTOS block
Rule 60    call -> ID PARIZQ expressionList PARDER PUNTOCOMA
Rule 61    call -> ID PARIZQ PARDER PUNTOCOMA
Rule 62    functionstmt -> FUNC ID funcparams functype CHR_IZQ block CHR_DER
Rule 63    interfacecreation -> INTERFACE ID CHR_IZQ attributeList CHR_DER
Rule 64    interdeclaration -> VAR ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA
Rule 65    interdeclaration -> CONST ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA
Rule 66    interfaceContent -> interfaceContent COMA ID DOSPUNTOS expresion
Rule 67    interfaceContent -> ID DOSPUNTOS expresion
Rule 68    attributeList -> attributeList ID DOSPUNTOS type PUNTOCOMA
Rule 69    attributeList -> ID DOSPUNTOS type PUNTOCOMA
Rule 70    funcparams -> PARIZQ paramsList PARDER
Rule 71    funcparams -> PARIZQ PARDER
Rule 72    paramsList -> paramsList COMA ID DOSPUNTOS type
Rule 73    paramsList -> ID DOSPUNTOS type
Rule 74    functype -> DOSPUNTOS type
Rule 75    functype -> <empty>
Rule 76    returnstmt -> RETURN expresion PUNTOCOMA
Rule 77    returnstmt -> RETURN PUNTOCOMA
Rule 78    expresion -> expresion MAS expresion
Rule 79    expresion -> expresion MENOS expresion
Rule 80    expresion -> expresion POR expresion
Rule 81    expresion -> expresion DIVIDIDO expresion
Rule 82    expresion -> expresion MOD expresion
Rule 83    expresion -> ID PARIZQ expressionList PARDER
Rule 84    expresion -> ID PARIZQ PARDER
Rule 85    expresion -> expresion MENORQUE expresion
Rule 86    expresion -> expresion MAYORQUE expresion
Rule 87    expresion -> expresion MENORIGUAL expresion
Rule 88    expresion -> expresion MAYORIGUAL expresion
Rule 89    expresion -> expresion TERN expresion DOSPUNTOS expresion
Rule 90    expresion -> expresion AND expresion
Rule 91    expresion -> expresion OR expresion
Rule 92    expresion -> NOT expresion
Rule 93    expresion -> expresion IGUALDAD expresion
Rule 94    expresion -> expresion DIFERENTE expresion
Rule 95    expresion -> MENOS expresion
Rule 96    expresion -> PARIZQ expresion PARDER
Rule 97    expresion -> ID PUNTO LCASE PARIZQ PARDER
Rule 98    expresion -> ID PUNTO UPCASE PARIZQ PARDER
Rule 99    expresion -> ENTERO
Rule 100   expresion -> BOOLEANO
Rule 101   expresion -> CADENA
Rule 102   expresion -> listArray
Rule 103   expresion -> DECIMAL
Rule 104   continuestmt -> CONTINUE PUNTOCOMA
Rule 105   breakstmt -> BREAK
Rule 106   expressionList -> expressionList COMA expresion
Rule 107   expressionList -> expresion
Rule 108   assigmentarray -> listArray2 IGUAL expresion PUNTOCOMA
Rule 109   listArray2 -> listArray2 CORIZQ expresion CORDER
Rule 110   listArray2 -> listArray2 PUNTO ID
Rule 111   listArray2 -> ID
Rule 112   listArray -> listArray CORIZQ expresion CORDER
Rule 113   listArray -> listArray PUNTO ID
Rule 114   listArray -> ID

Terminals, with rules where they appear

AND                  : 90
BOOLEAN              : 41
BOOLEANO             : 100
BREAK                : 105
CADENA               : 101
CASE                 : 58
CHAR                 : 
CHR_DER              : 44 45 51 51 52 53 54 55 62 63 64 65
CHR_IZQ              : 44 45 51 51 52 53 54 55 62 63 64 65
COMA                 : 66 72 106
CONSOLE              : 24
CONST                : 26 28 65
CONTINUE             : 104
CORDER               : 29 30 43 109 112
CORIZQ               : 29 30 43 109 112
DECIMAL              : 103
DEFAULT              : 59
DIFERENTE            : 94
DIVIDIDO             : 81
DOSPUNTOS            : 25 26 29 58 59 64 65 66 67 68 69 72 73 74 89
ELSE                 : 51 52
ENTERO               : 99
FLOAT                : 39
FOR                  : 45
FUNC                 : 62
ID                   : 25 26 27 28 29 31 32 33 34 35 36 42 49 60 61 62 63 64 64 65 65 66 67 68 69 72 73 83 84 97 98 110 111 113 114
IF                   : 51 52 53
IGUAL                : 25 26 27 28 29 36 64 65 108
IGUALDAD             : 93
INDEXOF              : 32
INTERFACE            : 63
JOIN                 : 35
LCASE                : 97
LENGHT               : 31
LOG                  : 24
MAS                  : 37 37 78
MAYORIGUAL           : 88
MAYORQUE             : 86
MENORIGUAL           : 87
MENORQUE             : 85
MENOS                : 79 95
MOD                  : 82
NOT                  : 92
NUMBER               : 38
OR                   : 91
PARDER               : 24 32 33 34 35 44 45 46 47 48 49 51 52 53 54 55 60 61 70 71 83 84 96 97 98
PARIZQ               : 24 32 33 34 35 44 45 46 47 48 49 51 52 53 54 55 60 61 70 71 83 84 96 97 98
PARSEFLOAT           : 47
PARSEINT             : 46
POP                  : 33
POR                  : 80
PUNTO                : 24 31 32 33 34 35 48 49 97 98 110 113
PUNTOCOMA            : 4 9 10 12 25 26 27 28 29 34 45 60 61 64 65 68 69 76 77 104 108
PUSH                 : 34
RETURN               : 76 77
STRING               : 40
SWITCH               : 54 55
TERN                 : 89
TOSTRING             : 48 49
TYPEOF               : 50
UPCASE               : 98
VAR                  : 25 27 29 64
WHILE                : 44
error                : 
false                : 
true                 : 

Nonterminals, with rules where they appear

arraydeclaration     : 14
assigmentarray       : 23
assignment           : 7
attributeList        : 63 68
block                : 1 2 44 45 51 51 52 53 58 59 62
breakstmt            : 12
call                 : 16
case_statement       : 56 57
cases_statement      : 54 55 56
constante            : 20
continuestmt         : 13
declaration          : 6 45
default_case         : 54
expresion            : 25 26 27 28 29 32 34 36 37 44 45 46 47 48 50 51 52 53 54 55 58 66 67 76 78 78 79 79 80 80 81 81 82 82 85 85 86 86 87 87 88 88 89 89 89 90 90 91 91 92 93 93 94 94 95 96 106 107 108 109 112
expressionList       : 24 30 60 83 106
forinstruction       : 11
funcparams           : 62
functionstmt         : 15
functype             : 62
ifinstruction        : 5 52
instancia            : 9
instruccion          : 2 3
interdeclaration     : 22
interfaceContent     : 64 65 66
interfacecreation    : 21
listArray            : 102 112 113
listArray2           : 108 109 110
operadores           : 10 45
paramsList           : 70 72
print                : 4
pusheo               : 18
returnstmt           : 17
s                    : 0
switch_statement     : 19
type                 : 25 26 29 43 68 69 72 73 74
whileinstruction     : 8

Parsing method: LALR

state 0

    (0) S' -> . s
    (1) s -> . block
    (2) block -> . block instruccion
    (3) block -> . instruccion
    (4) instruccion -> . print PUNTOCOMA
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . declaration
    (7) instruccion -> . assignment
    (8) instruccion -> . whileinstruction
    (9) instruccion -> . instancia PUNTOCOMA
    (10) instruccion -> . operadores PUNTOCOMA
    (11) instruccion -> . forinstruction
    (12) instruccion -> . breakstmt PUNTOCOMA
    (13) instruccion -> . continuestmt
    (14) instruccion -> . arraydeclaration
    (15) instruccion -> . functionstmt
    (16) instruccion -> . call
    (17) instruccion -> . returnstmt
    (18) instruccion -> . pusheo
    (19) instruccion -> . switch_statement
    (20) instruccion -> . constante
    (21) instruccion -> . interfacecreation
    (22) instruccion -> . interdeclaration
    (23) instruccion -> . assigmentarray
    (24) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER
    (51) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER
    (52) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE ifinstruction
    (53) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER
    (25) declaration -> . VAR ID DOSPUNTOS type IGUAL expresion PUNTOCOMA
    (27) assignment -> . VAR ID IGUAL expresion PUNTOCOMA
    (44) whileinstruction -> . WHILE PARIZQ expresion PARDER CHR_IZQ block CHR_DER
    (36) instancia -> . ID IGUAL expresion
    (37) operadores -> . expresion MAS MAS
    (45) forinstruction -> . FOR PARIZQ declaration expresion PUNTOCOMA operadores PARDER CHR_IZQ block CHR_DER
    (105) breakstmt -> . BREAK
    (104) continuestmt -> . CONTINUE PUNTOCOMA
    (29) arraydeclaration -> . VAR ID DOSPUNTOS type CORIZQ CORDER IGUAL expresion PUNTOCOMA
    (62) functionstmt -> . FUNC ID funcparams functype CHR_IZQ block CHR_DER
    (60) call -> . ID PARIZQ expressionList PARDER PUNTOCOMA
    (61) call -> . ID PARIZQ PARDER PUNTOCOMA
    (76) returnstmt -> . RETURN expresion PUNTOCOMA
    (77) returnstmt -> . RETURN PUNTOCOMA
    (34) pusheo -> . ID PUNTO PUSH PARIZQ expresion PARDER PUNTOCOMA
    (54) switch_statement -> . SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement default_case CHR_DER
    (55) switch_statement -> . SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement CHR_DER
    (26) constante -> . CONST ID DOSPUNTOS type IGUAL expresion PUNTOCOMA
    (28) constante -> . CONST ID IGUAL expresion PUNTOCOMA
    (63) interfacecreation -> . INTERFACE ID CHR_IZQ attributeList CHR_DER
    (64) interdeclaration -> . VAR ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA
    (65) interdeclaration -> . CONST ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA
    (108) assigmentarray -> . listArray2 IGUAL expresion PUNTOCOMA
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (109) listArray2 -> . listArray2 CORIZQ expresion CORDER
    (110) listArray2 -> . listArray2 PUNTO ID
    (111) listArray2 -> . ID
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CONSOLE         shift and go to state 24
    IF              shift and go to state 26
    VAR             shift and go to state 28
    WHILE           shift and go to state 30
    ID              shift and go to state 29
    FOR             shift and go to state 31
    BREAK           shift and go to state 32
    CONTINUE        shift and go to state 33
    FUNC            shift and go to state 35
    RETURN          shift and go to state 36
    SWITCH          shift and go to state 37
    CONST           shift and go to state 38
    INTERFACE       shift and go to state 39
    CORIZQ          shift and go to state 34
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    s                              shift and go to state 1
    block                          shift and go to state 2
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    declaration                    shift and go to state 6
    assignment                     shift and go to state 7
    whileinstruction               shift and go to state 8
    instancia                      shift and go to state 9
    operadores                     shift and go to state 10
    forinstruction                 shift and go to state 11
    breakstmt                      shift and go to state 12
    continuestmt                   shift and go to state 13
    arraydeclaration               shift and go to state 14
    functionstmt                   shift and go to state 15
    call                           shift and go to state 16
    returnstmt                     shift and go to state 17
    pusheo                         shift and go to state 18
    switch_statement               shift and go to state 19
    constante                      shift and go to state 20
    interfacecreation              shift and go to state 21
    interdeclaration               shift and go to state 22
    assigmentarray                 shift and go to state 23
    expresion                      shift and go to state 27
    listArray2                     shift and go to state 40
    listArray                      shift and go to state 49

state 1

    (0) S' -> s .



state 2

    (1) s -> block .
    (2) block -> block . instruccion
    (4) instruccion -> . print PUNTOCOMA
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . declaration
    (7) instruccion -> . assignment
    (8) instruccion -> . whileinstruction
    (9) instruccion -> . instancia PUNTOCOMA
    (10) instruccion -> . operadores PUNTOCOMA
    (11) instruccion -> . forinstruction
    (12) instruccion -> . breakstmt PUNTOCOMA
    (13) instruccion -> . continuestmt
    (14) instruccion -> . arraydeclaration
    (15) instruccion -> . functionstmt
    (16) instruccion -> . call
    (17) instruccion -> . returnstmt
    (18) instruccion -> . pusheo
    (19) instruccion -> . switch_statement
    (20) instruccion -> . constante
    (21) instruccion -> . interfacecreation
    (22) instruccion -> . interdeclaration
    (23) instruccion -> . assigmentarray
    (24) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER
    (51) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER
    (52) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE ifinstruction
    (53) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER
    (25) declaration -> . VAR ID DOSPUNTOS type IGUAL expresion PUNTOCOMA
    (27) assignment -> . VAR ID IGUAL expresion PUNTOCOMA
    (44) whileinstruction -> . WHILE PARIZQ expresion PARDER CHR_IZQ block CHR_DER
    (36) instancia -> . ID IGUAL expresion
    (37) operadores -> . expresion MAS MAS
    (45) forinstruction -> . FOR PARIZQ declaration expresion PUNTOCOMA operadores PARDER CHR_IZQ block CHR_DER
    (105) breakstmt -> . BREAK
    (104) continuestmt -> . CONTINUE PUNTOCOMA
    (29) arraydeclaration -> . VAR ID DOSPUNTOS type CORIZQ CORDER IGUAL expresion PUNTOCOMA
    (62) functionstmt -> . FUNC ID funcparams functype CHR_IZQ block CHR_DER
    (60) call -> . ID PARIZQ expressionList PARDER PUNTOCOMA
    (61) call -> . ID PARIZQ PARDER PUNTOCOMA
    (76) returnstmt -> . RETURN expresion PUNTOCOMA
    (77) returnstmt -> . RETURN PUNTOCOMA
    (34) pusheo -> . ID PUNTO PUSH PARIZQ expresion PARDER PUNTOCOMA
    (54) switch_statement -> . SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement default_case CHR_DER
    (55) switch_statement -> . SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement CHR_DER
    (26) constante -> . CONST ID DOSPUNTOS type IGUAL expresion PUNTOCOMA
    (28) constante -> . CONST ID IGUAL expresion PUNTOCOMA
    (63) interfacecreation -> . INTERFACE ID CHR_IZQ attributeList CHR_DER
    (64) interdeclaration -> . VAR ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA
    (65) interdeclaration -> . CONST ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA
    (108) assigmentarray -> . listArray2 IGUAL expresion PUNTOCOMA
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (109) listArray2 -> . listArray2 CORIZQ expresion CORDER
    (110) listArray2 -> . listArray2 PUNTO ID
    (111) listArray2 -> . ID
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    $end            reduce using rule 1 (s -> block .)
    CONSOLE         shift and go to state 24
    IF              shift and go to state 26
    VAR             shift and go to state 28
    WHILE           shift and go to state 30
    ID              shift and go to state 29
    FOR             shift and go to state 31
    BREAK           shift and go to state 32
    CONTINUE        shift and go to state 33
    FUNC            shift and go to state 35
    RETURN          shift and go to state 36
    SWITCH          shift and go to state 37
    CONST           shift and go to state 38
    INTERFACE       shift and go to state 39
    CORIZQ          shift and go to state 34
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    instruccion                    shift and go to state 51
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    declaration                    shift and go to state 6
    assignment                     shift and go to state 7
    whileinstruction               shift and go to state 8
    instancia                      shift and go to state 9
    operadores                     shift and go to state 10
    forinstruction                 shift and go to state 11
    breakstmt                      shift and go to state 12
    continuestmt                   shift and go to state 13
    arraydeclaration               shift and go to state 14
    functionstmt                   shift and go to state 15
    call                           shift and go to state 16
    returnstmt                     shift and go to state 17
    pusheo                         shift and go to state 18
    switch_statement               shift and go to state 19
    constante                      shift and go to state 20
    interfacecreation              shift and go to state 21
    interdeclaration               shift and go to state 22
    assigmentarray                 shift and go to state 23
    expresion                      shift and go to state 27
    listArray2                     shift and go to state 40
    listArray                      shift and go to state 49

state 3

    (3) block -> instruccion .

    CONSOLE         reduce using rule 3 (block -> instruccion .)
    IF              reduce using rule 3 (block -> instruccion .)
    VAR             reduce using rule 3 (block -> instruccion .)
    WHILE           reduce using rule 3 (block -> instruccion .)
    ID              reduce using rule 3 (block -> instruccion .)
    FOR             reduce using rule 3 (block -> instruccion .)
    BREAK           reduce using rule 3 (block -> instruccion .)
    CONTINUE        reduce using rule 3 (block -> instruccion .)
    FUNC            reduce using rule 3 (block -> instruccion .)
    RETURN          reduce using rule 3 (block -> instruccion .)
    SWITCH          reduce using rule 3 (block -> instruccion .)
    CONST           reduce using rule 3 (block -> instruccion .)
    INTERFACE       reduce using rule 3 (block -> instruccion .)
    CORIZQ          reduce using rule 3 (block -> instruccion .)
    PARSEINT        reduce using rule 3 (block -> instruccion .)
    PARSEFLOAT      reduce using rule 3 (block -> instruccion .)
    TYPEOF          reduce using rule 3 (block -> instruccion .)
    NOT             reduce using rule 3 (block -> instruccion .)
    MENOS           reduce using rule 3 (block -> instruccion .)
    PARIZQ          reduce using rule 3 (block -> instruccion .)
    ENTERO          reduce using rule 3 (block -> instruccion .)
    BOOLEANO        reduce using rule 3 (block -> instruccion .)
    CADENA          reduce using rule 3 (block -> instruccion .)
    DECIMAL         reduce using rule 3 (block -> instruccion .)
    $end            reduce using rule 3 (block -> instruccion .)
    CHR_DER         reduce using rule 3 (block -> instruccion .)
    DEFAULT         reduce using rule 3 (block -> instruccion .)
    CASE            reduce using rule 3 (block -> instruccion .)


state 4

    (4) instruccion -> print . PUNTOCOMA

    PUNTOCOMA       shift and go to state 52


state 5

    (5) instruccion -> ifinstruction .

    CONSOLE         reduce using rule 5 (instruccion -> ifinstruction .)
    IF              reduce using rule 5 (instruccion -> ifinstruction .)
    VAR             reduce using rule 5 (instruccion -> ifinstruction .)
    WHILE           reduce using rule 5 (instruccion -> ifinstruction .)
    ID              reduce using rule 5 (instruccion -> ifinstruction .)
    FOR             reduce using rule 5 (instruccion -> ifinstruction .)
    BREAK           reduce using rule 5 (instruccion -> ifinstruction .)
    CONTINUE        reduce using rule 5 (instruccion -> ifinstruction .)
    FUNC            reduce using rule 5 (instruccion -> ifinstruction .)
    RETURN          reduce using rule 5 (instruccion -> ifinstruction .)
    SWITCH          reduce using rule 5 (instruccion -> ifinstruction .)
    CONST           reduce using rule 5 (instruccion -> ifinstruction .)
    INTERFACE       reduce using rule 5 (instruccion -> ifinstruction .)
    CORIZQ          reduce using rule 5 (instruccion -> ifinstruction .)
    PARSEINT        reduce using rule 5 (instruccion -> ifinstruction .)
    PARSEFLOAT      reduce using rule 5 (instruccion -> ifinstruction .)
    TYPEOF          reduce using rule 5 (instruccion -> ifinstruction .)
    NOT             reduce using rule 5 (instruccion -> ifinstruction .)
    MENOS           reduce using rule 5 (instruccion -> ifinstruction .)
    PARIZQ          reduce using rule 5 (instruccion -> ifinstruction .)
    ENTERO          reduce using rule 5 (instruccion -> ifinstruction .)
    BOOLEANO        reduce using rule 5 (instruccion -> ifinstruction .)
    CADENA          reduce using rule 5 (instruccion -> ifinstruction .)
    DECIMAL         reduce using rule 5 (instruccion -> ifinstruction .)
    $end            reduce using rule 5 (instruccion -> ifinstruction .)
    CHR_DER         reduce using rule 5 (instruccion -> ifinstruction .)
    DEFAULT         reduce using rule 5 (instruccion -> ifinstruction .)
    CASE            reduce using rule 5 (instruccion -> ifinstruction .)


state 6

    (6) instruccion -> declaration .

    CONSOLE         reduce using rule 6 (instruccion -> declaration .)
    IF              reduce using rule 6 (instruccion -> declaration .)
    VAR             reduce using rule 6 (instruccion -> declaration .)
    WHILE           reduce using rule 6 (instruccion -> declaration .)
    ID              reduce using rule 6 (instruccion -> declaration .)
    FOR             reduce using rule 6 (instruccion -> declaration .)
    BREAK           reduce using rule 6 (instruccion -> declaration .)
    CONTINUE        reduce using rule 6 (instruccion -> declaration .)
    FUNC            reduce using rule 6 (instruccion -> declaration .)
    RETURN          reduce using rule 6 (instruccion -> declaration .)
    SWITCH          reduce using rule 6 (instruccion -> declaration .)
    CONST           reduce using rule 6 (instruccion -> declaration .)
    INTERFACE       reduce using rule 6 (instruccion -> declaration .)
    CORIZQ          reduce using rule 6 (instruccion -> declaration .)
    PARSEINT        reduce using rule 6 (instruccion -> declaration .)
    PARSEFLOAT      reduce using rule 6 (instruccion -> declaration .)
    TYPEOF          reduce using rule 6 (instruccion -> declaration .)
    NOT             reduce using rule 6 (instruccion -> declaration .)
    MENOS           reduce using rule 6 (instruccion -> declaration .)
    PARIZQ          reduce using rule 6 (instruccion -> declaration .)
    ENTERO          reduce using rule 6 (instruccion -> declaration .)
    BOOLEANO        reduce using rule 6 (instruccion -> declaration .)
    CADENA          reduce using rule 6 (instruccion -> declaration .)
    DECIMAL         reduce using rule 6 (instruccion -> declaration .)
    $end            reduce using rule 6 (instruccion -> declaration .)
    CHR_DER         reduce using rule 6 (instruccion -> declaration .)
    DEFAULT         reduce using rule 6 (instruccion -> declaration .)
    CASE            reduce using rule 6 (instruccion -> declaration .)


state 7

    (7) instruccion -> assignment .

    CONSOLE         reduce using rule 7 (instruccion -> assignment .)
    IF              reduce using rule 7 (instruccion -> assignment .)
    VAR             reduce using rule 7 (instruccion -> assignment .)
    WHILE           reduce using rule 7 (instruccion -> assignment .)
    ID              reduce using rule 7 (instruccion -> assignment .)
    FOR             reduce using rule 7 (instruccion -> assignment .)
    BREAK           reduce using rule 7 (instruccion -> assignment .)
    CONTINUE        reduce using rule 7 (instruccion -> assignment .)
    FUNC            reduce using rule 7 (instruccion -> assignment .)
    RETURN          reduce using rule 7 (instruccion -> assignment .)
    SWITCH          reduce using rule 7 (instruccion -> assignment .)
    CONST           reduce using rule 7 (instruccion -> assignment .)
    INTERFACE       reduce using rule 7 (instruccion -> assignment .)
    CORIZQ          reduce using rule 7 (instruccion -> assignment .)
    PARSEINT        reduce using rule 7 (instruccion -> assignment .)
    PARSEFLOAT      reduce using rule 7 (instruccion -> assignment .)
    TYPEOF          reduce using rule 7 (instruccion -> assignment .)
    NOT             reduce using rule 7 (instruccion -> assignment .)
    MENOS           reduce using rule 7 (instruccion -> assignment .)
    PARIZQ          reduce using rule 7 (instruccion -> assignment .)
    ENTERO          reduce using rule 7 (instruccion -> assignment .)
    BOOLEANO        reduce using rule 7 (instruccion -> assignment .)
    CADENA          reduce using rule 7 (instruccion -> assignment .)
    DECIMAL         reduce using rule 7 (instruccion -> assignment .)
    $end            reduce using rule 7 (instruccion -> assignment .)
    CHR_DER         reduce using rule 7 (instruccion -> assignment .)
    DEFAULT         reduce using rule 7 (instruccion -> assignment .)
    CASE            reduce using rule 7 (instruccion -> assignment .)


state 8

    (8) instruccion -> whileinstruction .

    CONSOLE         reduce using rule 8 (instruccion -> whileinstruction .)
    IF              reduce using rule 8 (instruccion -> whileinstruction .)
    VAR             reduce using rule 8 (instruccion -> whileinstruction .)
    WHILE           reduce using rule 8 (instruccion -> whileinstruction .)
    ID              reduce using rule 8 (instruccion -> whileinstruction .)
    FOR             reduce using rule 8 (instruccion -> whileinstruction .)
    BREAK           reduce using rule 8 (instruccion -> whileinstruction .)
    CONTINUE        reduce using rule 8 (instruccion -> whileinstruction .)
    FUNC            reduce using rule 8 (instruccion -> whileinstruction .)
    RETURN          reduce using rule 8 (instruccion -> whileinstruction .)
    SWITCH          reduce using rule 8 (instruccion -> whileinstruction .)
    CONST           reduce using rule 8 (instruccion -> whileinstruction .)
    INTERFACE       reduce using rule 8 (instruccion -> whileinstruction .)
    CORIZQ          reduce using rule 8 (instruccion -> whileinstruction .)
    PARSEINT        reduce using rule 8 (instruccion -> whileinstruction .)
    PARSEFLOAT      reduce using rule 8 (instruccion -> whileinstruction .)
    TYPEOF          reduce using rule 8 (instruccion -> whileinstruction .)
    NOT             reduce using rule 8 (instruccion -> whileinstruction .)
    MENOS           reduce using rule 8 (instruccion -> whileinstruction .)
    PARIZQ          reduce using rule 8 (instruccion -> whileinstruction .)
    ENTERO          reduce using rule 8 (instruccion -> whileinstruction .)
    BOOLEANO        reduce using rule 8 (instruccion -> whileinstruction .)
    CADENA          reduce using rule 8 (instruccion -> whileinstruction .)
    DECIMAL         reduce using rule 8 (instruccion -> whileinstruction .)
    $end            reduce using rule 8 (instruccion -> whileinstruction .)
    CHR_DER         reduce using rule 8 (instruccion -> whileinstruction .)
    DEFAULT         reduce using rule 8 (instruccion -> whileinstruction .)
    CASE            reduce using rule 8 (instruccion -> whileinstruction .)


state 9

    (9) instruccion -> instancia . PUNTOCOMA

    PUNTOCOMA       shift and go to state 53


state 10

    (10) instruccion -> operadores . PUNTOCOMA

    PUNTOCOMA       shift and go to state 54


state 11

    (11) instruccion -> forinstruction .

    CONSOLE         reduce using rule 11 (instruccion -> forinstruction .)
    IF              reduce using rule 11 (instruccion -> forinstruction .)
    VAR             reduce using rule 11 (instruccion -> forinstruction .)
    WHILE           reduce using rule 11 (instruccion -> forinstruction .)
    ID              reduce using rule 11 (instruccion -> forinstruction .)
    FOR             reduce using rule 11 (instruccion -> forinstruction .)
    BREAK           reduce using rule 11 (instruccion -> forinstruction .)
    CONTINUE        reduce using rule 11 (instruccion -> forinstruction .)
    FUNC            reduce using rule 11 (instruccion -> forinstruction .)
    RETURN          reduce using rule 11 (instruccion -> forinstruction .)
    SWITCH          reduce using rule 11 (instruccion -> forinstruction .)
    CONST           reduce using rule 11 (instruccion -> forinstruction .)
    INTERFACE       reduce using rule 11 (instruccion -> forinstruction .)
    CORIZQ          reduce using rule 11 (instruccion -> forinstruction .)
    PARSEINT        reduce using rule 11 (instruccion -> forinstruction .)
    PARSEFLOAT      reduce using rule 11 (instruccion -> forinstruction .)
    TYPEOF          reduce using rule 11 (instruccion -> forinstruction .)
    NOT             reduce using rule 11 (instruccion -> forinstruction .)
    MENOS           reduce using rule 11 (instruccion -> forinstruction .)
    PARIZQ          reduce using rule 11 (instruccion -> forinstruction .)
    ENTERO          reduce using rule 11 (instruccion -> forinstruction .)
    BOOLEANO        reduce using rule 11 (instruccion -> forinstruction .)
    CADENA          reduce using rule 11 (instruccion -> forinstruction .)
    DECIMAL         reduce using rule 11 (instruccion -> forinstruction .)
    $end            reduce using rule 11 (instruccion -> forinstruction .)
    CHR_DER         reduce using rule 11 (instruccion -> forinstruction .)
    DEFAULT         reduce using rule 11 (instruccion -> forinstruction .)
    CASE            reduce using rule 11 (instruccion -> forinstruction .)


state 12

    (12) instruccion -> breakstmt . PUNTOCOMA

    PUNTOCOMA       shift and go to state 55


state 13

    (13) instruccion -> continuestmt .

    CONSOLE         reduce using rule 13 (instruccion -> continuestmt .)
    IF              reduce using rule 13 (instruccion -> continuestmt .)
    VAR             reduce using rule 13 (instruccion -> continuestmt .)
    WHILE           reduce using rule 13 (instruccion -> continuestmt .)
    ID              reduce using rule 13 (instruccion -> continuestmt .)
    FOR             reduce using rule 13 (instruccion -> continuestmt .)
    BREAK           reduce using rule 13 (instruccion -> continuestmt .)
    CONTINUE        reduce using rule 13 (instruccion -> continuestmt .)
    FUNC            reduce using rule 13 (instruccion -> continuestmt .)
    RETURN          reduce using rule 13 (instruccion -> continuestmt .)
    SWITCH          reduce using rule 13 (instruccion -> continuestmt .)
    CONST           reduce using rule 13 (instruccion -> continuestmt .)
    INTERFACE       reduce using rule 13 (instruccion -> continuestmt .)
    CORIZQ          reduce using rule 13 (instruccion -> continuestmt .)
    PARSEINT        reduce using rule 13 (instruccion -> continuestmt .)
    PARSEFLOAT      reduce using rule 13 (instruccion -> continuestmt .)
    TYPEOF          reduce using rule 13 (instruccion -> continuestmt .)
    NOT             reduce using rule 13 (instruccion -> continuestmt .)
    MENOS           reduce using rule 13 (instruccion -> continuestmt .)
    PARIZQ          reduce using rule 13 (instruccion -> continuestmt .)
    ENTERO          reduce using rule 13 (instruccion -> continuestmt .)
    BOOLEANO        reduce using rule 13 (instruccion -> continuestmt .)
    CADENA          reduce using rule 13 (instruccion -> continuestmt .)
    DECIMAL         reduce using rule 13 (instruccion -> continuestmt .)
    $end            reduce using rule 13 (instruccion -> continuestmt .)
    CHR_DER         reduce using rule 13 (instruccion -> continuestmt .)
    DEFAULT         reduce using rule 13 (instruccion -> continuestmt .)
    CASE            reduce using rule 13 (instruccion -> continuestmt .)


state 14

    (14) instruccion -> arraydeclaration .

    CONSOLE         reduce using rule 14 (instruccion -> arraydeclaration .)
    IF              reduce using rule 14 (instruccion -> arraydeclaration .)
    VAR             reduce using rule 14 (instruccion -> arraydeclaration .)
    WHILE           reduce using rule 14 (instruccion -> arraydeclaration .)
    ID              reduce using rule 14 (instruccion -> arraydeclaration .)
    FOR             reduce using rule 14 (instruccion -> arraydeclaration .)
    BREAK           reduce using rule 14 (instruccion -> arraydeclaration .)
    CONTINUE        reduce using rule 14 (instruccion -> arraydeclaration .)
    FUNC            reduce using rule 14 (instruccion -> arraydeclaration .)
    RETURN          reduce using rule 14 (instruccion -> arraydeclaration .)
    SWITCH          reduce using rule 14 (instruccion -> arraydeclaration .)
    CONST           reduce using rule 14 (instruccion -> arraydeclaration .)
    INTERFACE       reduce using rule 14 (instruccion -> arraydeclaration .)
    CORIZQ          reduce using rule 14 (instruccion -> arraydeclaration .)
    PARSEINT        reduce using rule 14 (instruccion -> arraydeclaration .)
    PARSEFLOAT      reduce using rule 14 (instruccion -> arraydeclaration .)
    TYPEOF          reduce using rule 14 (instruccion -> arraydeclaration .)
    NOT             reduce using rule 14 (instruccion -> arraydeclaration .)
    MENOS           reduce using rule 14 (instruccion -> arraydeclaration .)
    PARIZQ          reduce using rule 14 (instruccion -> arraydeclaration .)
    ENTERO          reduce using rule 14 (instruccion -> arraydeclaration .)
    BOOLEANO        reduce using rule 14 (instruccion -> arraydeclaration .)
    CADENA          reduce using rule 14 (instruccion -> arraydeclaration .)
    DECIMAL         reduce using rule 14 (instruccion -> arraydeclaration .)
    $end            reduce using rule 14 (instruccion -> arraydeclaration .)
    CHR_DER         reduce using rule 14 (instruccion -> arraydeclaration .)
    DEFAULT         reduce using rule 14 (instruccion -> arraydeclaration .)
    CASE            reduce using rule 14 (instruccion -> arraydeclaration .)


state 15

    (15) instruccion -> functionstmt .

    CONSOLE         reduce using rule 15 (instruccion -> functionstmt .)
    IF              reduce using rule 15 (instruccion -> functionstmt .)
    VAR             reduce using rule 15 (instruccion -> functionstmt .)
    WHILE           reduce using rule 15 (instruccion -> functionstmt .)
    ID              reduce using rule 15 (instruccion -> functionstmt .)
    FOR             reduce using rule 15 (instruccion -> functionstmt .)
    BREAK           reduce using rule 15 (instruccion -> functionstmt .)
    CONTINUE        reduce using rule 15 (instruccion -> functionstmt .)
    FUNC            reduce using rule 15 (instruccion -> functionstmt .)
    RETURN          reduce using rule 15 (instruccion -> functionstmt .)
    SWITCH          reduce using rule 15 (instruccion -> functionstmt .)
    CONST           reduce using rule 15 (instruccion -> functionstmt .)
    INTERFACE       reduce using rule 15 (instruccion -> functionstmt .)
    CORIZQ          reduce using rule 15 (instruccion -> functionstmt .)
    PARSEINT        reduce using rule 15 (instruccion -> functionstmt .)
    PARSEFLOAT      reduce using rule 15 (instruccion -> functionstmt .)
    TYPEOF          reduce using rule 15 (instruccion -> functionstmt .)
    NOT             reduce using rule 15 (instruccion -> functionstmt .)
    MENOS           reduce using rule 15 (instruccion -> functionstmt .)
    PARIZQ          reduce using rule 15 (instruccion -> functionstmt .)
    ENTERO          reduce using rule 15 (instruccion -> functionstmt .)
    BOOLEANO        reduce using rule 15 (instruccion -> functionstmt .)
    CADENA          reduce using rule 15 (instruccion -> functionstmt .)
    DECIMAL         reduce using rule 15 (instruccion -> functionstmt .)
    $end            reduce using rule 15 (instruccion -> functionstmt .)
    CHR_DER         reduce using rule 15 (instruccion -> functionstmt .)
    DEFAULT         reduce using rule 15 (instruccion -> functionstmt .)
    CASE            reduce using rule 15 (instruccion -> functionstmt .)


state 16

    (16) instruccion -> call .

    CONSOLE         reduce using rule 16 (instruccion -> call .)
    IF              reduce using rule 16 (instruccion -> call .)
    VAR             reduce using rule 16 (instruccion -> call .)
    WHILE           reduce using rule 16 (instruccion -> call .)
    ID              reduce using rule 16 (instruccion -> call .)
    FOR             reduce using rule 16 (instruccion -> call .)
    BREAK           reduce using rule 16 (instruccion -> call .)
    CONTINUE        reduce using rule 16 (instruccion -> call .)
    FUNC            reduce using rule 16 (instruccion -> call .)
    RETURN          reduce using rule 16 (instruccion -> call .)
    SWITCH          reduce using rule 16 (instruccion -> call .)
    CONST           reduce using rule 16 (instruccion -> call .)
    INTERFACE       reduce using rule 16 (instruccion -> call .)
    CORIZQ          reduce using rule 16 (instruccion -> call .)
    PARSEINT        reduce using rule 16 (instruccion -> call .)
    PARSEFLOAT      reduce using rule 16 (instruccion -> call .)
    TYPEOF          reduce using rule 16 (instruccion -> call .)
    NOT             reduce using rule 16 (instruccion -> call .)
    MENOS           reduce using rule 16 (instruccion -> call .)
    PARIZQ          reduce using rule 16 (instruccion -> call .)
    ENTERO          reduce using rule 16 (instruccion -> call .)
    BOOLEANO        reduce using rule 16 (instruccion -> call .)
    CADENA          reduce using rule 16 (instruccion -> call .)
    DECIMAL         reduce using rule 16 (instruccion -> call .)
    $end            reduce using rule 16 (instruccion -> call .)
    CHR_DER         reduce using rule 16 (instruccion -> call .)
    DEFAULT         reduce using rule 16 (instruccion -> call .)
    CASE            reduce using rule 16 (instruccion -> call .)


state 17

    (17) instruccion -> returnstmt .

    CONSOLE         reduce using rule 17 (instruccion -> returnstmt .)
    IF              reduce using rule 17 (instruccion -> returnstmt .)
    VAR             reduce using rule 17 (instruccion -> returnstmt .)
    WHILE           reduce using rule 17 (instruccion -> returnstmt .)
    ID              reduce using rule 17 (instruccion -> returnstmt .)
    FOR             reduce using rule 17 (instruccion -> returnstmt .)
    BREAK           reduce using rule 17 (instruccion -> returnstmt .)
    CONTINUE        reduce using rule 17 (instruccion -> returnstmt .)
    FUNC            reduce using rule 17 (instruccion -> returnstmt .)
    RETURN          reduce using rule 17 (instruccion -> returnstmt .)
    SWITCH          reduce using rule 17 (instruccion -> returnstmt .)
    CONST           reduce using rule 17 (instruccion -> returnstmt .)
    INTERFACE       reduce using rule 17 (instruccion -> returnstmt .)
    CORIZQ          reduce using rule 17 (instruccion -> returnstmt .)
    PARSEINT        reduce using rule 17 (instruccion -> returnstmt .)
    PARSEFLOAT      reduce using rule 17 (instruccion -> returnstmt .)
    TYPEOF          reduce using rule 17 (instruccion -> returnstmt .)
    NOT             reduce using rule 17 (instruccion -> returnstmt .)
    MENOS           reduce using rule 17 (instruccion -> returnstmt .)
    PARIZQ          reduce using rule 17 (instruccion -> returnstmt .)
    ENTERO          reduce using rule 17 (instruccion -> returnstmt .)
    BOOLEANO        reduce using rule 17 (instruccion -> returnstmt .)
    CADENA          reduce using rule 17 (instruccion -> returnstmt .)
    DECIMAL         reduce using rule 17 (instruccion -> returnstmt .)
    $end            reduce using rule 17 (instruccion -> returnstmt .)
    CHR_DER         reduce using rule 17 (instruccion -> returnstmt .)
    DEFAULT         reduce using rule 17 (instruccion -> returnstmt .)
    CASE            reduce using rule 17 (instruccion -> returnstmt .)


state 18

    (18) instruccion -> pusheo .

    CONSOLE         reduce using rule 18 (instruccion -> pusheo .)
    IF              reduce using rule 18 (instruccion -> pusheo .)
    VAR             reduce using rule 18 (instruccion -> pusheo .)
    WHILE           reduce using rule 18 (instruccion -> pusheo .)
    ID              reduce using rule 18 (instruccion -> pusheo .)
    FOR             reduce using rule 18 (instruccion -> pusheo .)
    BREAK           reduce using rule 18 (instruccion -> pusheo .)
    CONTINUE        reduce using rule 18 (instruccion -> pusheo .)
    FUNC            reduce using rule 18 (instruccion -> pusheo .)
    RETURN          reduce using rule 18 (instruccion -> pusheo .)
    SWITCH          reduce using rule 18 (instruccion -> pusheo .)
    CONST           reduce using rule 18 (instruccion -> pusheo .)
    INTERFACE       reduce using rule 18 (instruccion -> pusheo .)
    CORIZQ          reduce using rule 18 (instruccion -> pusheo .)
    PARSEINT        reduce using rule 18 (instruccion -> pusheo .)
    PARSEFLOAT      reduce using rule 18 (instruccion -> pusheo .)
    TYPEOF          reduce using rule 18 (instruccion -> pusheo .)
    NOT             reduce using rule 18 (instruccion -> pusheo .)
    MENOS           reduce using rule 18 (instruccion -> pusheo .)
    PARIZQ          reduce using rule 18 (instruccion -> pusheo .)
    ENTERO          reduce using rule 18 (instruccion -> pusheo .)
    BOOLEANO        reduce using rule 18 (instruccion -> pusheo .)
    CADENA          reduce using rule 18 (instruccion -> pusheo .)
    DECIMAL         reduce using rule 18 (instruccion -> pusheo .)
    $end            reduce using rule 18 (instruccion -> pusheo .)
    CHR_DER         reduce using rule 18 (instruccion -> pusheo .)
    DEFAULT         reduce using rule 18 (instruccion -> pusheo .)
    CASE            reduce using rule 18 (instruccion -> pusheo .)


state 19

    (19) instruccion -> switch_statement .

    CONSOLE         reduce using rule 19 (instruccion -> switch_statement .)
    IF              reduce using rule 19 (instruccion -> switch_statement .)
    VAR             reduce using rule 19 (instruccion -> switch_statement .)
    WHILE           reduce using rule 19 (instruccion -> switch_statement .)
    ID              reduce using rule 19 (instruccion -> switch_statement .)
    FOR             reduce using rule 19 (instruccion -> switch_statement .)
    BREAK           reduce using rule 19 (instruccion -> switch_statement .)
    CONTINUE        reduce using rule 19 (instruccion -> switch_statement .)
    FUNC            reduce using rule 19 (instruccion -> switch_statement .)
    RETURN          reduce using rule 19 (instruccion -> switch_statement .)
    SWITCH          reduce using rule 19 (instruccion -> switch_statement .)
    CONST           reduce using rule 19 (instruccion -> switch_statement .)
    INTERFACE       reduce using rule 19 (instruccion -> switch_statement .)
    CORIZQ          reduce using rule 19 (instruccion -> switch_statement .)
    PARSEINT        reduce using rule 19 (instruccion -> switch_statement .)
    PARSEFLOAT      reduce using rule 19 (instruccion -> switch_statement .)
    TYPEOF          reduce using rule 19 (instruccion -> switch_statement .)
    NOT             reduce using rule 19 (instruccion -> switch_statement .)
    MENOS           reduce using rule 19 (instruccion -> switch_statement .)
    PARIZQ          reduce using rule 19 (instruccion -> switch_statement .)
    ENTERO          reduce using rule 19 (instruccion -> switch_statement .)
    BOOLEANO        reduce using rule 19 (instruccion -> switch_statement .)
    CADENA          reduce using rule 19 (instruccion -> switch_statement .)
    DECIMAL         reduce using rule 19 (instruccion -> switch_statement .)
    $end            reduce using rule 19 (instruccion -> switch_statement .)
    CHR_DER         reduce using rule 19 (instruccion -> switch_statement .)
    DEFAULT         reduce using rule 19 (instruccion -> switch_statement .)
    CASE            reduce using rule 19 (instruccion -> switch_statement .)


state 20

    (20) instruccion -> constante .

    CONSOLE         reduce using rule 20 (instruccion -> constante .)
    IF              reduce using rule 20 (instruccion -> constante .)
    VAR             reduce using rule 20 (instruccion -> constante .)
    WHILE           reduce using rule 20 (instruccion -> constante .)
    ID              reduce using rule 20 (instruccion -> constante .)
    FOR             reduce using rule 20 (instruccion -> constante .)
    BREAK           reduce using rule 20 (instruccion -> constante .)
    CONTINUE        reduce using rule 20 (instruccion -> constante .)
    FUNC            reduce using rule 20 (instruccion -> constante .)
    RETURN          reduce using rule 20 (instruccion -> constante .)
    SWITCH          reduce using rule 20 (instruccion -> constante .)
    CONST           reduce using rule 20 (instruccion -> constante .)
    INTERFACE       reduce using rule 20 (instruccion -> constante .)
    CORIZQ          reduce using rule 20 (instruccion -> constante .)
    PARSEINT        reduce using rule 20 (instruccion -> constante .)
    PARSEFLOAT      reduce using rule 20 (instruccion -> constante .)
    TYPEOF          reduce using rule 20 (instruccion -> constante .)
    NOT             reduce using rule 20 (instruccion -> constante .)
    MENOS           reduce using rule 20 (instruccion -> constante .)
    PARIZQ          reduce using rule 20 (instruccion -> constante .)
    ENTERO          reduce using rule 20 (instruccion -> constante .)
    BOOLEANO        reduce using rule 20 (instruccion -> constante .)
    CADENA          reduce using rule 20 (instruccion -> constante .)
    DECIMAL         reduce using rule 20 (instruccion -> constante .)
    $end            reduce using rule 20 (instruccion -> constante .)
    CHR_DER         reduce using rule 20 (instruccion -> constante .)
    DEFAULT         reduce using rule 20 (instruccion -> constante .)
    CASE            reduce using rule 20 (instruccion -> constante .)


state 21

    (21) instruccion -> interfacecreation .

    CONSOLE         reduce using rule 21 (instruccion -> interfacecreation .)
    IF              reduce using rule 21 (instruccion -> interfacecreation .)
    VAR             reduce using rule 21 (instruccion -> interfacecreation .)
    WHILE           reduce using rule 21 (instruccion -> interfacecreation .)
    ID              reduce using rule 21 (instruccion -> interfacecreation .)
    FOR             reduce using rule 21 (instruccion -> interfacecreation .)
    BREAK           reduce using rule 21 (instruccion -> interfacecreation .)
    CONTINUE        reduce using rule 21 (instruccion -> interfacecreation .)
    FUNC            reduce using rule 21 (instruccion -> interfacecreation .)
    RETURN          reduce using rule 21 (instruccion -> interfacecreation .)
    SWITCH          reduce using rule 21 (instruccion -> interfacecreation .)
    CONST           reduce using rule 21 (instruccion -> interfacecreation .)
    INTERFACE       reduce using rule 21 (instruccion -> interfacecreation .)
    CORIZQ          reduce using rule 21 (instruccion -> interfacecreation .)
    PARSEINT        reduce using rule 21 (instruccion -> interfacecreation .)
    PARSEFLOAT      reduce using rule 21 (instruccion -> interfacecreation .)
    TYPEOF          reduce using rule 21 (instruccion -> interfacecreation .)
    NOT             reduce using rule 21 (instruccion -> interfacecreation .)
    MENOS           reduce using rule 21 (instruccion -> interfacecreation .)
    PARIZQ          reduce using rule 21 (instruccion -> interfacecreation .)
    ENTERO          reduce using rule 21 (instruccion -> interfacecreation .)
    BOOLEANO        reduce using rule 21 (instruccion -> interfacecreation .)
    CADENA          reduce using rule 21 (instruccion -> interfacecreation .)
    DECIMAL         reduce using rule 21 (instruccion -> interfacecreation .)
    $end            reduce using rule 21 (instruccion -> interfacecreation .)
    CHR_DER         reduce using rule 21 (instruccion -> interfacecreation .)
    DEFAULT         reduce using rule 21 (instruccion -> interfacecreation .)
    CASE            reduce using rule 21 (instruccion -> interfacecreation .)


state 22

    (22) instruccion -> interdeclaration .

    CONSOLE         reduce using rule 22 (instruccion -> interdeclaration .)
    IF              reduce using rule 22 (instruccion -> interdeclaration .)
    VAR             reduce using rule 22 (instruccion -> interdeclaration .)
    WHILE           reduce using rule 22 (instruccion -> interdeclaration .)
    ID              reduce using rule 22 (instruccion -> interdeclaration .)
    FOR             reduce using rule 22 (instruccion -> interdeclaration .)
    BREAK           reduce using rule 22 (instruccion -> interdeclaration .)
    CONTINUE        reduce using rule 22 (instruccion -> interdeclaration .)
    FUNC            reduce using rule 22 (instruccion -> interdeclaration .)
    RETURN          reduce using rule 22 (instruccion -> interdeclaration .)
    SWITCH          reduce using rule 22 (instruccion -> interdeclaration .)
    CONST           reduce using rule 22 (instruccion -> interdeclaration .)
    INTERFACE       reduce using rule 22 (instruccion -> interdeclaration .)
    CORIZQ          reduce using rule 22 (instruccion -> interdeclaration .)
    PARSEINT        reduce using rule 22 (instruccion -> interdeclaration .)
    PARSEFLOAT      reduce using rule 22 (instruccion -> interdeclaration .)
    TYPEOF          reduce using rule 22 (instruccion -> interdeclaration .)
    NOT             reduce using rule 22 (instruccion -> interdeclaration .)
    MENOS           reduce using rule 22 (instruccion -> interdeclaration .)
    PARIZQ          reduce using rule 22 (instruccion -> interdeclaration .)
    ENTERO          reduce using rule 22 (instruccion -> interdeclaration .)
    BOOLEANO        reduce using rule 22 (instruccion -> interdeclaration .)
    CADENA          reduce using rule 22 (instruccion -> interdeclaration .)
    DECIMAL         reduce using rule 22 (instruccion -> interdeclaration .)
    $end            reduce using rule 22 (instruccion -> interdeclaration .)
    CHR_DER         reduce using rule 22 (instruccion -> interdeclaration .)
    DEFAULT         reduce using rule 22 (instruccion -> interdeclaration .)
    CASE            reduce using rule 22 (instruccion -> interdeclaration .)


state 23

    (23) instruccion -> assigmentarray .

    CONSOLE         reduce using rule 23 (instruccion -> assigmentarray .)
    IF              reduce using rule 23 (instruccion -> assigmentarray .)
    VAR             reduce using rule 23 (instruccion -> assigmentarray .)
    WHILE           reduce using rule 23 (instruccion -> assigmentarray .)
    ID              reduce using rule 23 (instruccion -> assigmentarray .)
    FOR             reduce using rule 23 (instruccion -> assigmentarray .)
    BREAK           reduce using rule 23 (instruccion -> assigmentarray .)
    CONTINUE        reduce using rule 23 (instruccion -> assigmentarray .)
    FUNC            reduce using rule 23 (instruccion -> assigmentarray .)
    RETURN          reduce using rule 23 (instruccion -> assigmentarray .)
    SWITCH          reduce using rule 23 (instruccion -> assigmentarray .)
    CONST           reduce using rule 23 (instruccion -> assigmentarray .)
    INTERFACE       reduce using rule 23 (instruccion -> assigmentarray .)
    CORIZQ          reduce using rule 23 (instruccion -> assigmentarray .)
    PARSEINT        reduce using rule 23 (instruccion -> assigmentarray .)
    PARSEFLOAT      reduce using rule 23 (instruccion -> assigmentarray .)
    TYPEOF          reduce using rule 23 (instruccion -> assigmentarray .)
    NOT             reduce using rule 23 (instruccion -> assigmentarray .)
    MENOS           reduce using rule 23 (instruccion -> assigmentarray .)
    PARIZQ          reduce using rule 23 (instruccion -> assigmentarray .)
    ENTERO          reduce using rule 23 (instruccion -> assigmentarray .)
    BOOLEANO        reduce using rule 23 (instruccion -> assigmentarray .)
    CADENA          reduce using rule 23 (instruccion -> assigmentarray .)
    DECIMAL         reduce using rule 23 (instruccion -> assigmentarray .)
    $end            reduce using rule 23 (instruccion -> assigmentarray .)
    CHR_DER         reduce using rule 23 (instruccion -> assigmentarray .)
    DEFAULT         reduce using rule 23 (instruccion -> assigmentarray .)
    CASE            reduce using rule 23 (instruccion -> assigmentarray .)


state 24

    (24) print -> CONSOLE . PUNTO LOG PARIZQ expressionList PARDER

    PUNTO           shift and go to state 56


state 25

    (96) expresion -> PARIZQ . expresion PARDER
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CORIZQ          shift and go to state 34
    ID              shift and go to state 58
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expresion                      shift and go to state 57
    listArray                      shift and go to state 49

state 26

    (51) ifinstruction -> IF . PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER
    (52) ifinstruction -> IF . PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE ifinstruction
    (53) ifinstruction -> IF . PARIZQ expresion PARDER CHR_IZQ block CHR_DER

    PARIZQ          shift and go to state 59


state 27

    (37) operadores -> expresion . MAS MAS
    (48) expresion -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIVIDIDO expresion
    (82) expresion -> expresion . MOD expresion
    (85) expresion -> expresion . MENORQUE expresion
    (86) expresion -> expresion . MAYORQUE expresion
    (87) expresion -> expresion . MENORIGUAL expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . TERN expresion DOSPUNTOS expresion
    (90) expresion -> expresion . AND expresion
    (91) expresion -> expresion . OR expresion
    (93) expresion -> expresion . IGUALDAD expresion
    (94) expresion -> expresion . DIFERENTE expresion

    MAS             shift and go to state 60
    PUNTO           shift and go to state 61
    MENOS           shift and go to state 62
    POR             shift and go to state 63
    DIVIDIDO        shift and go to state 64
    MOD             shift and go to state 65
    MENORQUE        shift and go to state 66
    MAYORQUE        shift and go to state 67
    MENORIGUAL      shift and go to state 68
    MAYORIGUAL      shift and go to state 69
    TERN            shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    IGUALDAD        shift and go to state 73
    DIFERENTE       shift and go to state 74


state 28

    (25) declaration -> VAR . ID DOSPUNTOS type IGUAL expresion PUNTOCOMA
    (27) assignment -> VAR . ID IGUAL expresion PUNTOCOMA
    (29) arraydeclaration -> VAR . ID DOSPUNTOS type CORIZQ CORDER IGUAL expresion PUNTOCOMA
    (64) interdeclaration -> VAR . ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA

    ID              shift and go to state 75


state 29

    (36) instancia -> ID . IGUAL expresion
    (60) call -> ID . PARIZQ expressionList PARDER PUNTOCOMA
    (61) call -> ID . PARIZQ PARDER PUNTOCOMA
    (34) pusheo -> ID . PUNTO PUSH PARIZQ expresion PARDER PUNTOCOMA
    (31) expresion -> ID . PUNTO LENGHT
    (32) expresion -> ID . PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> ID . PUNTO POP PARIZQ PARDER
    (35) expresion -> ID . PUNTO JOIN PARIZQ PARDER
    (49) expresion -> ID . PUNTO TOSTRING PARIZQ PARDER
    (83) expresion -> ID . PARIZQ expressionList PARDER
    (84) expresion -> ID . PARIZQ PARDER
    (97) expresion -> ID . PUNTO LCASE PARIZQ PARDER
    (98) expresion -> ID . PUNTO UPCASE PARIZQ PARDER
    (111) listArray2 -> ID .
    (114) listArray -> ID .

  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
  ! reduce/reduce conflict for CORIZQ resolved using rule 111 (listArray2 -> ID .)
  ! shift/reduce conflict for PUNTO resolved as shift
    IGUAL           shift and go to state 76
    PARIZQ          shift and go to state 77
    PUNTO           shift and go to state 78
    CORIZQ          reduce using rule 111 (listArray2 -> ID .)
    MAS             reduce using rule 114 (listArray -> ID .)
    MENOS           reduce using rule 114 (listArray -> ID .)
    POR             reduce using rule 114 (listArray -> ID .)
    DIVIDIDO        reduce using rule 114 (listArray -> ID .)
    MOD             reduce using rule 114 (listArray -> ID .)
    MENORQUE        reduce using rule 114 (listArray -> ID .)
    MAYORQUE        reduce using rule 114 (listArray -> ID .)
    MENORIGUAL      reduce using rule 114 (listArray -> ID .)
    MAYORIGUAL      reduce using rule 114 (listArray -> ID .)
    TERN            reduce using rule 114 (listArray -> ID .)
    AND             reduce using rule 114 (listArray -> ID .)
    OR              reduce using rule 114 (listArray -> ID .)
    IGUALDAD        reduce using rule 114 (listArray -> ID .)
    DIFERENTE       reduce using rule 114 (listArray -> ID .)

  ! IGUAL           [ reduce using rule 111 (listArray2 -> ID .) ]
  ! PUNTO           [ reduce using rule 111 (listArray2 -> ID .) ]
  ! CORIZQ          [ reduce using rule 114 (listArray -> ID .) ]
  ! PUNTO           [ reduce using rule 114 (listArray -> ID .) ]


state 30

    (44) whileinstruction -> WHILE . PARIZQ expresion PARDER CHR_IZQ block CHR_DER

    PARIZQ          shift and go to state 79


state 31

    (45) forinstruction -> FOR . PARIZQ declaration expresion PUNTOCOMA operadores PARDER CHR_IZQ block CHR_DER

    PARIZQ          shift and go to state 80


state 32

    (105) breakstmt -> BREAK .

    PUNTOCOMA       reduce using rule 105 (breakstmt -> BREAK .)


state 33

    (104) continuestmt -> CONTINUE . PUNTOCOMA

    PUNTOCOMA       shift and go to state 81


state 34

    (30) expresion -> CORIZQ . expressionList CORDER
    (106) expressionList -> . expressionList COMA expresion
    (107) expressionList -> . expresion
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CORIZQ          shift and go to state 34
    ID              shift and go to state 58
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expressionList                 shift and go to state 82
    expresion                      shift and go to state 83
    listArray                      shift and go to state 49

state 35

    (62) functionstmt -> FUNC . ID funcparams functype CHR_IZQ block CHR_DER

    ID              shift and go to state 84


state 36

    (76) returnstmt -> RETURN . expresion PUNTOCOMA
    (77) returnstmt -> RETURN . PUNTOCOMA
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    PUNTOCOMA       shift and go to state 86
    CORIZQ          shift and go to state 34
    ID              shift and go to state 58
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expresion                      shift and go to state 85
    listArray                      shift and go to state 49

state 37

    (54) switch_statement -> SWITCH . PARIZQ expresion PARDER CHR_IZQ cases_statement default_case CHR_DER
    (55) switch_statement -> SWITCH . PARIZQ expresion PARDER CHR_IZQ cases_statement CHR_DER

    PARIZQ          shift and go to state 87


state 38

    (26) constante -> CONST . ID DOSPUNTOS type IGUAL expresion PUNTOCOMA
    (28) constante -> CONST . ID IGUAL expresion PUNTOCOMA
    (65) interdeclaration -> CONST . ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA

    ID              shift and go to state 88


state 39

    (63) interfacecreation -> INTERFACE . ID CHR_IZQ attributeList CHR_DER

    ID              shift and go to state 89


state 40

    (108) assigmentarray -> listArray2 . IGUAL expresion PUNTOCOMA
    (109) listArray2 -> listArray2 . CORIZQ expresion CORDER
    (110) listArray2 -> listArray2 . PUNTO ID

    IGUAL           shift and go to state 90
    CORIZQ          shift and go to state 91
    PUNTO           shift and go to state 92


state 41

    (46) expresion -> PARSEINT . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 93


state 42

    (47) expresion -> PARSEFLOAT . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 94


state 43

    (50) expresion -> TYPEOF . expresion
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CORIZQ          shift and go to state 34
    ID              shift and go to state 58
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expresion                      shift and go to state 95
    listArray                      shift and go to state 49

state 44

    (95) expresion -> MENOS . expresion
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CORIZQ          shift and go to state 34
    ID              shift and go to state 58
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expresion                      shift and go to state 96
    listArray                      shift and go to state 49

state 45

    (92) expresion -> NOT . expresion
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CORIZQ          shift and go to state 34
    ID              shift and go to state 58
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expresion                      shift and go to state 97
    listArray                      shift and go to state 49

state 46

    (99) expresion -> ENTERO .

    MAS             reduce using rule 99 (expresion -> ENTERO .)
    PUNTO           reduce using rule 99 (expresion -> ENTERO .)
    MENOS           reduce using rule 99 (expresion -> ENTERO .)
    POR             reduce using rule 99 (expresion -> ENTERO .)
    DIVIDIDO        reduce using rule 99 (expresion -> ENTERO .)
    MOD             reduce using rule 99 (expresion -> ENTERO .)
    MENORQUE        reduce using rule 99 (expresion -> ENTERO .)
    MAYORQUE        reduce using rule 99 (expresion -> ENTERO .)
    MENORIGUAL      reduce using rule 99 (expresion -> ENTERO .)
    MAYORIGUAL      reduce using rule 99 (expresion -> ENTERO .)
    TERN            reduce using rule 99 (expresion -> ENTERO .)
    AND             reduce using rule 99 (expresion -> ENTERO .)
    OR              reduce using rule 99 (expresion -> ENTERO .)
    IGUALDAD        reduce using rule 99 (expresion -> ENTERO .)
    DIFERENTE       reduce using rule 99 (expresion -> ENTERO .)
    PARDER          reduce using rule 99 (expresion -> ENTERO .)
    CORDER          reduce using rule 99 (expresion -> ENTERO .)
    COMA            reduce using rule 99 (expresion -> ENTERO .)
    PUNTOCOMA       reduce using rule 99 (expresion -> ENTERO .)
    DOSPUNTOS       reduce using rule 99 (expresion -> ENTERO .)
    CHR_DER         reduce using rule 99 (expresion -> ENTERO .)


state 47

    (100) expresion -> BOOLEANO .

    MAS             reduce using rule 100 (expresion -> BOOLEANO .)
    PUNTO           reduce using rule 100 (expresion -> BOOLEANO .)
    MENOS           reduce using rule 100 (expresion -> BOOLEANO .)
    POR             reduce using rule 100 (expresion -> BOOLEANO .)
    DIVIDIDO        reduce using rule 100 (expresion -> BOOLEANO .)
    MOD             reduce using rule 100 (expresion -> BOOLEANO .)
    MENORQUE        reduce using rule 100 (expresion -> BOOLEANO .)
    MAYORQUE        reduce using rule 100 (expresion -> BOOLEANO .)
    MENORIGUAL      reduce using rule 100 (expresion -> BOOLEANO .)
    MAYORIGUAL      reduce using rule 100 (expresion -> BOOLEANO .)
    TERN            reduce using rule 100 (expresion -> BOOLEANO .)
    AND             reduce using rule 100 (expresion -> BOOLEANO .)
    OR              reduce using rule 100 (expresion -> BOOLEANO .)
    IGUALDAD        reduce using rule 100 (expresion -> BOOLEANO .)
    DIFERENTE       reduce using rule 100 (expresion -> BOOLEANO .)
    PARDER          reduce using rule 100 (expresion -> BOOLEANO .)
    CORDER          reduce using rule 100 (expresion -> BOOLEANO .)
    COMA            reduce using rule 100 (expresion -> BOOLEANO .)
    PUNTOCOMA       reduce using rule 100 (expresion -> BOOLEANO .)
    DOSPUNTOS       reduce using rule 100 (expresion -> BOOLEANO .)
    CHR_DER         reduce using rule 100 (expresion -> BOOLEANO .)


state 48

    (101) expresion -> CADENA .

    MAS             reduce using rule 101 (expresion -> CADENA .)
    PUNTO           reduce using rule 101 (expresion -> CADENA .)
    MENOS           reduce using rule 101 (expresion -> CADENA .)
    POR             reduce using rule 101 (expresion -> CADENA .)
    DIVIDIDO        reduce using rule 101 (expresion -> CADENA .)
    MOD             reduce using rule 101 (expresion -> CADENA .)
    MENORQUE        reduce using rule 101 (expresion -> CADENA .)
    MAYORQUE        reduce using rule 101 (expresion -> CADENA .)
    MENORIGUAL      reduce using rule 101 (expresion -> CADENA .)
    MAYORIGUAL      reduce using rule 101 (expresion -> CADENA .)
    TERN            reduce using rule 101 (expresion -> CADENA .)
    AND             reduce using rule 101 (expresion -> CADENA .)
    OR              reduce using rule 101 (expresion -> CADENA .)
    IGUALDAD        reduce using rule 101 (expresion -> CADENA .)
    DIFERENTE       reduce using rule 101 (expresion -> CADENA .)
    PARDER          reduce using rule 101 (expresion -> CADENA .)
    CORDER          reduce using rule 101 (expresion -> CADENA .)
    COMA            reduce using rule 101 (expresion -> CADENA .)
    PUNTOCOMA       reduce using rule 101 (expresion -> CADENA .)
    DOSPUNTOS       reduce using rule 101 (expresion -> CADENA .)
    CHR_DER         reduce using rule 101 (expresion -> CADENA .)


state 49

    (102) expresion -> listArray .
    (112) listArray -> listArray . CORIZQ expresion CORDER
    (113) listArray -> listArray . PUNTO ID

  ! shift/reduce conflict for PUNTO resolved as shift
    MAS             reduce using rule 102 (expresion -> listArray .)
    MENOS           reduce using rule 102 (expresion -> listArray .)
    POR             reduce using rule 102 (expresion -> listArray .)
    DIVIDIDO        reduce using rule 102 (expresion -> listArray .)
    MOD             reduce using rule 102 (expresion -> listArray .)
    MENORQUE        reduce using rule 102 (expresion -> listArray .)
    MAYORQUE        reduce using rule 102 (expresion -> listArray .)
    MENORIGUAL      reduce using rule 102 (expresion -> listArray .)
    MAYORIGUAL      reduce using rule 102 (expresion -> listArray .)
    TERN            reduce using rule 102 (expresion -> listArray .)
    AND             reduce using rule 102 (expresion -> listArray .)
    OR              reduce using rule 102 (expresion -> listArray .)
    IGUALDAD        reduce using rule 102 (expresion -> listArray .)
    DIFERENTE       reduce using rule 102 (expresion -> listArray .)
    PARDER          reduce using rule 102 (expresion -> listArray .)
    CORDER          reduce using rule 102 (expresion -> listArray .)
    COMA            reduce using rule 102 (expresion -> listArray .)
    PUNTOCOMA       reduce using rule 102 (expresion -> listArray .)
    DOSPUNTOS       reduce using rule 102 (expresion -> listArray .)
    CHR_DER         reduce using rule 102 (expresion -> listArray .)
    CORIZQ          shift and go to state 98
    PUNTO           shift and go to state 99

  ! PUNTO           [ reduce using rule 102 (expresion -> listArray .) ]


state 50

    (103) expresion -> DECIMAL .

    MAS             reduce using rule 103 (expresion -> DECIMAL .)
    PUNTO           reduce using rule 103 (expresion -> DECIMAL .)
    MENOS           reduce using rule 103 (expresion -> DECIMAL .)
    POR             reduce using rule 103 (expresion -> DECIMAL .)
    DIVIDIDO        reduce using rule 103 (expresion -> DECIMAL .)
    MOD             reduce using rule 103 (expresion -> DECIMAL .)
    MENORQUE        reduce using rule 103 (expresion -> DECIMAL .)
    MAYORQUE        reduce using rule 103 (expresion -> DECIMAL .)
    MENORIGUAL      reduce using rule 103 (expresion -> DECIMAL .)
    MAYORIGUAL      reduce using rule 103 (expresion -> DECIMAL .)
    TERN            reduce using rule 103 (expresion -> DECIMAL .)
    AND             reduce using rule 103 (expresion -> DECIMAL .)
    OR              reduce using rule 103 (expresion -> DECIMAL .)
    IGUALDAD        reduce using rule 103 (expresion -> DECIMAL .)
    DIFERENTE       reduce using rule 103 (expresion -> DECIMAL .)
    PARDER          reduce using rule 103 (expresion -> DECIMAL .)
    CORDER          reduce using rule 103 (expresion -> DECIMAL .)
    COMA            reduce using rule 103 (expresion -> DECIMAL .)
    PUNTOCOMA       reduce using rule 103 (expresion -> DECIMAL .)
    DOSPUNTOS       reduce using rule 103 (expresion -> DECIMAL .)
    CHR_DER         reduce using rule 103 (expresion -> DECIMAL .)


state 51

    (2) block -> block instruccion .

    CONSOLE         reduce using rule 2 (block -> block instruccion .)
    IF              reduce using rule 2 (block -> block instruccion .)
    VAR             reduce using rule 2 (block -> block instruccion .)
    WHILE           reduce using rule 2 (block -> block instruccion .)
    ID              reduce using rule 2 (block -> block instruccion .)
    FOR             reduce using rule 2 (block -> block instruccion .)
    BREAK           reduce using rule 2 (block -> block instruccion .)
    CONTINUE        reduce using rule 2 (block -> block instruccion .)
    FUNC            reduce using rule 2 (block -> block instruccion .)
    RETURN          reduce using rule 2 (block -> block instruccion .)
    SWITCH          reduce using rule 2 (block -> block instruccion .)
    CONST           reduce using rule 2 (block -> block instruccion .)
    INTERFACE       reduce using rule 2 (block -> block instruccion .)
    CORIZQ          reduce using rule 2 (block -> block instruccion .)
    PARSEINT        reduce using rule 2 (block -> block instruccion .)
    PARSEFLOAT      reduce using rule 2 (block -> block instruccion .)
    TYPEOF          reduce using rule 2 (block -> block instruccion .)
    NOT             reduce using rule 2 (block -> block instruccion .)
    MENOS           reduce using rule 2 (block -> block instruccion .)
    PARIZQ          reduce using rule 2 (block -> block instruccion .)
    ENTERO          reduce using rule 2 (block -> block instruccion .)
    BOOLEANO        reduce using rule 2 (block -> block instruccion .)
    CADENA          reduce using rule 2 (block -> block instruccion .)
    DECIMAL         reduce using rule 2 (block -> block instruccion .)
    $end            reduce using rule 2 (block -> block instruccion .)
    CHR_DER         reduce using rule 2 (block -> block instruccion .)
    DEFAULT         reduce using rule 2 (block -> block instruccion .)
    CASE            reduce using rule 2 (block -> block instruccion .)


state 52

    (4) instruccion -> print PUNTOCOMA .

    CONSOLE         reduce using rule 4 (instruccion -> print PUNTOCOMA .)
    IF              reduce using rule 4 (instruccion -> print PUNTOCOMA .)
    VAR             reduce using rule 4 (instruccion -> print PUNTOCOMA .)
    WHILE           reduce using rule 4 (instruccion -> print PUNTOCOMA .)
    ID              reduce using rule 4 (instruccion -> print PUNTOCOMA .)
    FOR             reduce using rule 4 (instruccion -> print PUNTOCOMA .)
    BREAK           reduce using rule 4 (instruccion -> print PUNTOCOMA .)
    CONTINUE        reduce using rule 4 (instruccion -> print PUNTOCOMA .)
    FUNC            reduce using rule 4 (instruccion -> print PUNTOCOMA .)
    RETURN          reduce using rule 4 (instruccion -> print PUNTOCOMA .)
    SWITCH          reduce using rule 4 (instruccion -> print PUNTOCOMA .)
    CONST           reduce using rule 4 (instruccion -> print PUNTOCOMA .)
    INTERFACE       reduce using rule 4 (instruccion -> print PUNTOCOMA .)
    CORIZQ          reduce using rule 4 (instruccion -> print PUNTOCOMA .)
    PARSEINT        reduce using rule 4 (instruccion -> print PUNTOCOMA .)
    PARSEFLOAT      reduce using rule 4 (instruccion -> print PUNTOCOMA .)
    TYPEOF          reduce using rule 4 (instruccion -> print PUNTOCOMA .)
    NOT             reduce using rule 4 (instruccion -> print PUNTOCOMA .)
    MENOS           reduce using rule 4 (instruccion -> print PUNTOCOMA .)
    PARIZQ          reduce using rule 4 (instruccion -> print PUNTOCOMA .)
    ENTERO          reduce using rule 4 (instruccion -> print PUNTOCOMA .)
    BOOLEANO        reduce using rule 4 (instruccion -> print PUNTOCOMA .)
    CADENA          reduce using rule 4 (instruccion -> print PUNTOCOMA .)
    DECIMAL         reduce using rule 4 (instruccion -> print PUNTOCOMA .)
    $end            reduce using rule 4 (instruccion -> print PUNTOCOMA .)
    CHR_DER         reduce using rule 4 (instruccion -> print PUNTOCOMA .)
    DEFAULT         reduce using rule 4 (instruccion -> print PUNTOCOMA .)
    CASE            reduce using rule 4 (instruccion -> print PUNTOCOMA .)


state 53

    (9) instruccion -> instancia PUNTOCOMA .

    CONSOLE         reduce using rule 9 (instruccion -> instancia PUNTOCOMA .)
    IF              reduce using rule 9 (instruccion -> instancia PUNTOCOMA .)
    VAR             reduce using rule 9 (instruccion -> instancia PUNTOCOMA .)
    WHILE           reduce using rule 9 (instruccion -> instancia PUNTOCOMA .)
    ID              reduce using rule 9 (instruccion -> instancia PUNTOCOMA .)
    FOR             reduce using rule 9 (instruccion -> instancia PUNTOCOMA .)
    BREAK           reduce using rule 9 (instruccion -> instancia PUNTOCOMA .)
    CONTINUE        reduce using rule 9 (instruccion -> instancia PUNTOCOMA .)
    FUNC            reduce using rule 9 (instruccion -> instancia PUNTOCOMA .)
    RETURN          reduce using rule 9 (instruccion -> instancia PUNTOCOMA .)
    SWITCH          reduce using rule 9 (instruccion -> instancia PUNTOCOMA .)
    CONST           reduce using rule 9 (instruccion -> instancia PUNTOCOMA .)
    INTERFACE       reduce using rule 9 (instruccion -> instancia PUNTOCOMA .)
    CORIZQ          reduce using rule 9 (instruccion -> instancia PUNTOCOMA .)
    PARSEINT        reduce using rule 9 (instruccion -> instancia PUNTOCOMA .)
    PARSEFLOAT      reduce using rule 9 (instruccion -> instancia PUNTOCOMA .)
    TYPEOF          reduce using rule 9 (instruccion -> instancia PUNTOCOMA .)
    NOT             reduce using rule 9 (instruccion -> instancia PUNTOCOMA .)
    MENOS           reduce using rule 9 (instruccion -> instancia PUNTOCOMA .)
    PARIZQ          reduce using rule 9 (instruccion -> instancia PUNTOCOMA .)
    ENTERO          reduce using rule 9 (instruccion -> instancia PUNTOCOMA .)
    BOOLEANO        reduce using rule 9 (instruccion -> instancia PUNTOCOMA .)
    CADENA          reduce using rule 9 (instruccion -> instancia PUNTOCOMA .)
    DECIMAL         reduce using rule 9 (instruccion -> instancia PUNTOCOMA .)
    $end            reduce using rule 9 (instruccion -> instancia PUNTOCOMA .)
    CHR_DER         reduce using rule 9 (instruccion -> instancia PUNTOCOMA .)
    DEFAULT         reduce using rule 9 (instruccion -> instancia PUNTOCOMA .)
    CASE            reduce using rule 9 (instruccion -> instancia PUNTOCOMA .)


state 54

    (10) instruccion -> operadores PUNTOCOMA .

    CONSOLE         reduce using rule 10 (instruccion -> operadores PUNTOCOMA .)
    IF              reduce using rule 10 (instruccion -> operadores PUNTOCOMA .)
    VAR             reduce using rule 10 (instruccion -> operadores PUNTOCOMA .)
    WHILE           reduce using rule 10 (instruccion -> operadores PUNTOCOMA .)
    ID              reduce using rule 10 (instruccion -> operadores PUNTOCOMA .)
    FOR             reduce using rule 10 (instruccion -> operadores PUNTOCOMA .)
    BREAK           reduce using rule 10 (instruccion -> operadores PUNTOCOMA .)
    CONTINUE        reduce using rule 10 (instruccion -> operadores PUNTOCOMA .)
    FUNC            reduce using rule 10 (instruccion -> operadores PUNTOCOMA .)
    RETURN          reduce using rule 10 (instruccion -> operadores PUNTOCOMA .)
    SWITCH          reduce using rule 10 (instruccion -> operadores PUNTOCOMA .)
    CONST           reduce using rule 10 (instruccion -> operadores PUNTOCOMA .)
    INTERFACE       reduce using rule 10 (instruccion -> operadores PUNTOCOMA .)
    CORIZQ          reduce using rule 10 (instruccion -> operadores PUNTOCOMA .)
    PARSEINT        reduce using rule 10 (instruccion -> operadores PUNTOCOMA .)
    PARSEFLOAT      reduce using rule 10 (instruccion -> operadores PUNTOCOMA .)
    TYPEOF          reduce using rule 10 (instruccion -> operadores PUNTOCOMA .)
    NOT             reduce using rule 10 (instruccion -> operadores PUNTOCOMA .)
    MENOS           reduce using rule 10 (instruccion -> operadores PUNTOCOMA .)
    PARIZQ          reduce using rule 10 (instruccion -> operadores PUNTOCOMA .)
    ENTERO          reduce using rule 10 (instruccion -> operadores PUNTOCOMA .)
    BOOLEANO        reduce using rule 10 (instruccion -> operadores PUNTOCOMA .)
    CADENA          reduce using rule 10 (instruccion -> operadores PUNTOCOMA .)
    DECIMAL         reduce using rule 10 (instruccion -> operadores PUNTOCOMA .)
    $end            reduce using rule 10 (instruccion -> operadores PUNTOCOMA .)
    CHR_DER         reduce using rule 10 (instruccion -> operadores PUNTOCOMA .)
    DEFAULT         reduce using rule 10 (instruccion -> operadores PUNTOCOMA .)
    CASE            reduce using rule 10 (instruccion -> operadores PUNTOCOMA .)


state 55

    (12) instruccion -> breakstmt PUNTOCOMA .

    CONSOLE         reduce using rule 12 (instruccion -> breakstmt PUNTOCOMA .)
    IF              reduce using rule 12 (instruccion -> breakstmt PUNTOCOMA .)
    VAR             reduce using rule 12 (instruccion -> breakstmt PUNTOCOMA .)
    WHILE           reduce using rule 12 (instruccion -> breakstmt PUNTOCOMA .)
    ID              reduce using rule 12 (instruccion -> breakstmt PUNTOCOMA .)
    FOR             reduce using rule 12 (instruccion -> breakstmt PUNTOCOMA .)
    BREAK           reduce using rule 12 (instruccion -> breakstmt PUNTOCOMA .)
    CONTINUE        reduce using rule 12 (instruccion -> breakstmt PUNTOCOMA .)
    FUNC            reduce using rule 12 (instruccion -> breakstmt PUNTOCOMA .)
    RETURN          reduce using rule 12 (instruccion -> breakstmt PUNTOCOMA .)
    SWITCH          reduce using rule 12 (instruccion -> breakstmt PUNTOCOMA .)
    CONST           reduce using rule 12 (instruccion -> breakstmt PUNTOCOMA .)
    INTERFACE       reduce using rule 12 (instruccion -> breakstmt PUNTOCOMA .)
    CORIZQ          reduce using rule 12 (instruccion -> breakstmt PUNTOCOMA .)
    PARSEINT        reduce using rule 12 (instruccion -> breakstmt PUNTOCOMA .)
    PARSEFLOAT      reduce using rule 12 (instruccion -> breakstmt PUNTOCOMA .)
    TYPEOF          reduce using rule 12 (instruccion -> breakstmt PUNTOCOMA .)
    NOT             reduce using rule 12 (instruccion -> breakstmt PUNTOCOMA .)
    MENOS           reduce using rule 12 (instruccion -> breakstmt PUNTOCOMA .)
    PARIZQ          reduce using rule 12 (instruccion -> breakstmt PUNTOCOMA .)
    ENTERO          reduce using rule 12 (instruccion -> breakstmt PUNTOCOMA .)
    BOOLEANO        reduce using rule 12 (instruccion -> breakstmt PUNTOCOMA .)
    CADENA          reduce using rule 12 (instruccion -> breakstmt PUNTOCOMA .)
    DECIMAL         reduce using rule 12 (instruccion -> breakstmt PUNTOCOMA .)
    $end            reduce using rule 12 (instruccion -> breakstmt PUNTOCOMA .)
    CHR_DER         reduce using rule 12 (instruccion -> breakstmt PUNTOCOMA .)
    DEFAULT         reduce using rule 12 (instruccion -> breakstmt PUNTOCOMA .)
    CASE            reduce using rule 12 (instruccion -> breakstmt PUNTOCOMA .)


state 56

    (24) print -> CONSOLE PUNTO . LOG PARIZQ expressionList PARDER

    LOG             shift and go to state 100


state 57

    (96) expresion -> PARIZQ expresion . PARDER
    (48) expresion -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIVIDIDO expresion
    (82) expresion -> expresion . MOD expresion
    (85) expresion -> expresion . MENORQUE expresion
    (86) expresion -> expresion . MAYORQUE expresion
    (87) expresion -> expresion . MENORIGUAL expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . TERN expresion DOSPUNTOS expresion
    (90) expresion -> expresion . AND expresion
    (91) expresion -> expresion . OR expresion
    (93) expresion -> expresion . IGUALDAD expresion
    (94) expresion -> expresion . DIFERENTE expresion

    PARDER          shift and go to state 101
    PUNTO           shift and go to state 61
    MAS             shift and go to state 102
    MENOS           shift and go to state 62
    POR             shift and go to state 63
    DIVIDIDO        shift and go to state 64
    MOD             shift and go to state 65
    MENORQUE        shift and go to state 66
    MAYORQUE        shift and go to state 67
    MENORIGUAL      shift and go to state 68
    MAYORIGUAL      shift and go to state 69
    TERN            shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    IGUALDAD        shift and go to state 73
    DIFERENTE       shift and go to state 74


state 58

    (31) expresion -> ID . PUNTO LENGHT
    (32) expresion -> ID . PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> ID . PUNTO POP PARIZQ PARDER
    (35) expresion -> ID . PUNTO JOIN PARIZQ PARDER
    (49) expresion -> ID . PUNTO TOSTRING PARIZQ PARDER
    (83) expresion -> ID . PARIZQ expressionList PARDER
    (84) expresion -> ID . PARIZQ PARDER
    (97) expresion -> ID . PUNTO LCASE PARIZQ PARDER
    (98) expresion -> ID . PUNTO UPCASE PARIZQ PARDER
    (114) listArray -> ID .

  ! shift/reduce conflict for PUNTO resolved as shift
    PUNTO           shift and go to state 103
    PARIZQ          shift and go to state 104
    CORIZQ          reduce using rule 114 (listArray -> ID .)
    PARDER          reduce using rule 114 (listArray -> ID .)
    MAS             reduce using rule 114 (listArray -> ID .)
    MENOS           reduce using rule 114 (listArray -> ID .)
    POR             reduce using rule 114 (listArray -> ID .)
    DIVIDIDO        reduce using rule 114 (listArray -> ID .)
    MOD             reduce using rule 114 (listArray -> ID .)
    MENORQUE        reduce using rule 114 (listArray -> ID .)
    MAYORQUE        reduce using rule 114 (listArray -> ID .)
    MENORIGUAL      reduce using rule 114 (listArray -> ID .)
    MAYORIGUAL      reduce using rule 114 (listArray -> ID .)
    TERN            reduce using rule 114 (listArray -> ID .)
    AND             reduce using rule 114 (listArray -> ID .)
    OR              reduce using rule 114 (listArray -> ID .)
    IGUALDAD        reduce using rule 114 (listArray -> ID .)
    DIFERENTE       reduce using rule 114 (listArray -> ID .)
    CORDER          reduce using rule 114 (listArray -> ID .)
    COMA            reduce using rule 114 (listArray -> ID .)
    PUNTOCOMA       reduce using rule 114 (listArray -> ID .)
    DOSPUNTOS       reduce using rule 114 (listArray -> ID .)
    CHR_DER         reduce using rule 114 (listArray -> ID .)

  ! PUNTO           [ reduce using rule 114 (listArray -> ID .) ]


state 59

    (51) ifinstruction -> IF PARIZQ . expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER
    (52) ifinstruction -> IF PARIZQ . expresion PARDER CHR_IZQ block CHR_DER ELSE ifinstruction
    (53) ifinstruction -> IF PARIZQ . expresion PARDER CHR_IZQ block CHR_DER
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CORIZQ          shift and go to state 34
    ID              shift and go to state 58
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expresion                      shift and go to state 105
    listArray                      shift and go to state 49

state 60

    (37) operadores -> expresion MAS . MAS
    (78) expresion -> expresion MAS . expresion
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    MAS             shift and go to state 107
    CORIZQ          shift and go to state 34
    ID              shift and go to state 58
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expresion                      shift and go to state 106
    listArray                      shift and go to state 49

state 61

    (48) expresion -> expresion PUNTO . TOSTRING PARIZQ PARDER

    TOSTRING        shift and go to state 108


state 62

    (79) expresion -> expresion MENOS . expresion
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CORIZQ          shift and go to state 34
    ID              shift and go to state 58
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expresion                      shift and go to state 109
    listArray                      shift and go to state 49

state 63

    (80) expresion -> expresion POR . expresion
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CORIZQ          shift and go to state 34
    ID              shift and go to state 58
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expresion                      shift and go to state 110
    listArray                      shift and go to state 49

state 64

    (81) expresion -> expresion DIVIDIDO . expresion
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CORIZQ          shift and go to state 34
    ID              shift and go to state 58
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expresion                      shift and go to state 111
    listArray                      shift and go to state 49

state 65

    (82) expresion -> expresion MOD . expresion
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CORIZQ          shift and go to state 34
    ID              shift and go to state 58
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expresion                      shift and go to state 112
    listArray                      shift and go to state 49

state 66

    (85) expresion -> expresion MENORQUE . expresion
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CORIZQ          shift and go to state 34
    ID              shift and go to state 58
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expresion                      shift and go to state 113
    listArray                      shift and go to state 49

state 67

    (86) expresion -> expresion MAYORQUE . expresion
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CORIZQ          shift and go to state 34
    ID              shift and go to state 58
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expresion                      shift and go to state 114
    listArray                      shift and go to state 49

state 68

    (87) expresion -> expresion MENORIGUAL . expresion
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CORIZQ          shift and go to state 34
    ID              shift and go to state 58
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expresion                      shift and go to state 115
    listArray                      shift and go to state 49

state 69

    (88) expresion -> expresion MAYORIGUAL . expresion
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CORIZQ          shift and go to state 34
    ID              shift and go to state 58
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expresion                      shift and go to state 116
    listArray                      shift and go to state 49

state 70

    (89) expresion -> expresion TERN . expresion DOSPUNTOS expresion
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CORIZQ          shift and go to state 34
    ID              shift and go to state 58
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expresion                      shift and go to state 117
    listArray                      shift and go to state 49

state 71

    (90) expresion -> expresion AND . expresion
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CORIZQ          shift and go to state 34
    ID              shift and go to state 58
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expresion                      shift and go to state 118
    listArray                      shift and go to state 49

state 72

    (91) expresion -> expresion OR . expresion
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CORIZQ          shift and go to state 34
    ID              shift and go to state 58
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expresion                      shift and go to state 119
    listArray                      shift and go to state 49

state 73

    (93) expresion -> expresion IGUALDAD . expresion
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CORIZQ          shift and go to state 34
    ID              shift and go to state 58
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expresion                      shift and go to state 120
    listArray                      shift and go to state 49

state 74

    (94) expresion -> expresion DIFERENTE . expresion
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CORIZQ          shift and go to state 34
    ID              shift and go to state 58
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expresion                      shift and go to state 121
    listArray                      shift and go to state 49

state 75

    (25) declaration -> VAR ID . DOSPUNTOS type IGUAL expresion PUNTOCOMA
    (27) assignment -> VAR ID . IGUAL expresion PUNTOCOMA
    (29) arraydeclaration -> VAR ID . DOSPUNTOS type CORIZQ CORDER IGUAL expresion PUNTOCOMA
    (64) interdeclaration -> VAR ID . DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA

    DOSPUNTOS       shift and go to state 122
    IGUAL           shift and go to state 123


state 76

    (36) instancia -> ID IGUAL . expresion
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CORIZQ          shift and go to state 34
    ID              shift and go to state 58
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expresion                      shift and go to state 124
    listArray                      shift and go to state 49

state 77

    (60) call -> ID PARIZQ . expressionList PARDER PUNTOCOMA
    (61) call -> ID PARIZQ . PARDER PUNTOCOMA
    (83) expresion -> ID PARIZQ . expressionList PARDER
    (84) expresion -> ID PARIZQ . PARDER
    (106) expressionList -> . expressionList COMA expresion
    (107) expressionList -> . expresion
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    PARDER          shift and go to state 126
    CORIZQ          shift and go to state 34
    ID              shift and go to state 58
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expressionList                 shift and go to state 125
    expresion                      shift and go to state 83
    listArray                      shift and go to state 49

state 78

    (34) pusheo -> ID PUNTO . PUSH PARIZQ expresion PARDER PUNTOCOMA
    (31) expresion -> ID PUNTO . LENGHT
    (32) expresion -> ID PUNTO . INDEXOF PARIZQ expresion PARDER
    (33) expresion -> ID PUNTO . POP PARIZQ PARDER
    (35) expresion -> ID PUNTO . JOIN PARIZQ PARDER
    (49) expresion -> ID PUNTO . TOSTRING PARIZQ PARDER
    (97) expresion -> ID PUNTO . LCASE PARIZQ PARDER
    (98) expresion -> ID PUNTO . UPCASE PARIZQ PARDER

    PUSH            shift and go to state 127
    LENGHT          shift and go to state 128
    INDEXOF         shift and go to state 129
    POP             shift and go to state 130
    JOIN            shift and go to state 131
    TOSTRING        shift and go to state 132
    LCASE           shift and go to state 133
    UPCASE          shift and go to state 134


state 79

    (44) whileinstruction -> WHILE PARIZQ . expresion PARDER CHR_IZQ block CHR_DER
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CORIZQ          shift and go to state 34
    ID              shift and go to state 58
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expresion                      shift and go to state 135
    listArray                      shift and go to state 49

state 80

    (45) forinstruction -> FOR PARIZQ . declaration expresion PUNTOCOMA operadores PARDER CHR_IZQ block CHR_DER
    (25) declaration -> . VAR ID DOSPUNTOS type IGUAL expresion PUNTOCOMA

    VAR             shift and go to state 137

    declaration                    shift and go to state 136

state 81

    (104) continuestmt -> CONTINUE PUNTOCOMA .

    CONSOLE         reduce using rule 104 (continuestmt -> CONTINUE PUNTOCOMA .)
    IF              reduce using rule 104 (continuestmt -> CONTINUE PUNTOCOMA .)
    VAR             reduce using rule 104 (continuestmt -> CONTINUE PUNTOCOMA .)
    WHILE           reduce using rule 104 (continuestmt -> CONTINUE PUNTOCOMA .)
    ID              reduce using rule 104 (continuestmt -> CONTINUE PUNTOCOMA .)
    FOR             reduce using rule 104 (continuestmt -> CONTINUE PUNTOCOMA .)
    BREAK           reduce using rule 104 (continuestmt -> CONTINUE PUNTOCOMA .)
    CONTINUE        reduce using rule 104 (continuestmt -> CONTINUE PUNTOCOMA .)
    FUNC            reduce using rule 104 (continuestmt -> CONTINUE PUNTOCOMA .)
    RETURN          reduce using rule 104 (continuestmt -> CONTINUE PUNTOCOMA .)
    SWITCH          reduce using rule 104 (continuestmt -> CONTINUE PUNTOCOMA .)
    CONST           reduce using rule 104 (continuestmt -> CONTINUE PUNTOCOMA .)
    INTERFACE       reduce using rule 104 (continuestmt -> CONTINUE PUNTOCOMA .)
    CORIZQ          reduce using rule 104 (continuestmt -> CONTINUE PUNTOCOMA .)
    PARSEINT        reduce using rule 104 (continuestmt -> CONTINUE PUNTOCOMA .)
    PARSEFLOAT      reduce using rule 104 (continuestmt -> CONTINUE PUNTOCOMA .)
    TYPEOF          reduce using rule 104 (continuestmt -> CONTINUE PUNTOCOMA .)
    NOT             reduce using rule 104 (continuestmt -> CONTINUE PUNTOCOMA .)
    MENOS           reduce using rule 104 (continuestmt -> CONTINUE PUNTOCOMA .)
    PARIZQ          reduce using rule 104 (continuestmt -> CONTINUE PUNTOCOMA .)
    ENTERO          reduce using rule 104 (continuestmt -> CONTINUE PUNTOCOMA .)
    BOOLEANO        reduce using rule 104 (continuestmt -> CONTINUE PUNTOCOMA .)
    CADENA          reduce using rule 104 (continuestmt -> CONTINUE PUNTOCOMA .)
    DECIMAL         reduce using rule 104 (continuestmt -> CONTINUE PUNTOCOMA .)
    $end            reduce using rule 104 (continuestmt -> CONTINUE PUNTOCOMA .)
    CHR_DER         reduce using rule 104 (continuestmt -> CONTINUE PUNTOCOMA .)
    DEFAULT         reduce using rule 104 (continuestmt -> CONTINUE PUNTOCOMA .)
    CASE            reduce using rule 104 (continuestmt -> CONTINUE PUNTOCOMA .)


state 82

    (30) expresion -> CORIZQ expressionList . CORDER
    (106) expressionList -> expressionList . COMA expresion

    CORDER          shift and go to state 138
    COMA            shift and go to state 139


state 83

    (107) expressionList -> expresion .
    (48) expresion -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIVIDIDO expresion
    (82) expresion -> expresion . MOD expresion
    (85) expresion -> expresion . MENORQUE expresion
    (86) expresion -> expresion . MAYORQUE expresion
    (87) expresion -> expresion . MENORIGUAL expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . TERN expresion DOSPUNTOS expresion
    (90) expresion -> expresion . AND expresion
    (91) expresion -> expresion . OR expresion
    (93) expresion -> expresion . IGUALDAD expresion
    (94) expresion -> expresion . DIFERENTE expresion

    CORDER          reduce using rule 107 (expressionList -> expresion .)
    COMA            reduce using rule 107 (expressionList -> expresion .)
    PARDER          reduce using rule 107 (expressionList -> expresion .)
    PUNTO           shift and go to state 61
    MAS             shift and go to state 102
    MENOS           shift and go to state 62
    POR             shift and go to state 63
    DIVIDIDO        shift and go to state 64
    MOD             shift and go to state 65
    MENORQUE        shift and go to state 66
    MAYORQUE        shift and go to state 67
    MENORIGUAL      shift and go to state 68
    MAYORIGUAL      shift and go to state 69
    TERN            shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    IGUALDAD        shift and go to state 73
    DIFERENTE       shift and go to state 74


state 84

    (62) functionstmt -> FUNC ID . funcparams functype CHR_IZQ block CHR_DER
    (70) funcparams -> . PARIZQ paramsList PARDER
    (71) funcparams -> . PARIZQ PARDER

    PARIZQ          shift and go to state 141

    funcparams                     shift and go to state 140

state 85

    (76) returnstmt -> RETURN expresion . PUNTOCOMA
    (48) expresion -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIVIDIDO expresion
    (82) expresion -> expresion . MOD expresion
    (85) expresion -> expresion . MENORQUE expresion
    (86) expresion -> expresion . MAYORQUE expresion
    (87) expresion -> expresion . MENORIGUAL expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . TERN expresion DOSPUNTOS expresion
    (90) expresion -> expresion . AND expresion
    (91) expresion -> expresion . OR expresion
    (93) expresion -> expresion . IGUALDAD expresion
    (94) expresion -> expresion . DIFERENTE expresion

    PUNTOCOMA       shift and go to state 142
    PUNTO           shift and go to state 61
    MAS             shift and go to state 102
    MENOS           shift and go to state 62
    POR             shift and go to state 63
    DIVIDIDO        shift and go to state 64
    MOD             shift and go to state 65
    MENORQUE        shift and go to state 66
    MAYORQUE        shift and go to state 67
    MENORIGUAL      shift and go to state 68
    MAYORIGUAL      shift and go to state 69
    TERN            shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    IGUALDAD        shift and go to state 73
    DIFERENTE       shift and go to state 74


state 86

    (77) returnstmt -> RETURN PUNTOCOMA .

    CONSOLE         reduce using rule 77 (returnstmt -> RETURN PUNTOCOMA .)
    IF              reduce using rule 77 (returnstmt -> RETURN PUNTOCOMA .)
    VAR             reduce using rule 77 (returnstmt -> RETURN PUNTOCOMA .)
    WHILE           reduce using rule 77 (returnstmt -> RETURN PUNTOCOMA .)
    ID              reduce using rule 77 (returnstmt -> RETURN PUNTOCOMA .)
    FOR             reduce using rule 77 (returnstmt -> RETURN PUNTOCOMA .)
    BREAK           reduce using rule 77 (returnstmt -> RETURN PUNTOCOMA .)
    CONTINUE        reduce using rule 77 (returnstmt -> RETURN PUNTOCOMA .)
    FUNC            reduce using rule 77 (returnstmt -> RETURN PUNTOCOMA .)
    RETURN          reduce using rule 77 (returnstmt -> RETURN PUNTOCOMA .)
    SWITCH          reduce using rule 77 (returnstmt -> RETURN PUNTOCOMA .)
    CONST           reduce using rule 77 (returnstmt -> RETURN PUNTOCOMA .)
    INTERFACE       reduce using rule 77 (returnstmt -> RETURN PUNTOCOMA .)
    CORIZQ          reduce using rule 77 (returnstmt -> RETURN PUNTOCOMA .)
    PARSEINT        reduce using rule 77 (returnstmt -> RETURN PUNTOCOMA .)
    PARSEFLOAT      reduce using rule 77 (returnstmt -> RETURN PUNTOCOMA .)
    TYPEOF          reduce using rule 77 (returnstmt -> RETURN PUNTOCOMA .)
    NOT             reduce using rule 77 (returnstmt -> RETURN PUNTOCOMA .)
    MENOS           reduce using rule 77 (returnstmt -> RETURN PUNTOCOMA .)
    PARIZQ          reduce using rule 77 (returnstmt -> RETURN PUNTOCOMA .)
    ENTERO          reduce using rule 77 (returnstmt -> RETURN PUNTOCOMA .)
    BOOLEANO        reduce using rule 77 (returnstmt -> RETURN PUNTOCOMA .)
    CADENA          reduce using rule 77 (returnstmt -> RETURN PUNTOCOMA .)
    DECIMAL         reduce using rule 77 (returnstmt -> RETURN PUNTOCOMA .)
    $end            reduce using rule 77 (returnstmt -> RETURN PUNTOCOMA .)
    CHR_DER         reduce using rule 77 (returnstmt -> RETURN PUNTOCOMA .)
    DEFAULT         reduce using rule 77 (returnstmt -> RETURN PUNTOCOMA .)
    CASE            reduce using rule 77 (returnstmt -> RETURN PUNTOCOMA .)


state 87

    (54) switch_statement -> SWITCH PARIZQ . expresion PARDER CHR_IZQ cases_statement default_case CHR_DER
    (55) switch_statement -> SWITCH PARIZQ . expresion PARDER CHR_IZQ cases_statement CHR_DER
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CORIZQ          shift and go to state 34
    ID              shift and go to state 58
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expresion                      shift and go to state 143
    listArray                      shift and go to state 49

state 88

    (26) constante -> CONST ID . DOSPUNTOS type IGUAL expresion PUNTOCOMA
    (28) constante -> CONST ID . IGUAL expresion PUNTOCOMA
    (65) interdeclaration -> CONST ID . DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA

    DOSPUNTOS       shift and go to state 144
    IGUAL           shift and go to state 145


state 89

    (63) interfacecreation -> INTERFACE ID . CHR_IZQ attributeList CHR_DER

    CHR_IZQ         shift and go to state 146


state 90

    (108) assigmentarray -> listArray2 IGUAL . expresion PUNTOCOMA
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CORIZQ          shift and go to state 34
    ID              shift and go to state 58
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expresion                      shift and go to state 147
    listArray                      shift and go to state 49

state 91

    (109) listArray2 -> listArray2 CORIZQ . expresion CORDER
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CORIZQ          shift and go to state 34
    ID              shift and go to state 58
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expresion                      shift and go to state 148
    listArray                      shift and go to state 49

state 92

    (110) listArray2 -> listArray2 PUNTO . ID

    ID              shift and go to state 149


state 93

    (46) expresion -> PARSEINT PARIZQ . expresion PARDER
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CORIZQ          shift and go to state 34
    ID              shift and go to state 58
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expresion                      shift and go to state 150
    listArray                      shift and go to state 49

state 94

    (47) expresion -> PARSEFLOAT PARIZQ . expresion PARDER
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CORIZQ          shift and go to state 34
    ID              shift and go to state 58
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expresion                      shift and go to state 151
    listArray                      shift and go to state 49

state 95

    (50) expresion -> TYPEOF expresion .
    (48) expresion -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIVIDIDO expresion
    (82) expresion -> expresion . MOD expresion
    (85) expresion -> expresion . MENORQUE expresion
    (86) expresion -> expresion . MAYORQUE expresion
    (87) expresion -> expresion . MENORIGUAL expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . TERN expresion DOSPUNTOS expresion
    (90) expresion -> expresion . AND expresion
    (91) expresion -> expresion . OR expresion
    (93) expresion -> expresion . IGUALDAD expresion
    (94) expresion -> expresion . DIFERENTE expresion

  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for TERN resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for IGUALDAD resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
    PARDER          reduce using rule 50 (expresion -> TYPEOF expresion .)
    CORDER          reduce using rule 50 (expresion -> TYPEOF expresion .)
    COMA            reduce using rule 50 (expresion -> TYPEOF expresion .)
    PUNTOCOMA       reduce using rule 50 (expresion -> TYPEOF expresion .)
    DOSPUNTOS       reduce using rule 50 (expresion -> TYPEOF expresion .)
    CHR_DER         reduce using rule 50 (expresion -> TYPEOF expresion .)
    PUNTO           shift and go to state 61
    MAS             shift and go to state 102
    MENOS           shift and go to state 62
    POR             shift and go to state 63
    DIVIDIDO        shift and go to state 64
    MOD             shift and go to state 65
    MENORQUE        shift and go to state 66
    MAYORQUE        shift and go to state 67
    MENORIGUAL      shift and go to state 68
    MAYORIGUAL      shift and go to state 69
    TERN            shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    IGUALDAD        shift and go to state 73
    DIFERENTE       shift and go to state 74

  ! MAS             [ reduce using rule 50 (expresion -> TYPEOF expresion .) ]
  ! PUNTO           [ reduce using rule 50 (expresion -> TYPEOF expresion .) ]
  ! MENOS           [ reduce using rule 50 (expresion -> TYPEOF expresion .) ]
  ! POR             [ reduce using rule 50 (expresion -> TYPEOF expresion .) ]
  ! DIVIDIDO        [ reduce using rule 50 (expresion -> TYPEOF expresion .) ]
  ! MOD             [ reduce using rule 50 (expresion -> TYPEOF expresion .) ]
  ! MENORQUE        [ reduce using rule 50 (expresion -> TYPEOF expresion .) ]
  ! MAYORQUE        [ reduce using rule 50 (expresion -> TYPEOF expresion .) ]
  ! MENORIGUAL      [ reduce using rule 50 (expresion -> TYPEOF expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 50 (expresion -> TYPEOF expresion .) ]
  ! TERN            [ reduce using rule 50 (expresion -> TYPEOF expresion .) ]
  ! AND             [ reduce using rule 50 (expresion -> TYPEOF expresion .) ]
  ! OR              [ reduce using rule 50 (expresion -> TYPEOF expresion .) ]
  ! IGUALDAD        [ reduce using rule 50 (expresion -> TYPEOF expresion .) ]
  ! DIFERENTE       [ reduce using rule 50 (expresion -> TYPEOF expresion .) ]


state 96

    (95) expresion -> MENOS expresion .
    (48) expresion -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIVIDIDO expresion
    (82) expresion -> expresion . MOD expresion
    (85) expresion -> expresion . MENORQUE expresion
    (86) expresion -> expresion . MAYORQUE expresion
    (87) expresion -> expresion . MENORIGUAL expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . TERN expresion DOSPUNTOS expresion
    (90) expresion -> expresion . AND expresion
    (91) expresion -> expresion . OR expresion
    (93) expresion -> expresion . IGUALDAD expresion
    (94) expresion -> expresion . DIFERENTE expresion

    MAS             reduce using rule 95 (expresion -> MENOS expresion .)
    PUNTO           reduce using rule 95 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 95 (expresion -> MENOS expresion .)
    POR             reduce using rule 95 (expresion -> MENOS expresion .)
    DIVIDIDO        reduce using rule 95 (expresion -> MENOS expresion .)
    MOD             reduce using rule 95 (expresion -> MENOS expresion .)
    TERN            reduce using rule 95 (expresion -> MENOS expresion .)
    AND             reduce using rule 95 (expresion -> MENOS expresion .)
    OR              reduce using rule 95 (expresion -> MENOS expresion .)
    IGUALDAD        reduce using rule 95 (expresion -> MENOS expresion .)
    DIFERENTE       reduce using rule 95 (expresion -> MENOS expresion .)
    PARDER          reduce using rule 95 (expresion -> MENOS expresion .)
    CORDER          reduce using rule 95 (expresion -> MENOS expresion .)
    COMA            reduce using rule 95 (expresion -> MENOS expresion .)
    PUNTOCOMA       reduce using rule 95 (expresion -> MENOS expresion .)
    DOSPUNTOS       reduce using rule 95 (expresion -> MENOS expresion .)
    CHR_DER         reduce using rule 95 (expresion -> MENOS expresion .)
    MENORQUE        shift and go to state 66
    MAYORQUE        shift and go to state 67
    MENORIGUAL      shift and go to state 68
    MAYORIGUAL      shift and go to state 69

  ! MENORQUE        [ reduce using rule 95 (expresion -> MENOS expresion .) ]
  ! MAYORQUE        [ reduce using rule 95 (expresion -> MENOS expresion .) ]
  ! MENORIGUAL      [ reduce using rule 95 (expresion -> MENOS expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 95 (expresion -> MENOS expresion .) ]
  ! PUNTO           [ shift and go to state 61 ]
  ! MAS             [ shift and go to state 102 ]
  ! MENOS           [ shift and go to state 62 ]
  ! POR             [ shift and go to state 63 ]
  ! DIVIDIDO        [ shift and go to state 64 ]
  ! MOD             [ shift and go to state 65 ]
  ! TERN            [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]
  ! OR              [ shift and go to state 72 ]
  ! IGUALDAD        [ shift and go to state 73 ]
  ! DIFERENTE       [ shift and go to state 74 ]


state 97

    (92) expresion -> NOT expresion .
    (48) expresion -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIVIDIDO expresion
    (82) expresion -> expresion . MOD expresion
    (85) expresion -> expresion . MENORQUE expresion
    (86) expresion -> expresion . MAYORQUE expresion
    (87) expresion -> expresion . MENORIGUAL expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . TERN expresion DOSPUNTOS expresion
    (90) expresion -> expresion . AND expresion
    (91) expresion -> expresion . OR expresion
    (93) expresion -> expresion . IGUALDAD expresion
    (94) expresion -> expresion . DIFERENTE expresion

  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for TERN resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for IGUALDAD resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
    PARDER          reduce using rule 92 (expresion -> NOT expresion .)
    CORDER          reduce using rule 92 (expresion -> NOT expresion .)
    COMA            reduce using rule 92 (expresion -> NOT expresion .)
    PUNTOCOMA       reduce using rule 92 (expresion -> NOT expresion .)
    DOSPUNTOS       reduce using rule 92 (expresion -> NOT expresion .)
    CHR_DER         reduce using rule 92 (expresion -> NOT expresion .)
    PUNTO           shift and go to state 61
    MAS             shift and go to state 102
    MENOS           shift and go to state 62
    POR             shift and go to state 63
    DIVIDIDO        shift and go to state 64
    MOD             shift and go to state 65
    MENORQUE        shift and go to state 66
    MAYORQUE        shift and go to state 67
    MENORIGUAL      shift and go to state 68
    MAYORIGUAL      shift and go to state 69
    TERN            shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    IGUALDAD        shift and go to state 73
    DIFERENTE       shift and go to state 74

  ! MAS             [ reduce using rule 92 (expresion -> NOT expresion .) ]
  ! PUNTO           [ reduce using rule 92 (expresion -> NOT expresion .) ]
  ! MENOS           [ reduce using rule 92 (expresion -> NOT expresion .) ]
  ! POR             [ reduce using rule 92 (expresion -> NOT expresion .) ]
  ! DIVIDIDO        [ reduce using rule 92 (expresion -> NOT expresion .) ]
  ! MOD             [ reduce using rule 92 (expresion -> NOT expresion .) ]
  ! MENORQUE        [ reduce using rule 92 (expresion -> NOT expresion .) ]
  ! MAYORQUE        [ reduce using rule 92 (expresion -> NOT expresion .) ]
  ! MENORIGUAL      [ reduce using rule 92 (expresion -> NOT expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 92 (expresion -> NOT expresion .) ]
  ! TERN            [ reduce using rule 92 (expresion -> NOT expresion .) ]
  ! AND             [ reduce using rule 92 (expresion -> NOT expresion .) ]
  ! OR              [ reduce using rule 92 (expresion -> NOT expresion .) ]
  ! IGUALDAD        [ reduce using rule 92 (expresion -> NOT expresion .) ]
  ! DIFERENTE       [ reduce using rule 92 (expresion -> NOT expresion .) ]


state 98

    (112) listArray -> listArray CORIZQ . expresion CORDER
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CORIZQ          shift and go to state 34
    ID              shift and go to state 58
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    listArray                      shift and go to state 49
    expresion                      shift and go to state 152

state 99

    (113) listArray -> listArray PUNTO . ID

    ID              shift and go to state 153


state 100

    (24) print -> CONSOLE PUNTO LOG . PARIZQ expressionList PARDER

    PARIZQ          shift and go to state 154


state 101

    (96) expresion -> PARIZQ expresion PARDER .

    MAS             reduce using rule 96 (expresion -> PARIZQ expresion PARDER .)
    PUNTO           reduce using rule 96 (expresion -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 96 (expresion -> PARIZQ expresion PARDER .)
    POR             reduce using rule 96 (expresion -> PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 96 (expresion -> PARIZQ expresion PARDER .)
    MOD             reduce using rule 96 (expresion -> PARIZQ expresion PARDER .)
    MENORQUE        reduce using rule 96 (expresion -> PARIZQ expresion PARDER .)
    MAYORQUE        reduce using rule 96 (expresion -> PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 96 (expresion -> PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 96 (expresion -> PARIZQ expresion PARDER .)
    TERN            reduce using rule 96 (expresion -> PARIZQ expresion PARDER .)
    AND             reduce using rule 96 (expresion -> PARIZQ expresion PARDER .)
    OR              reduce using rule 96 (expresion -> PARIZQ expresion PARDER .)
    IGUALDAD        reduce using rule 96 (expresion -> PARIZQ expresion PARDER .)
    DIFERENTE       reduce using rule 96 (expresion -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 96 (expresion -> PARIZQ expresion PARDER .)
    CORDER          reduce using rule 96 (expresion -> PARIZQ expresion PARDER .)
    COMA            reduce using rule 96 (expresion -> PARIZQ expresion PARDER .)
    PUNTOCOMA       reduce using rule 96 (expresion -> PARIZQ expresion PARDER .)
    DOSPUNTOS       reduce using rule 96 (expresion -> PARIZQ expresion PARDER .)
    CHR_DER         reduce using rule 96 (expresion -> PARIZQ expresion PARDER .)


state 102

    (78) expresion -> expresion MAS . expresion
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CORIZQ          shift and go to state 34
    ID              shift and go to state 58
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expresion                      shift and go to state 106
    listArray                      shift and go to state 49

state 103

    (31) expresion -> ID PUNTO . LENGHT
    (32) expresion -> ID PUNTO . INDEXOF PARIZQ expresion PARDER
    (33) expresion -> ID PUNTO . POP PARIZQ PARDER
    (35) expresion -> ID PUNTO . JOIN PARIZQ PARDER
    (49) expresion -> ID PUNTO . TOSTRING PARIZQ PARDER
    (97) expresion -> ID PUNTO . LCASE PARIZQ PARDER
    (98) expresion -> ID PUNTO . UPCASE PARIZQ PARDER

    LENGHT          shift and go to state 128
    INDEXOF         shift and go to state 129
    POP             shift and go to state 130
    JOIN            shift and go to state 131
    TOSTRING        shift and go to state 132
    LCASE           shift and go to state 133
    UPCASE          shift and go to state 134


state 104

    (83) expresion -> ID PARIZQ . expressionList PARDER
    (84) expresion -> ID PARIZQ . PARDER
    (106) expressionList -> . expressionList COMA expresion
    (107) expressionList -> . expresion
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    PARDER          shift and go to state 156
    CORIZQ          shift and go to state 34
    ID              shift and go to state 58
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expressionList                 shift and go to state 155
    expresion                      shift and go to state 83
    listArray                      shift and go to state 49

state 105

    (51) ifinstruction -> IF PARIZQ expresion . PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER
    (52) ifinstruction -> IF PARIZQ expresion . PARDER CHR_IZQ block CHR_DER ELSE ifinstruction
    (53) ifinstruction -> IF PARIZQ expresion . PARDER CHR_IZQ block CHR_DER
    (48) expresion -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIVIDIDO expresion
    (82) expresion -> expresion . MOD expresion
    (85) expresion -> expresion . MENORQUE expresion
    (86) expresion -> expresion . MAYORQUE expresion
    (87) expresion -> expresion . MENORIGUAL expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . TERN expresion DOSPUNTOS expresion
    (90) expresion -> expresion . AND expresion
    (91) expresion -> expresion . OR expresion
    (93) expresion -> expresion . IGUALDAD expresion
    (94) expresion -> expresion . DIFERENTE expresion

    PARDER          shift and go to state 157
    PUNTO           shift and go to state 61
    MAS             shift and go to state 102
    MENOS           shift and go to state 62
    POR             shift and go to state 63
    DIVIDIDO        shift and go to state 64
    MOD             shift and go to state 65
    MENORQUE        shift and go to state 66
    MAYORQUE        shift and go to state 67
    MENORIGUAL      shift and go to state 68
    MAYORIGUAL      shift and go to state 69
    TERN            shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    IGUALDAD        shift and go to state 73
    DIFERENTE       shift and go to state 74


state 106

    (78) expresion -> expresion MAS expresion .
    (48) expresion -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIVIDIDO expresion
    (82) expresion -> expresion . MOD expresion
    (85) expresion -> expresion . MENORQUE expresion
    (86) expresion -> expresion . MAYORQUE expresion
    (87) expresion -> expresion . MENORIGUAL expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . TERN expresion DOSPUNTOS expresion
    (90) expresion -> expresion . AND expresion
    (91) expresion -> expresion . OR expresion
    (93) expresion -> expresion . IGUALDAD expresion
    (94) expresion -> expresion . DIFERENTE expresion

    MAS             reduce using rule 78 (expresion -> expresion MAS expresion .)
    PUNTO           reduce using rule 78 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 78 (expresion -> expresion MAS expresion .)
    MOD             reduce using rule 78 (expresion -> expresion MAS expresion .)
    TERN            reduce using rule 78 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 78 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 78 (expresion -> expresion MAS expresion .)
    IGUALDAD        reduce using rule 78 (expresion -> expresion MAS expresion .)
    DIFERENTE       reduce using rule 78 (expresion -> expresion MAS expresion .)
    PARDER          reduce using rule 78 (expresion -> expresion MAS expresion .)
    CORDER          reduce using rule 78 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 78 (expresion -> expresion MAS expresion .)
    PUNTOCOMA       reduce using rule 78 (expresion -> expresion MAS expresion .)
    DOSPUNTOS       reduce using rule 78 (expresion -> expresion MAS expresion .)
    CHR_DER         reduce using rule 78 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 63
    DIVIDIDO        shift and go to state 64
    MENORQUE        shift and go to state 66
    MAYORQUE        shift and go to state 67
    MENORIGUAL      shift and go to state 68
    MAYORIGUAL      shift and go to state 69

  ! POR             [ reduce using rule 78 (expresion -> expresion MAS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 78 (expresion -> expresion MAS expresion .) ]
  ! MENORQUE        [ reduce using rule 78 (expresion -> expresion MAS expresion .) ]
  ! MAYORQUE        [ reduce using rule 78 (expresion -> expresion MAS expresion .) ]
  ! MENORIGUAL      [ reduce using rule 78 (expresion -> expresion MAS expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 78 (expresion -> expresion MAS expresion .) ]
  ! PUNTO           [ shift and go to state 61 ]
  ! MAS             [ shift and go to state 102 ]
  ! MENOS           [ shift and go to state 62 ]
  ! MOD             [ shift and go to state 65 ]
  ! TERN            [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]
  ! OR              [ shift and go to state 72 ]
  ! IGUALDAD        [ shift and go to state 73 ]
  ! DIFERENTE       [ shift and go to state 74 ]


state 107

    (37) operadores -> expresion MAS MAS .

    PUNTOCOMA       reduce using rule 37 (operadores -> expresion MAS MAS .)
    PARDER          reduce using rule 37 (operadores -> expresion MAS MAS .)


state 108

    (48) expresion -> expresion PUNTO TOSTRING . PARIZQ PARDER

    PARIZQ          shift and go to state 158


state 109

    (79) expresion -> expresion MENOS expresion .
    (48) expresion -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIVIDIDO expresion
    (82) expresion -> expresion . MOD expresion
    (85) expresion -> expresion . MENORQUE expresion
    (86) expresion -> expresion . MAYORQUE expresion
    (87) expresion -> expresion . MENORIGUAL expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . TERN expresion DOSPUNTOS expresion
    (90) expresion -> expresion . AND expresion
    (91) expresion -> expresion . OR expresion
    (93) expresion -> expresion . IGUALDAD expresion
    (94) expresion -> expresion . DIFERENTE expresion

    MAS             reduce using rule 79 (expresion -> expresion MENOS expresion .)
    PUNTO           reduce using rule 79 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 79 (expresion -> expresion MENOS expresion .)
    MOD             reduce using rule 79 (expresion -> expresion MENOS expresion .)
    TERN            reduce using rule 79 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 79 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 79 (expresion -> expresion MENOS expresion .)
    IGUALDAD        reduce using rule 79 (expresion -> expresion MENOS expresion .)
    DIFERENTE       reduce using rule 79 (expresion -> expresion MENOS expresion .)
    PARDER          reduce using rule 79 (expresion -> expresion MENOS expresion .)
    CORDER          reduce using rule 79 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 79 (expresion -> expresion MENOS expresion .)
    PUNTOCOMA       reduce using rule 79 (expresion -> expresion MENOS expresion .)
    DOSPUNTOS       reduce using rule 79 (expresion -> expresion MENOS expresion .)
    CHR_DER         reduce using rule 79 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 63
    DIVIDIDO        shift and go to state 64
    MENORQUE        shift and go to state 66
    MAYORQUE        shift and go to state 67
    MENORIGUAL      shift and go to state 68
    MAYORIGUAL      shift and go to state 69

  ! POR             [ reduce using rule 79 (expresion -> expresion MENOS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 79 (expresion -> expresion MENOS expresion .) ]
  ! MENORQUE        [ reduce using rule 79 (expresion -> expresion MENOS expresion .) ]
  ! MAYORQUE        [ reduce using rule 79 (expresion -> expresion MENOS expresion .) ]
  ! MENORIGUAL      [ reduce using rule 79 (expresion -> expresion MENOS expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 79 (expresion -> expresion MENOS expresion .) ]
  ! PUNTO           [ shift and go to state 61 ]
  ! MAS             [ shift and go to state 102 ]
  ! MENOS           [ shift and go to state 62 ]
  ! MOD             [ shift and go to state 65 ]
  ! TERN            [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]
  ! OR              [ shift and go to state 72 ]
  ! IGUALDAD        [ shift and go to state 73 ]
  ! DIFERENTE       [ shift and go to state 74 ]


state 110

    (80) expresion -> expresion POR expresion .
    (48) expresion -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIVIDIDO expresion
    (82) expresion -> expresion . MOD expresion
    (85) expresion -> expresion . MENORQUE expresion
    (86) expresion -> expresion . MAYORQUE expresion
    (87) expresion -> expresion . MENORIGUAL expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . TERN expresion DOSPUNTOS expresion
    (90) expresion -> expresion . AND expresion
    (91) expresion -> expresion . OR expresion
    (93) expresion -> expresion . IGUALDAD expresion
    (94) expresion -> expresion . DIFERENTE expresion

    MAS             reduce using rule 80 (expresion -> expresion POR expresion .)
    PUNTO           reduce using rule 80 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 80 (expresion -> expresion POR expresion .)
    POR             reduce using rule 80 (expresion -> expresion POR expresion .)
    DIVIDIDO        reduce using rule 80 (expresion -> expresion POR expresion .)
    MOD             reduce using rule 80 (expresion -> expresion POR expresion .)
    TERN            reduce using rule 80 (expresion -> expresion POR expresion .)
    AND             reduce using rule 80 (expresion -> expresion POR expresion .)
    OR              reduce using rule 80 (expresion -> expresion POR expresion .)
    IGUALDAD        reduce using rule 80 (expresion -> expresion POR expresion .)
    DIFERENTE       reduce using rule 80 (expresion -> expresion POR expresion .)
    PARDER          reduce using rule 80 (expresion -> expresion POR expresion .)
    CORDER          reduce using rule 80 (expresion -> expresion POR expresion .)
    COMA            reduce using rule 80 (expresion -> expresion POR expresion .)
    PUNTOCOMA       reduce using rule 80 (expresion -> expresion POR expresion .)
    DOSPUNTOS       reduce using rule 80 (expresion -> expresion POR expresion .)
    CHR_DER         reduce using rule 80 (expresion -> expresion POR expresion .)
    MENORQUE        shift and go to state 66
    MAYORQUE        shift and go to state 67
    MENORIGUAL      shift and go to state 68
    MAYORIGUAL      shift and go to state 69

  ! MENORQUE        [ reduce using rule 80 (expresion -> expresion POR expresion .) ]
  ! MAYORQUE        [ reduce using rule 80 (expresion -> expresion POR expresion .) ]
  ! MENORIGUAL      [ reduce using rule 80 (expresion -> expresion POR expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 80 (expresion -> expresion POR expresion .) ]
  ! PUNTO           [ shift and go to state 61 ]
  ! MAS             [ shift and go to state 102 ]
  ! MENOS           [ shift and go to state 62 ]
  ! POR             [ shift and go to state 63 ]
  ! DIVIDIDO        [ shift and go to state 64 ]
  ! MOD             [ shift and go to state 65 ]
  ! TERN            [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]
  ! OR              [ shift and go to state 72 ]
  ! IGUALDAD        [ shift and go to state 73 ]
  ! DIFERENTE       [ shift and go to state 74 ]


state 111

    (81) expresion -> expresion DIVIDIDO expresion .
    (48) expresion -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIVIDIDO expresion
    (82) expresion -> expresion . MOD expresion
    (85) expresion -> expresion . MENORQUE expresion
    (86) expresion -> expresion . MAYORQUE expresion
    (87) expresion -> expresion . MENORIGUAL expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . TERN expresion DOSPUNTOS expresion
    (90) expresion -> expresion . AND expresion
    (91) expresion -> expresion . OR expresion
    (93) expresion -> expresion . IGUALDAD expresion
    (94) expresion -> expresion . DIFERENTE expresion

    MAS             reduce using rule 81 (expresion -> expresion DIVIDIDO expresion .)
    PUNTO           reduce using rule 81 (expresion -> expresion DIVIDIDO expresion .)
    MENOS           reduce using rule 81 (expresion -> expresion DIVIDIDO expresion .)
    POR             reduce using rule 81 (expresion -> expresion DIVIDIDO expresion .)
    DIVIDIDO        reduce using rule 81 (expresion -> expresion DIVIDIDO expresion .)
    MOD             reduce using rule 81 (expresion -> expresion DIVIDIDO expresion .)
    TERN            reduce using rule 81 (expresion -> expresion DIVIDIDO expresion .)
    AND             reduce using rule 81 (expresion -> expresion DIVIDIDO expresion .)
    OR              reduce using rule 81 (expresion -> expresion DIVIDIDO expresion .)
    IGUALDAD        reduce using rule 81 (expresion -> expresion DIVIDIDO expresion .)
    DIFERENTE       reduce using rule 81 (expresion -> expresion DIVIDIDO expresion .)
    PARDER          reduce using rule 81 (expresion -> expresion DIVIDIDO expresion .)
    CORDER          reduce using rule 81 (expresion -> expresion DIVIDIDO expresion .)
    COMA            reduce using rule 81 (expresion -> expresion DIVIDIDO expresion .)
    PUNTOCOMA       reduce using rule 81 (expresion -> expresion DIVIDIDO expresion .)
    DOSPUNTOS       reduce using rule 81 (expresion -> expresion DIVIDIDO expresion .)
    CHR_DER         reduce using rule 81 (expresion -> expresion DIVIDIDO expresion .)
    MENORQUE        shift and go to state 66
    MAYORQUE        shift and go to state 67
    MENORIGUAL      shift and go to state 68
    MAYORIGUAL      shift and go to state 69

  ! MENORQUE        [ reduce using rule 81 (expresion -> expresion DIVIDIDO expresion .) ]
  ! MAYORQUE        [ reduce using rule 81 (expresion -> expresion DIVIDIDO expresion .) ]
  ! MENORIGUAL      [ reduce using rule 81 (expresion -> expresion DIVIDIDO expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 81 (expresion -> expresion DIVIDIDO expresion .) ]
  ! PUNTO           [ shift and go to state 61 ]
  ! MAS             [ shift and go to state 102 ]
  ! MENOS           [ shift and go to state 62 ]
  ! POR             [ shift and go to state 63 ]
  ! DIVIDIDO        [ shift and go to state 64 ]
  ! MOD             [ shift and go to state 65 ]
  ! TERN            [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]
  ! OR              [ shift and go to state 72 ]
  ! IGUALDAD        [ shift and go to state 73 ]
  ! DIFERENTE       [ shift and go to state 74 ]


state 112

    (82) expresion -> expresion MOD expresion .
    (48) expresion -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIVIDIDO expresion
    (82) expresion -> expresion . MOD expresion
    (85) expresion -> expresion . MENORQUE expresion
    (86) expresion -> expresion . MAYORQUE expresion
    (87) expresion -> expresion . MENORIGUAL expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . TERN expresion DOSPUNTOS expresion
    (90) expresion -> expresion . AND expresion
    (91) expresion -> expresion . OR expresion
    (93) expresion -> expresion . IGUALDAD expresion
    (94) expresion -> expresion . DIFERENTE expresion

    MAS             reduce using rule 82 (expresion -> expresion MOD expresion .)
    PUNTO           reduce using rule 82 (expresion -> expresion MOD expresion .)
    MENOS           reduce using rule 82 (expresion -> expresion MOD expresion .)
    MOD             reduce using rule 82 (expresion -> expresion MOD expresion .)
    TERN            reduce using rule 82 (expresion -> expresion MOD expresion .)
    AND             reduce using rule 82 (expresion -> expresion MOD expresion .)
    OR              reduce using rule 82 (expresion -> expresion MOD expresion .)
    IGUALDAD        reduce using rule 82 (expresion -> expresion MOD expresion .)
    DIFERENTE       reduce using rule 82 (expresion -> expresion MOD expresion .)
    PARDER          reduce using rule 82 (expresion -> expresion MOD expresion .)
    CORDER          reduce using rule 82 (expresion -> expresion MOD expresion .)
    COMA            reduce using rule 82 (expresion -> expresion MOD expresion .)
    PUNTOCOMA       reduce using rule 82 (expresion -> expresion MOD expresion .)
    DOSPUNTOS       reduce using rule 82 (expresion -> expresion MOD expresion .)
    CHR_DER         reduce using rule 82 (expresion -> expresion MOD expresion .)
    POR             shift and go to state 63
    DIVIDIDO        shift and go to state 64
    MENORQUE        shift and go to state 66
    MAYORQUE        shift and go to state 67
    MENORIGUAL      shift and go to state 68
    MAYORIGUAL      shift and go to state 69

  ! POR             [ reduce using rule 82 (expresion -> expresion MOD expresion .) ]
  ! DIVIDIDO        [ reduce using rule 82 (expresion -> expresion MOD expresion .) ]
  ! MENORQUE        [ reduce using rule 82 (expresion -> expresion MOD expresion .) ]
  ! MAYORQUE        [ reduce using rule 82 (expresion -> expresion MOD expresion .) ]
  ! MENORIGUAL      [ reduce using rule 82 (expresion -> expresion MOD expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 82 (expresion -> expresion MOD expresion .) ]
  ! PUNTO           [ shift and go to state 61 ]
  ! MAS             [ shift and go to state 102 ]
  ! MENOS           [ shift and go to state 62 ]
  ! MOD             [ shift and go to state 65 ]
  ! TERN            [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]
  ! OR              [ shift and go to state 72 ]
  ! IGUALDAD        [ shift and go to state 73 ]
  ! DIFERENTE       [ shift and go to state 74 ]


state 113

    (85) expresion -> expresion MENORQUE expresion .
    (48) expresion -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIVIDIDO expresion
    (82) expresion -> expresion . MOD expresion
    (85) expresion -> expresion . MENORQUE expresion
    (86) expresion -> expresion . MAYORQUE expresion
    (87) expresion -> expresion . MENORIGUAL expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . TERN expresion DOSPUNTOS expresion
    (90) expresion -> expresion . AND expresion
    (91) expresion -> expresion . OR expresion
    (93) expresion -> expresion . IGUALDAD expresion
    (94) expresion -> expresion . DIFERENTE expresion

    MAS             reduce using rule 85 (expresion -> expresion MENORQUE expresion .)
    PUNTO           reduce using rule 85 (expresion -> expresion MENORQUE expresion .)
    MENOS           reduce using rule 85 (expresion -> expresion MENORQUE expresion .)
    POR             reduce using rule 85 (expresion -> expresion MENORQUE expresion .)
    DIVIDIDO        reduce using rule 85 (expresion -> expresion MENORQUE expresion .)
    MOD             reduce using rule 85 (expresion -> expresion MENORQUE expresion .)
    MENORQUE        reduce using rule 85 (expresion -> expresion MENORQUE expresion .)
    MAYORQUE        reduce using rule 85 (expresion -> expresion MENORQUE expresion .)
    TERN            reduce using rule 85 (expresion -> expresion MENORQUE expresion .)
    AND             reduce using rule 85 (expresion -> expresion MENORQUE expresion .)
    OR              reduce using rule 85 (expresion -> expresion MENORQUE expresion .)
    IGUALDAD        reduce using rule 85 (expresion -> expresion MENORQUE expresion .)
    DIFERENTE       reduce using rule 85 (expresion -> expresion MENORQUE expresion .)
    PARDER          reduce using rule 85 (expresion -> expresion MENORQUE expresion .)
    CORDER          reduce using rule 85 (expresion -> expresion MENORQUE expresion .)
    COMA            reduce using rule 85 (expresion -> expresion MENORQUE expresion .)
    PUNTOCOMA       reduce using rule 85 (expresion -> expresion MENORQUE expresion .)
    DOSPUNTOS       reduce using rule 85 (expresion -> expresion MENORQUE expresion .)
    CHR_DER         reduce using rule 85 (expresion -> expresion MENORQUE expresion .)
    MENORIGUAL      shift and go to state 68
    MAYORIGUAL      shift and go to state 69

  ! MENORIGUAL      [ reduce using rule 85 (expresion -> expresion MENORQUE expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 85 (expresion -> expresion MENORQUE expresion .) ]
  ! PUNTO           [ shift and go to state 61 ]
  ! MAS             [ shift and go to state 102 ]
  ! MENOS           [ shift and go to state 62 ]
  ! POR             [ shift and go to state 63 ]
  ! DIVIDIDO        [ shift and go to state 64 ]
  ! MOD             [ shift and go to state 65 ]
  ! MENORQUE        [ shift and go to state 66 ]
  ! MAYORQUE        [ shift and go to state 67 ]
  ! TERN            [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]
  ! OR              [ shift and go to state 72 ]
  ! IGUALDAD        [ shift and go to state 73 ]
  ! DIFERENTE       [ shift and go to state 74 ]


state 114

    (86) expresion -> expresion MAYORQUE expresion .
    (48) expresion -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIVIDIDO expresion
    (82) expresion -> expresion . MOD expresion
    (85) expresion -> expresion . MENORQUE expresion
    (86) expresion -> expresion . MAYORQUE expresion
    (87) expresion -> expresion . MENORIGUAL expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . TERN expresion DOSPUNTOS expresion
    (90) expresion -> expresion . AND expresion
    (91) expresion -> expresion . OR expresion
    (93) expresion -> expresion . IGUALDAD expresion
    (94) expresion -> expresion . DIFERENTE expresion

    MAS             reduce using rule 86 (expresion -> expresion MAYORQUE expresion .)
    PUNTO           reduce using rule 86 (expresion -> expresion MAYORQUE expresion .)
    MENOS           reduce using rule 86 (expresion -> expresion MAYORQUE expresion .)
    POR             reduce using rule 86 (expresion -> expresion MAYORQUE expresion .)
    DIVIDIDO        reduce using rule 86 (expresion -> expresion MAYORQUE expresion .)
    MOD             reduce using rule 86 (expresion -> expresion MAYORQUE expresion .)
    MENORQUE        reduce using rule 86 (expresion -> expresion MAYORQUE expresion .)
    MAYORQUE        reduce using rule 86 (expresion -> expresion MAYORQUE expresion .)
    TERN            reduce using rule 86 (expresion -> expresion MAYORQUE expresion .)
    AND             reduce using rule 86 (expresion -> expresion MAYORQUE expresion .)
    OR              reduce using rule 86 (expresion -> expresion MAYORQUE expresion .)
    IGUALDAD        reduce using rule 86 (expresion -> expresion MAYORQUE expresion .)
    DIFERENTE       reduce using rule 86 (expresion -> expresion MAYORQUE expresion .)
    PARDER          reduce using rule 86 (expresion -> expresion MAYORQUE expresion .)
    CORDER          reduce using rule 86 (expresion -> expresion MAYORQUE expresion .)
    COMA            reduce using rule 86 (expresion -> expresion MAYORQUE expresion .)
    PUNTOCOMA       reduce using rule 86 (expresion -> expresion MAYORQUE expresion .)
    DOSPUNTOS       reduce using rule 86 (expresion -> expresion MAYORQUE expresion .)
    CHR_DER         reduce using rule 86 (expresion -> expresion MAYORQUE expresion .)
    MENORIGUAL      shift and go to state 68
    MAYORIGUAL      shift and go to state 69

  ! MENORIGUAL      [ reduce using rule 86 (expresion -> expresion MAYORQUE expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 86 (expresion -> expresion MAYORQUE expresion .) ]
  ! PUNTO           [ shift and go to state 61 ]
  ! MAS             [ shift and go to state 102 ]
  ! MENOS           [ shift and go to state 62 ]
  ! POR             [ shift and go to state 63 ]
  ! DIVIDIDO        [ shift and go to state 64 ]
  ! MOD             [ shift and go to state 65 ]
  ! MENORQUE        [ shift and go to state 66 ]
  ! MAYORQUE        [ shift and go to state 67 ]
  ! TERN            [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]
  ! OR              [ shift and go to state 72 ]
  ! IGUALDAD        [ shift and go to state 73 ]
  ! DIFERENTE       [ shift and go to state 74 ]


state 115

    (87) expresion -> expresion MENORIGUAL expresion .
    (48) expresion -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIVIDIDO expresion
    (82) expresion -> expresion . MOD expresion
    (85) expresion -> expresion . MENORQUE expresion
    (86) expresion -> expresion . MAYORQUE expresion
    (87) expresion -> expresion . MENORIGUAL expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . TERN expresion DOSPUNTOS expresion
    (90) expresion -> expresion . AND expresion
    (91) expresion -> expresion . OR expresion
    (93) expresion -> expresion . IGUALDAD expresion
    (94) expresion -> expresion . DIFERENTE expresion

    MAS             reduce using rule 87 (expresion -> expresion MENORIGUAL expresion .)
    PUNTO           reduce using rule 87 (expresion -> expresion MENORIGUAL expresion .)
    MENOS           reduce using rule 87 (expresion -> expresion MENORIGUAL expresion .)
    POR             reduce using rule 87 (expresion -> expresion MENORIGUAL expresion .)
    DIVIDIDO        reduce using rule 87 (expresion -> expresion MENORIGUAL expresion .)
    MOD             reduce using rule 87 (expresion -> expresion MENORIGUAL expresion .)
    MENORQUE        reduce using rule 87 (expresion -> expresion MENORIGUAL expresion .)
    MAYORQUE        reduce using rule 87 (expresion -> expresion MENORIGUAL expresion .)
    MENORIGUAL      reduce using rule 87 (expresion -> expresion MENORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 87 (expresion -> expresion MENORIGUAL expresion .)
    TERN            reduce using rule 87 (expresion -> expresion MENORIGUAL expresion .)
    AND             reduce using rule 87 (expresion -> expresion MENORIGUAL expresion .)
    OR              reduce using rule 87 (expresion -> expresion MENORIGUAL expresion .)
    IGUALDAD        reduce using rule 87 (expresion -> expresion MENORIGUAL expresion .)
    DIFERENTE       reduce using rule 87 (expresion -> expresion MENORIGUAL expresion .)
    PARDER          reduce using rule 87 (expresion -> expresion MENORIGUAL expresion .)
    CORDER          reduce using rule 87 (expresion -> expresion MENORIGUAL expresion .)
    COMA            reduce using rule 87 (expresion -> expresion MENORIGUAL expresion .)
    PUNTOCOMA       reduce using rule 87 (expresion -> expresion MENORIGUAL expresion .)
    DOSPUNTOS       reduce using rule 87 (expresion -> expresion MENORIGUAL expresion .)
    CHR_DER         reduce using rule 87 (expresion -> expresion MENORIGUAL expresion .)

  ! PUNTO           [ shift and go to state 61 ]
  ! MAS             [ shift and go to state 102 ]
  ! MENOS           [ shift and go to state 62 ]
  ! POR             [ shift and go to state 63 ]
  ! DIVIDIDO        [ shift and go to state 64 ]
  ! MOD             [ shift and go to state 65 ]
  ! MENORQUE        [ shift and go to state 66 ]
  ! MAYORQUE        [ shift and go to state 67 ]
  ! MENORIGUAL      [ shift and go to state 68 ]
  ! MAYORIGUAL      [ shift and go to state 69 ]
  ! TERN            [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]
  ! OR              [ shift and go to state 72 ]
  ! IGUALDAD        [ shift and go to state 73 ]
  ! DIFERENTE       [ shift and go to state 74 ]


state 116

    (88) expresion -> expresion MAYORIGUAL expresion .
    (48) expresion -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIVIDIDO expresion
    (82) expresion -> expresion . MOD expresion
    (85) expresion -> expresion . MENORQUE expresion
    (86) expresion -> expresion . MAYORQUE expresion
    (87) expresion -> expresion . MENORIGUAL expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . TERN expresion DOSPUNTOS expresion
    (90) expresion -> expresion . AND expresion
    (91) expresion -> expresion . OR expresion
    (93) expresion -> expresion . IGUALDAD expresion
    (94) expresion -> expresion . DIFERENTE expresion

    MAS             reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    PUNTO           reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    MENOS           reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    POR             reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    DIVIDIDO        reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    MOD             reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    MENORQUE        reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    MAYORQUE        reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    MENORIGUAL      reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    TERN            reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    AND             reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    OR              reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    IGUALDAD        reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    DIFERENTE       reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    PARDER          reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    CORDER          reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    COMA            reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    PUNTOCOMA       reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    DOSPUNTOS       reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    CHR_DER         reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)

  ! PUNTO           [ shift and go to state 61 ]
  ! MAS             [ shift and go to state 102 ]
  ! MENOS           [ shift and go to state 62 ]
  ! POR             [ shift and go to state 63 ]
  ! DIVIDIDO        [ shift and go to state 64 ]
  ! MOD             [ shift and go to state 65 ]
  ! MENORQUE        [ shift and go to state 66 ]
  ! MAYORQUE        [ shift and go to state 67 ]
  ! MENORIGUAL      [ shift and go to state 68 ]
  ! MAYORIGUAL      [ shift and go to state 69 ]
  ! TERN            [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]
  ! OR              [ shift and go to state 72 ]
  ! IGUALDAD        [ shift and go to state 73 ]
  ! DIFERENTE       [ shift and go to state 74 ]


state 117

    (89) expresion -> expresion TERN expresion . DOSPUNTOS expresion
    (48) expresion -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIVIDIDO expresion
    (82) expresion -> expresion . MOD expresion
    (85) expresion -> expresion . MENORQUE expresion
    (86) expresion -> expresion . MAYORQUE expresion
    (87) expresion -> expresion . MENORIGUAL expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . TERN expresion DOSPUNTOS expresion
    (90) expresion -> expresion . AND expresion
    (91) expresion -> expresion . OR expresion
    (93) expresion -> expresion . IGUALDAD expresion
    (94) expresion -> expresion . DIFERENTE expresion

    DOSPUNTOS       shift and go to state 159
    PUNTO           shift and go to state 61
    MAS             shift and go to state 102
    MENOS           shift and go to state 62
    POR             shift and go to state 63
    DIVIDIDO        shift and go to state 64
    MOD             shift and go to state 65
    MENORQUE        shift and go to state 66
    MAYORQUE        shift and go to state 67
    MENORIGUAL      shift and go to state 68
    MAYORIGUAL      shift and go to state 69
    TERN            shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    IGUALDAD        shift and go to state 73
    DIFERENTE       shift and go to state 74


state 118

    (90) expresion -> expresion AND expresion .
    (48) expresion -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIVIDIDO expresion
    (82) expresion -> expresion . MOD expresion
    (85) expresion -> expresion . MENORQUE expresion
    (86) expresion -> expresion . MAYORQUE expresion
    (87) expresion -> expresion . MENORIGUAL expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . TERN expresion DOSPUNTOS expresion
    (90) expresion -> expresion . AND expresion
    (91) expresion -> expresion . OR expresion
    (93) expresion -> expresion . IGUALDAD expresion
    (94) expresion -> expresion . DIFERENTE expresion

  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for TERN resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for IGUALDAD resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
    PARDER          reduce using rule 90 (expresion -> expresion AND expresion .)
    CORDER          reduce using rule 90 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 90 (expresion -> expresion AND expresion .)
    PUNTOCOMA       reduce using rule 90 (expresion -> expresion AND expresion .)
    DOSPUNTOS       reduce using rule 90 (expresion -> expresion AND expresion .)
    CHR_DER         reduce using rule 90 (expresion -> expresion AND expresion .)
    PUNTO           shift and go to state 61
    MAS             shift and go to state 102
    MENOS           shift and go to state 62
    POR             shift and go to state 63
    DIVIDIDO        shift and go to state 64
    MOD             shift and go to state 65
    MENORQUE        shift and go to state 66
    MAYORQUE        shift and go to state 67
    MENORIGUAL      shift and go to state 68
    MAYORIGUAL      shift and go to state 69
    TERN            shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    IGUALDAD        shift and go to state 73
    DIFERENTE       shift and go to state 74

  ! MAS             [ reduce using rule 90 (expresion -> expresion AND expresion .) ]
  ! PUNTO           [ reduce using rule 90 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 90 (expresion -> expresion AND expresion .) ]
  ! POR             [ reduce using rule 90 (expresion -> expresion AND expresion .) ]
  ! DIVIDIDO        [ reduce using rule 90 (expresion -> expresion AND expresion .) ]
  ! MOD             [ reduce using rule 90 (expresion -> expresion AND expresion .) ]
  ! MENORQUE        [ reduce using rule 90 (expresion -> expresion AND expresion .) ]
  ! MAYORQUE        [ reduce using rule 90 (expresion -> expresion AND expresion .) ]
  ! MENORIGUAL      [ reduce using rule 90 (expresion -> expresion AND expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 90 (expresion -> expresion AND expresion .) ]
  ! TERN            [ reduce using rule 90 (expresion -> expresion AND expresion .) ]
  ! AND             [ reduce using rule 90 (expresion -> expresion AND expresion .) ]
  ! OR              [ reduce using rule 90 (expresion -> expresion AND expresion .) ]
  ! IGUALDAD        [ reduce using rule 90 (expresion -> expresion AND expresion .) ]
  ! DIFERENTE       [ reduce using rule 90 (expresion -> expresion AND expresion .) ]


state 119

    (91) expresion -> expresion OR expresion .
    (48) expresion -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIVIDIDO expresion
    (82) expresion -> expresion . MOD expresion
    (85) expresion -> expresion . MENORQUE expresion
    (86) expresion -> expresion . MAYORQUE expresion
    (87) expresion -> expresion . MENORIGUAL expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . TERN expresion DOSPUNTOS expresion
    (90) expresion -> expresion . AND expresion
    (91) expresion -> expresion . OR expresion
    (93) expresion -> expresion . IGUALDAD expresion
    (94) expresion -> expresion . DIFERENTE expresion

  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for TERN resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for IGUALDAD resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
    PARDER          reduce using rule 91 (expresion -> expresion OR expresion .)
    CORDER          reduce using rule 91 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 91 (expresion -> expresion OR expresion .)
    PUNTOCOMA       reduce using rule 91 (expresion -> expresion OR expresion .)
    DOSPUNTOS       reduce using rule 91 (expresion -> expresion OR expresion .)
    CHR_DER         reduce using rule 91 (expresion -> expresion OR expresion .)
    PUNTO           shift and go to state 61
    MAS             shift and go to state 102
    MENOS           shift and go to state 62
    POR             shift and go to state 63
    DIVIDIDO        shift and go to state 64
    MOD             shift and go to state 65
    MENORQUE        shift and go to state 66
    MAYORQUE        shift and go to state 67
    MENORIGUAL      shift and go to state 68
    MAYORIGUAL      shift and go to state 69
    TERN            shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    IGUALDAD        shift and go to state 73
    DIFERENTE       shift and go to state 74

  ! MAS             [ reduce using rule 91 (expresion -> expresion OR expresion .) ]
  ! PUNTO           [ reduce using rule 91 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 91 (expresion -> expresion OR expresion .) ]
  ! POR             [ reduce using rule 91 (expresion -> expresion OR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 91 (expresion -> expresion OR expresion .) ]
  ! MOD             [ reduce using rule 91 (expresion -> expresion OR expresion .) ]
  ! MENORQUE        [ reduce using rule 91 (expresion -> expresion OR expresion .) ]
  ! MAYORQUE        [ reduce using rule 91 (expresion -> expresion OR expresion .) ]
  ! MENORIGUAL      [ reduce using rule 91 (expresion -> expresion OR expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 91 (expresion -> expresion OR expresion .) ]
  ! TERN            [ reduce using rule 91 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 91 (expresion -> expresion OR expresion .) ]
  ! OR              [ reduce using rule 91 (expresion -> expresion OR expresion .) ]
  ! IGUALDAD        [ reduce using rule 91 (expresion -> expresion OR expresion .) ]
  ! DIFERENTE       [ reduce using rule 91 (expresion -> expresion OR expresion .) ]


state 120

    (93) expresion -> expresion IGUALDAD expresion .
    (48) expresion -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIVIDIDO expresion
    (82) expresion -> expresion . MOD expresion
    (85) expresion -> expresion . MENORQUE expresion
    (86) expresion -> expresion . MAYORQUE expresion
    (87) expresion -> expresion . MENORIGUAL expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . TERN expresion DOSPUNTOS expresion
    (90) expresion -> expresion . AND expresion
    (91) expresion -> expresion . OR expresion
    (93) expresion -> expresion . IGUALDAD expresion
    (94) expresion -> expresion . DIFERENTE expresion

  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for TERN resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for IGUALDAD resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
    PARDER          reduce using rule 93 (expresion -> expresion IGUALDAD expresion .)
    CORDER          reduce using rule 93 (expresion -> expresion IGUALDAD expresion .)
    COMA            reduce using rule 93 (expresion -> expresion IGUALDAD expresion .)
    PUNTOCOMA       reduce using rule 93 (expresion -> expresion IGUALDAD expresion .)
    DOSPUNTOS       reduce using rule 93 (expresion -> expresion IGUALDAD expresion .)
    CHR_DER         reduce using rule 93 (expresion -> expresion IGUALDAD expresion .)
    PUNTO           shift and go to state 61
    MAS             shift and go to state 102
    MENOS           shift and go to state 62
    POR             shift and go to state 63
    DIVIDIDO        shift and go to state 64
    MOD             shift and go to state 65
    MENORQUE        shift and go to state 66
    MAYORQUE        shift and go to state 67
    MENORIGUAL      shift and go to state 68
    MAYORIGUAL      shift and go to state 69
    TERN            shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    IGUALDAD        shift and go to state 73
    DIFERENTE       shift and go to state 74

  ! MAS             [ reduce using rule 93 (expresion -> expresion IGUALDAD expresion .) ]
  ! PUNTO           [ reduce using rule 93 (expresion -> expresion IGUALDAD expresion .) ]
  ! MENOS           [ reduce using rule 93 (expresion -> expresion IGUALDAD expresion .) ]
  ! POR             [ reduce using rule 93 (expresion -> expresion IGUALDAD expresion .) ]
  ! DIVIDIDO        [ reduce using rule 93 (expresion -> expresion IGUALDAD expresion .) ]
  ! MOD             [ reduce using rule 93 (expresion -> expresion IGUALDAD expresion .) ]
  ! MENORQUE        [ reduce using rule 93 (expresion -> expresion IGUALDAD expresion .) ]
  ! MAYORQUE        [ reduce using rule 93 (expresion -> expresion IGUALDAD expresion .) ]
  ! MENORIGUAL      [ reduce using rule 93 (expresion -> expresion IGUALDAD expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 93 (expresion -> expresion IGUALDAD expresion .) ]
  ! TERN            [ reduce using rule 93 (expresion -> expresion IGUALDAD expresion .) ]
  ! AND             [ reduce using rule 93 (expresion -> expresion IGUALDAD expresion .) ]
  ! OR              [ reduce using rule 93 (expresion -> expresion IGUALDAD expresion .) ]
  ! IGUALDAD        [ reduce using rule 93 (expresion -> expresion IGUALDAD expresion .) ]
  ! DIFERENTE       [ reduce using rule 93 (expresion -> expresion IGUALDAD expresion .) ]


state 121

    (94) expresion -> expresion DIFERENTE expresion .
    (48) expresion -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIVIDIDO expresion
    (82) expresion -> expresion . MOD expresion
    (85) expresion -> expresion . MENORQUE expresion
    (86) expresion -> expresion . MAYORQUE expresion
    (87) expresion -> expresion . MENORIGUAL expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . TERN expresion DOSPUNTOS expresion
    (90) expresion -> expresion . AND expresion
    (91) expresion -> expresion . OR expresion
    (93) expresion -> expresion . IGUALDAD expresion
    (94) expresion -> expresion . DIFERENTE expresion

  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for TERN resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for IGUALDAD resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
    PARDER          reduce using rule 94 (expresion -> expresion DIFERENTE expresion .)
    CORDER          reduce using rule 94 (expresion -> expresion DIFERENTE expresion .)
    COMA            reduce using rule 94 (expresion -> expresion DIFERENTE expresion .)
    PUNTOCOMA       reduce using rule 94 (expresion -> expresion DIFERENTE expresion .)
    DOSPUNTOS       reduce using rule 94 (expresion -> expresion DIFERENTE expresion .)
    CHR_DER         reduce using rule 94 (expresion -> expresion DIFERENTE expresion .)
    PUNTO           shift and go to state 61
    MAS             shift and go to state 102
    MENOS           shift and go to state 62
    POR             shift and go to state 63
    DIVIDIDO        shift and go to state 64
    MOD             shift and go to state 65
    MENORQUE        shift and go to state 66
    MAYORQUE        shift and go to state 67
    MENORIGUAL      shift and go to state 68
    MAYORIGUAL      shift and go to state 69
    TERN            shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    IGUALDAD        shift and go to state 73
    DIFERENTE       shift and go to state 74

  ! MAS             [ reduce using rule 94 (expresion -> expresion DIFERENTE expresion .) ]
  ! PUNTO           [ reduce using rule 94 (expresion -> expresion DIFERENTE expresion .) ]
  ! MENOS           [ reduce using rule 94 (expresion -> expresion DIFERENTE expresion .) ]
  ! POR             [ reduce using rule 94 (expresion -> expresion DIFERENTE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 94 (expresion -> expresion DIFERENTE expresion .) ]
  ! MOD             [ reduce using rule 94 (expresion -> expresion DIFERENTE expresion .) ]
  ! MENORQUE        [ reduce using rule 94 (expresion -> expresion DIFERENTE expresion .) ]
  ! MAYORQUE        [ reduce using rule 94 (expresion -> expresion DIFERENTE expresion .) ]
  ! MENORIGUAL      [ reduce using rule 94 (expresion -> expresion DIFERENTE expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 94 (expresion -> expresion DIFERENTE expresion .) ]
  ! TERN            [ reduce using rule 94 (expresion -> expresion DIFERENTE expresion .) ]
  ! AND             [ reduce using rule 94 (expresion -> expresion DIFERENTE expresion .) ]
  ! OR              [ reduce using rule 94 (expresion -> expresion DIFERENTE expresion .) ]
  ! IGUALDAD        [ reduce using rule 94 (expresion -> expresion DIFERENTE expresion .) ]
  ! DIFERENTE       [ reduce using rule 94 (expresion -> expresion DIFERENTE expresion .) ]


state 122

    (25) declaration -> VAR ID DOSPUNTOS . type IGUAL expresion PUNTOCOMA
    (29) arraydeclaration -> VAR ID DOSPUNTOS . type CORIZQ CORDER IGUAL expresion PUNTOCOMA
    (64) interdeclaration -> VAR ID DOSPUNTOS . ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA
    (38) type -> . NUMBER
    (39) type -> . FLOAT
    (40) type -> . STRING
    (41) type -> . BOOLEAN
    (42) type -> . ID
    (43) type -> . type CORIZQ CORDER

    ID              shift and go to state 160
    NUMBER          shift and go to state 162
    FLOAT           shift and go to state 163
    STRING          shift and go to state 164
    BOOLEAN         shift and go to state 165

    type                           shift and go to state 161

state 123

    (27) assignment -> VAR ID IGUAL . expresion PUNTOCOMA
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CORIZQ          shift and go to state 34
    ID              shift and go to state 58
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expresion                      shift and go to state 166
    listArray                      shift and go to state 49

state 124

    (36) instancia -> ID IGUAL expresion .
    (48) expresion -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIVIDIDO expresion
    (82) expresion -> expresion . MOD expresion
    (85) expresion -> expresion . MENORQUE expresion
    (86) expresion -> expresion . MAYORQUE expresion
    (87) expresion -> expresion . MENORIGUAL expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . TERN expresion DOSPUNTOS expresion
    (90) expresion -> expresion . AND expresion
    (91) expresion -> expresion . OR expresion
    (93) expresion -> expresion . IGUALDAD expresion
    (94) expresion -> expresion . DIFERENTE expresion

    PUNTOCOMA       reduce using rule 36 (instancia -> ID IGUAL expresion .)
    PUNTO           shift and go to state 61
    MAS             shift and go to state 102
    MENOS           shift and go to state 62
    POR             shift and go to state 63
    DIVIDIDO        shift and go to state 64
    MOD             shift and go to state 65
    MENORQUE        shift and go to state 66
    MAYORQUE        shift and go to state 67
    MENORIGUAL      shift and go to state 68
    MAYORIGUAL      shift and go to state 69
    TERN            shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    IGUALDAD        shift and go to state 73
    DIFERENTE       shift and go to state 74


state 125

    (60) call -> ID PARIZQ expressionList . PARDER PUNTOCOMA
    (83) expresion -> ID PARIZQ expressionList . PARDER
    (106) expressionList -> expressionList . COMA expresion

    PARDER          shift and go to state 167
    COMA            shift and go to state 139


state 126

    (61) call -> ID PARIZQ PARDER . PUNTOCOMA
    (84) expresion -> ID PARIZQ PARDER .

    PUNTOCOMA       shift and go to state 168
    MAS             reduce using rule 84 (expresion -> ID PARIZQ PARDER .)
    PUNTO           reduce using rule 84 (expresion -> ID PARIZQ PARDER .)
    MENOS           reduce using rule 84 (expresion -> ID PARIZQ PARDER .)
    POR             reduce using rule 84 (expresion -> ID PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 84 (expresion -> ID PARIZQ PARDER .)
    MOD             reduce using rule 84 (expresion -> ID PARIZQ PARDER .)
    MENORQUE        reduce using rule 84 (expresion -> ID PARIZQ PARDER .)
    MAYORQUE        reduce using rule 84 (expresion -> ID PARIZQ PARDER .)
    MENORIGUAL      reduce using rule 84 (expresion -> ID PARIZQ PARDER .)
    MAYORIGUAL      reduce using rule 84 (expresion -> ID PARIZQ PARDER .)
    TERN            reduce using rule 84 (expresion -> ID PARIZQ PARDER .)
    AND             reduce using rule 84 (expresion -> ID PARIZQ PARDER .)
    OR              reduce using rule 84 (expresion -> ID PARIZQ PARDER .)
    IGUALDAD        reduce using rule 84 (expresion -> ID PARIZQ PARDER .)
    DIFERENTE       reduce using rule 84 (expresion -> ID PARIZQ PARDER .)


state 127

    (34) pusheo -> ID PUNTO PUSH . PARIZQ expresion PARDER PUNTOCOMA

    PARIZQ          shift and go to state 169


state 128

    (31) expresion -> ID PUNTO LENGHT .

    MAS             reduce using rule 31 (expresion -> ID PUNTO LENGHT .)
    PUNTO           reduce using rule 31 (expresion -> ID PUNTO LENGHT .)
    MENOS           reduce using rule 31 (expresion -> ID PUNTO LENGHT .)
    POR             reduce using rule 31 (expresion -> ID PUNTO LENGHT .)
    DIVIDIDO        reduce using rule 31 (expresion -> ID PUNTO LENGHT .)
    MOD             reduce using rule 31 (expresion -> ID PUNTO LENGHT .)
    MENORQUE        reduce using rule 31 (expresion -> ID PUNTO LENGHT .)
    MAYORQUE        reduce using rule 31 (expresion -> ID PUNTO LENGHT .)
    MENORIGUAL      reduce using rule 31 (expresion -> ID PUNTO LENGHT .)
    MAYORIGUAL      reduce using rule 31 (expresion -> ID PUNTO LENGHT .)
    TERN            reduce using rule 31 (expresion -> ID PUNTO LENGHT .)
    AND             reduce using rule 31 (expresion -> ID PUNTO LENGHT .)
    OR              reduce using rule 31 (expresion -> ID PUNTO LENGHT .)
    IGUALDAD        reduce using rule 31 (expresion -> ID PUNTO LENGHT .)
    DIFERENTE       reduce using rule 31 (expresion -> ID PUNTO LENGHT .)
    PARDER          reduce using rule 31 (expresion -> ID PUNTO LENGHT .)
    CORDER          reduce using rule 31 (expresion -> ID PUNTO LENGHT .)
    COMA            reduce using rule 31 (expresion -> ID PUNTO LENGHT .)
    PUNTOCOMA       reduce using rule 31 (expresion -> ID PUNTO LENGHT .)
    DOSPUNTOS       reduce using rule 31 (expresion -> ID PUNTO LENGHT .)
    CHR_DER         reduce using rule 31 (expresion -> ID PUNTO LENGHT .)


state 129

    (32) expresion -> ID PUNTO INDEXOF . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 170


state 130

    (33) expresion -> ID PUNTO POP . PARIZQ PARDER

    PARIZQ          shift and go to state 171


state 131

    (35) expresion -> ID PUNTO JOIN . PARIZQ PARDER

    PARIZQ          shift and go to state 172


state 132

    (49) expresion -> ID PUNTO TOSTRING . PARIZQ PARDER

    PARIZQ          shift and go to state 173


state 133

    (97) expresion -> ID PUNTO LCASE . PARIZQ PARDER

    PARIZQ          shift and go to state 174


state 134

    (98) expresion -> ID PUNTO UPCASE . PARIZQ PARDER

    PARIZQ          shift and go to state 175


state 135

    (44) whileinstruction -> WHILE PARIZQ expresion . PARDER CHR_IZQ block CHR_DER
    (48) expresion -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIVIDIDO expresion
    (82) expresion -> expresion . MOD expresion
    (85) expresion -> expresion . MENORQUE expresion
    (86) expresion -> expresion . MAYORQUE expresion
    (87) expresion -> expresion . MENORIGUAL expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . TERN expresion DOSPUNTOS expresion
    (90) expresion -> expresion . AND expresion
    (91) expresion -> expresion . OR expresion
    (93) expresion -> expresion . IGUALDAD expresion
    (94) expresion -> expresion . DIFERENTE expresion

    PARDER          shift and go to state 176
    PUNTO           shift and go to state 61
    MAS             shift and go to state 102
    MENOS           shift and go to state 62
    POR             shift and go to state 63
    DIVIDIDO        shift and go to state 64
    MOD             shift and go to state 65
    MENORQUE        shift and go to state 66
    MAYORQUE        shift and go to state 67
    MENORIGUAL      shift and go to state 68
    MAYORIGUAL      shift and go to state 69
    TERN            shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    IGUALDAD        shift and go to state 73
    DIFERENTE       shift and go to state 74


state 136

    (45) forinstruction -> FOR PARIZQ declaration . expresion PUNTOCOMA operadores PARDER CHR_IZQ block CHR_DER
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CORIZQ          shift and go to state 34
    ID              shift and go to state 58
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expresion                      shift and go to state 177
    listArray                      shift and go to state 49

state 137

    (25) declaration -> VAR . ID DOSPUNTOS type IGUAL expresion PUNTOCOMA

    ID              shift and go to state 178


state 138

    (30) expresion -> CORIZQ expressionList CORDER .

    MAS             reduce using rule 30 (expresion -> CORIZQ expressionList CORDER .)
    PUNTO           reduce using rule 30 (expresion -> CORIZQ expressionList CORDER .)
    MENOS           reduce using rule 30 (expresion -> CORIZQ expressionList CORDER .)
    POR             reduce using rule 30 (expresion -> CORIZQ expressionList CORDER .)
    DIVIDIDO        reduce using rule 30 (expresion -> CORIZQ expressionList CORDER .)
    MOD             reduce using rule 30 (expresion -> CORIZQ expressionList CORDER .)
    MENORQUE        reduce using rule 30 (expresion -> CORIZQ expressionList CORDER .)
    MAYORQUE        reduce using rule 30 (expresion -> CORIZQ expressionList CORDER .)
    MENORIGUAL      reduce using rule 30 (expresion -> CORIZQ expressionList CORDER .)
    MAYORIGUAL      reduce using rule 30 (expresion -> CORIZQ expressionList CORDER .)
    TERN            reduce using rule 30 (expresion -> CORIZQ expressionList CORDER .)
    AND             reduce using rule 30 (expresion -> CORIZQ expressionList CORDER .)
    OR              reduce using rule 30 (expresion -> CORIZQ expressionList CORDER .)
    IGUALDAD        reduce using rule 30 (expresion -> CORIZQ expressionList CORDER .)
    DIFERENTE       reduce using rule 30 (expresion -> CORIZQ expressionList CORDER .)
    PARDER          reduce using rule 30 (expresion -> CORIZQ expressionList CORDER .)
    CORDER          reduce using rule 30 (expresion -> CORIZQ expressionList CORDER .)
    COMA            reduce using rule 30 (expresion -> CORIZQ expressionList CORDER .)
    PUNTOCOMA       reduce using rule 30 (expresion -> CORIZQ expressionList CORDER .)
    DOSPUNTOS       reduce using rule 30 (expresion -> CORIZQ expressionList CORDER .)
    CHR_DER         reduce using rule 30 (expresion -> CORIZQ expressionList CORDER .)


state 139

    (106) expressionList -> expressionList COMA . expresion
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CORIZQ          shift and go to state 34
    ID              shift and go to state 58
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expresion                      shift and go to state 179
    listArray                      shift and go to state 49

state 140

    (62) functionstmt -> FUNC ID funcparams . functype CHR_IZQ block CHR_DER
    (74) functype -> . DOSPUNTOS type
    (75) functype -> .

    DOSPUNTOS       shift and go to state 181
    CHR_IZQ         reduce using rule 75 (functype -> .)

    functype                       shift and go to state 180

state 141

    (70) funcparams -> PARIZQ . paramsList PARDER
    (71) funcparams -> PARIZQ . PARDER
    (72) paramsList -> . paramsList COMA ID DOSPUNTOS type
    (73) paramsList -> . ID DOSPUNTOS type

    PARDER          shift and go to state 183
    ID              shift and go to state 184

    paramsList                     shift and go to state 182

state 142

    (76) returnstmt -> RETURN expresion PUNTOCOMA .

    CONSOLE         reduce using rule 76 (returnstmt -> RETURN expresion PUNTOCOMA .)
    IF              reduce using rule 76 (returnstmt -> RETURN expresion PUNTOCOMA .)
    VAR             reduce using rule 76 (returnstmt -> RETURN expresion PUNTOCOMA .)
    WHILE           reduce using rule 76 (returnstmt -> RETURN expresion PUNTOCOMA .)
    ID              reduce using rule 76 (returnstmt -> RETURN expresion PUNTOCOMA .)
    FOR             reduce using rule 76 (returnstmt -> RETURN expresion PUNTOCOMA .)
    BREAK           reduce using rule 76 (returnstmt -> RETURN expresion PUNTOCOMA .)
    CONTINUE        reduce using rule 76 (returnstmt -> RETURN expresion PUNTOCOMA .)
    FUNC            reduce using rule 76 (returnstmt -> RETURN expresion PUNTOCOMA .)
    RETURN          reduce using rule 76 (returnstmt -> RETURN expresion PUNTOCOMA .)
    SWITCH          reduce using rule 76 (returnstmt -> RETURN expresion PUNTOCOMA .)
    CONST           reduce using rule 76 (returnstmt -> RETURN expresion PUNTOCOMA .)
    INTERFACE       reduce using rule 76 (returnstmt -> RETURN expresion PUNTOCOMA .)
    CORIZQ          reduce using rule 76 (returnstmt -> RETURN expresion PUNTOCOMA .)
    PARSEINT        reduce using rule 76 (returnstmt -> RETURN expresion PUNTOCOMA .)
    PARSEFLOAT      reduce using rule 76 (returnstmt -> RETURN expresion PUNTOCOMA .)
    TYPEOF          reduce using rule 76 (returnstmt -> RETURN expresion PUNTOCOMA .)
    NOT             reduce using rule 76 (returnstmt -> RETURN expresion PUNTOCOMA .)
    MENOS           reduce using rule 76 (returnstmt -> RETURN expresion PUNTOCOMA .)
    PARIZQ          reduce using rule 76 (returnstmt -> RETURN expresion PUNTOCOMA .)
    ENTERO          reduce using rule 76 (returnstmt -> RETURN expresion PUNTOCOMA .)
    BOOLEANO        reduce using rule 76 (returnstmt -> RETURN expresion PUNTOCOMA .)
    CADENA          reduce using rule 76 (returnstmt -> RETURN expresion PUNTOCOMA .)
    DECIMAL         reduce using rule 76 (returnstmt -> RETURN expresion PUNTOCOMA .)
    $end            reduce using rule 76 (returnstmt -> RETURN expresion PUNTOCOMA .)
    CHR_DER         reduce using rule 76 (returnstmt -> RETURN expresion PUNTOCOMA .)
    DEFAULT         reduce using rule 76 (returnstmt -> RETURN expresion PUNTOCOMA .)
    CASE            reduce using rule 76 (returnstmt -> RETURN expresion PUNTOCOMA .)


state 143

    (54) switch_statement -> SWITCH PARIZQ expresion . PARDER CHR_IZQ cases_statement default_case CHR_DER
    (55) switch_statement -> SWITCH PARIZQ expresion . PARDER CHR_IZQ cases_statement CHR_DER
    (48) expresion -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIVIDIDO expresion
    (82) expresion -> expresion . MOD expresion
    (85) expresion -> expresion . MENORQUE expresion
    (86) expresion -> expresion . MAYORQUE expresion
    (87) expresion -> expresion . MENORIGUAL expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . TERN expresion DOSPUNTOS expresion
    (90) expresion -> expresion . AND expresion
    (91) expresion -> expresion . OR expresion
    (93) expresion -> expresion . IGUALDAD expresion
    (94) expresion -> expresion . DIFERENTE expresion

    PARDER          shift and go to state 185
    PUNTO           shift and go to state 61
    MAS             shift and go to state 102
    MENOS           shift and go to state 62
    POR             shift and go to state 63
    DIVIDIDO        shift and go to state 64
    MOD             shift and go to state 65
    MENORQUE        shift and go to state 66
    MAYORQUE        shift and go to state 67
    MENORIGUAL      shift and go to state 68
    MAYORIGUAL      shift and go to state 69
    TERN            shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    IGUALDAD        shift and go to state 73
    DIFERENTE       shift and go to state 74


state 144

    (26) constante -> CONST ID DOSPUNTOS . type IGUAL expresion PUNTOCOMA
    (65) interdeclaration -> CONST ID DOSPUNTOS . ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA
    (38) type -> . NUMBER
    (39) type -> . FLOAT
    (40) type -> . STRING
    (41) type -> . BOOLEAN
    (42) type -> . ID
    (43) type -> . type CORIZQ CORDER

    ID              shift and go to state 186
    NUMBER          shift and go to state 162
    FLOAT           shift and go to state 163
    STRING          shift and go to state 164
    BOOLEAN         shift and go to state 165

    type                           shift and go to state 187

state 145

    (28) constante -> CONST ID IGUAL . expresion PUNTOCOMA
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CORIZQ          shift and go to state 34
    ID              shift and go to state 58
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expresion                      shift and go to state 188
    listArray                      shift and go to state 49

state 146

    (63) interfacecreation -> INTERFACE ID CHR_IZQ . attributeList CHR_DER
    (68) attributeList -> . attributeList ID DOSPUNTOS type PUNTOCOMA
    (69) attributeList -> . ID DOSPUNTOS type PUNTOCOMA

    ID              shift and go to state 189

    attributeList                  shift and go to state 190

state 147

    (108) assigmentarray -> listArray2 IGUAL expresion . PUNTOCOMA
    (48) expresion -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIVIDIDO expresion
    (82) expresion -> expresion . MOD expresion
    (85) expresion -> expresion . MENORQUE expresion
    (86) expresion -> expresion . MAYORQUE expresion
    (87) expresion -> expresion . MENORIGUAL expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . TERN expresion DOSPUNTOS expresion
    (90) expresion -> expresion . AND expresion
    (91) expresion -> expresion . OR expresion
    (93) expresion -> expresion . IGUALDAD expresion
    (94) expresion -> expresion . DIFERENTE expresion

    PUNTOCOMA       shift and go to state 191
    PUNTO           shift and go to state 61
    MAS             shift and go to state 102
    MENOS           shift and go to state 62
    POR             shift and go to state 63
    DIVIDIDO        shift and go to state 64
    MOD             shift and go to state 65
    MENORQUE        shift and go to state 66
    MAYORQUE        shift and go to state 67
    MENORIGUAL      shift and go to state 68
    MAYORIGUAL      shift and go to state 69
    TERN            shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    IGUALDAD        shift and go to state 73
    DIFERENTE       shift and go to state 74


state 148

    (109) listArray2 -> listArray2 CORIZQ expresion . CORDER
    (48) expresion -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIVIDIDO expresion
    (82) expresion -> expresion . MOD expresion
    (85) expresion -> expresion . MENORQUE expresion
    (86) expresion -> expresion . MAYORQUE expresion
    (87) expresion -> expresion . MENORIGUAL expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . TERN expresion DOSPUNTOS expresion
    (90) expresion -> expresion . AND expresion
    (91) expresion -> expresion . OR expresion
    (93) expresion -> expresion . IGUALDAD expresion
    (94) expresion -> expresion . DIFERENTE expresion

    CORDER          shift and go to state 192
    PUNTO           shift and go to state 61
    MAS             shift and go to state 102
    MENOS           shift and go to state 62
    POR             shift and go to state 63
    DIVIDIDO        shift and go to state 64
    MOD             shift and go to state 65
    MENORQUE        shift and go to state 66
    MAYORQUE        shift and go to state 67
    MENORIGUAL      shift and go to state 68
    MAYORIGUAL      shift and go to state 69
    TERN            shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    IGUALDAD        shift and go to state 73
    DIFERENTE       shift and go to state 74


state 149

    (110) listArray2 -> listArray2 PUNTO ID .

    IGUAL           reduce using rule 110 (listArray2 -> listArray2 PUNTO ID .)
    CORIZQ          reduce using rule 110 (listArray2 -> listArray2 PUNTO ID .)
    PUNTO           reduce using rule 110 (listArray2 -> listArray2 PUNTO ID .)


state 150

    (46) expresion -> PARSEINT PARIZQ expresion . PARDER
    (48) expresion -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIVIDIDO expresion
    (82) expresion -> expresion . MOD expresion
    (85) expresion -> expresion . MENORQUE expresion
    (86) expresion -> expresion . MAYORQUE expresion
    (87) expresion -> expresion . MENORIGUAL expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . TERN expresion DOSPUNTOS expresion
    (90) expresion -> expresion . AND expresion
    (91) expresion -> expresion . OR expresion
    (93) expresion -> expresion . IGUALDAD expresion
    (94) expresion -> expresion . DIFERENTE expresion

    PARDER          shift and go to state 193
    PUNTO           shift and go to state 61
    MAS             shift and go to state 102
    MENOS           shift and go to state 62
    POR             shift and go to state 63
    DIVIDIDO        shift and go to state 64
    MOD             shift and go to state 65
    MENORQUE        shift and go to state 66
    MAYORQUE        shift and go to state 67
    MENORIGUAL      shift and go to state 68
    MAYORIGUAL      shift and go to state 69
    TERN            shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    IGUALDAD        shift and go to state 73
    DIFERENTE       shift and go to state 74


state 151

    (47) expresion -> PARSEFLOAT PARIZQ expresion . PARDER
    (48) expresion -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIVIDIDO expresion
    (82) expresion -> expresion . MOD expresion
    (85) expresion -> expresion . MENORQUE expresion
    (86) expresion -> expresion . MAYORQUE expresion
    (87) expresion -> expresion . MENORIGUAL expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . TERN expresion DOSPUNTOS expresion
    (90) expresion -> expresion . AND expresion
    (91) expresion -> expresion . OR expresion
    (93) expresion -> expresion . IGUALDAD expresion
    (94) expresion -> expresion . DIFERENTE expresion

    PARDER          shift and go to state 194
    PUNTO           shift and go to state 61
    MAS             shift and go to state 102
    MENOS           shift and go to state 62
    POR             shift and go to state 63
    DIVIDIDO        shift and go to state 64
    MOD             shift and go to state 65
    MENORQUE        shift and go to state 66
    MAYORQUE        shift and go to state 67
    MENORIGUAL      shift and go to state 68
    MAYORIGUAL      shift and go to state 69
    TERN            shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    IGUALDAD        shift and go to state 73
    DIFERENTE       shift and go to state 74


state 152

    (112) listArray -> listArray CORIZQ expresion . CORDER
    (48) expresion -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIVIDIDO expresion
    (82) expresion -> expresion . MOD expresion
    (85) expresion -> expresion . MENORQUE expresion
    (86) expresion -> expresion . MAYORQUE expresion
    (87) expresion -> expresion . MENORIGUAL expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . TERN expresion DOSPUNTOS expresion
    (90) expresion -> expresion . AND expresion
    (91) expresion -> expresion . OR expresion
    (93) expresion -> expresion . IGUALDAD expresion
    (94) expresion -> expresion . DIFERENTE expresion

    CORDER          shift and go to state 195
    PUNTO           shift and go to state 61
    MAS             shift and go to state 102
    MENOS           shift and go to state 62
    POR             shift and go to state 63
    DIVIDIDO        shift and go to state 64
    MOD             shift and go to state 65
    MENORQUE        shift and go to state 66
    MAYORQUE        shift and go to state 67
    MENORIGUAL      shift and go to state 68
    MAYORIGUAL      shift and go to state 69
    TERN            shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    IGUALDAD        shift and go to state 73
    DIFERENTE       shift and go to state 74


state 153

    (113) listArray -> listArray PUNTO ID .

    CORIZQ          reduce using rule 113 (listArray -> listArray PUNTO ID .)
    PUNTO           reduce using rule 113 (listArray -> listArray PUNTO ID .)
    MAS             reduce using rule 113 (listArray -> listArray PUNTO ID .)
    MENOS           reduce using rule 113 (listArray -> listArray PUNTO ID .)
    POR             reduce using rule 113 (listArray -> listArray PUNTO ID .)
    DIVIDIDO        reduce using rule 113 (listArray -> listArray PUNTO ID .)
    MOD             reduce using rule 113 (listArray -> listArray PUNTO ID .)
    MENORQUE        reduce using rule 113 (listArray -> listArray PUNTO ID .)
    MAYORQUE        reduce using rule 113 (listArray -> listArray PUNTO ID .)
    MENORIGUAL      reduce using rule 113 (listArray -> listArray PUNTO ID .)
    MAYORIGUAL      reduce using rule 113 (listArray -> listArray PUNTO ID .)
    TERN            reduce using rule 113 (listArray -> listArray PUNTO ID .)
    AND             reduce using rule 113 (listArray -> listArray PUNTO ID .)
    OR              reduce using rule 113 (listArray -> listArray PUNTO ID .)
    IGUALDAD        reduce using rule 113 (listArray -> listArray PUNTO ID .)
    DIFERENTE       reduce using rule 113 (listArray -> listArray PUNTO ID .)
    PARDER          reduce using rule 113 (listArray -> listArray PUNTO ID .)
    CORDER          reduce using rule 113 (listArray -> listArray PUNTO ID .)
    COMA            reduce using rule 113 (listArray -> listArray PUNTO ID .)
    PUNTOCOMA       reduce using rule 113 (listArray -> listArray PUNTO ID .)
    DOSPUNTOS       reduce using rule 113 (listArray -> listArray PUNTO ID .)
    CHR_DER         reduce using rule 113 (listArray -> listArray PUNTO ID .)


state 154

    (24) print -> CONSOLE PUNTO LOG PARIZQ . expressionList PARDER
    (106) expressionList -> . expressionList COMA expresion
    (107) expressionList -> . expresion
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CORIZQ          shift and go to state 34
    ID              shift and go to state 58
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expressionList                 shift and go to state 196
    expresion                      shift and go to state 83
    listArray                      shift and go to state 49

state 155

    (83) expresion -> ID PARIZQ expressionList . PARDER
    (106) expressionList -> expressionList . COMA expresion

    PARDER          shift and go to state 197
    COMA            shift and go to state 139


state 156

    (84) expresion -> ID PARIZQ PARDER .

    PARDER          reduce using rule 84 (expresion -> ID PARIZQ PARDER .)
    PUNTO           reduce using rule 84 (expresion -> ID PARIZQ PARDER .)
    MAS             reduce using rule 84 (expresion -> ID PARIZQ PARDER .)
    MENOS           reduce using rule 84 (expresion -> ID PARIZQ PARDER .)
    POR             reduce using rule 84 (expresion -> ID PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 84 (expresion -> ID PARIZQ PARDER .)
    MOD             reduce using rule 84 (expresion -> ID PARIZQ PARDER .)
    MENORQUE        reduce using rule 84 (expresion -> ID PARIZQ PARDER .)
    MAYORQUE        reduce using rule 84 (expresion -> ID PARIZQ PARDER .)
    MENORIGUAL      reduce using rule 84 (expresion -> ID PARIZQ PARDER .)
    MAYORIGUAL      reduce using rule 84 (expresion -> ID PARIZQ PARDER .)
    TERN            reduce using rule 84 (expresion -> ID PARIZQ PARDER .)
    AND             reduce using rule 84 (expresion -> ID PARIZQ PARDER .)
    OR              reduce using rule 84 (expresion -> ID PARIZQ PARDER .)
    IGUALDAD        reduce using rule 84 (expresion -> ID PARIZQ PARDER .)
    DIFERENTE       reduce using rule 84 (expresion -> ID PARIZQ PARDER .)
    CORDER          reduce using rule 84 (expresion -> ID PARIZQ PARDER .)
    COMA            reduce using rule 84 (expresion -> ID PARIZQ PARDER .)
    PUNTOCOMA       reduce using rule 84 (expresion -> ID PARIZQ PARDER .)
    DOSPUNTOS       reduce using rule 84 (expresion -> ID PARIZQ PARDER .)
    CHR_DER         reduce using rule 84 (expresion -> ID PARIZQ PARDER .)


state 157

    (51) ifinstruction -> IF PARIZQ expresion PARDER . CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER
    (52) ifinstruction -> IF PARIZQ expresion PARDER . CHR_IZQ block CHR_DER ELSE ifinstruction
    (53) ifinstruction -> IF PARIZQ expresion PARDER . CHR_IZQ block CHR_DER

    CHR_IZQ         shift and go to state 198


state 158

    (48) expresion -> expresion PUNTO TOSTRING PARIZQ . PARDER

    PARDER          shift and go to state 199


state 159

    (89) expresion -> expresion TERN expresion DOSPUNTOS . expresion
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CORIZQ          shift and go to state 34
    ID              shift and go to state 58
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expresion                      shift and go to state 200
    listArray                      shift and go to state 49

state 160

    (64) interdeclaration -> VAR ID DOSPUNTOS ID . IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA
    (42) type -> ID .

  ! shift/reduce conflict for IGUAL resolved as shift
    IGUAL           shift and go to state 201
    CORIZQ          reduce using rule 42 (type -> ID .)

  ! IGUAL           [ reduce using rule 42 (type -> ID .) ]


state 161

    (25) declaration -> VAR ID DOSPUNTOS type . IGUAL expresion PUNTOCOMA
    (29) arraydeclaration -> VAR ID DOSPUNTOS type . CORIZQ CORDER IGUAL expresion PUNTOCOMA
    (43) type -> type . CORIZQ CORDER

    IGUAL           shift and go to state 202
    CORIZQ          shift and go to state 203


state 162

    (38) type -> NUMBER .

    IGUAL           reduce using rule 38 (type -> NUMBER .)
    CORIZQ          reduce using rule 38 (type -> NUMBER .)
    CHR_IZQ         reduce using rule 38 (type -> NUMBER .)
    PARDER          reduce using rule 38 (type -> NUMBER .)
    COMA            reduce using rule 38 (type -> NUMBER .)
    PUNTOCOMA       reduce using rule 38 (type -> NUMBER .)


state 163

    (39) type -> FLOAT .

    IGUAL           reduce using rule 39 (type -> FLOAT .)
    CORIZQ          reduce using rule 39 (type -> FLOAT .)
    CHR_IZQ         reduce using rule 39 (type -> FLOAT .)
    PARDER          reduce using rule 39 (type -> FLOAT .)
    COMA            reduce using rule 39 (type -> FLOAT .)
    PUNTOCOMA       reduce using rule 39 (type -> FLOAT .)


state 164

    (40) type -> STRING .

    IGUAL           reduce using rule 40 (type -> STRING .)
    CORIZQ          reduce using rule 40 (type -> STRING .)
    CHR_IZQ         reduce using rule 40 (type -> STRING .)
    PARDER          reduce using rule 40 (type -> STRING .)
    COMA            reduce using rule 40 (type -> STRING .)
    PUNTOCOMA       reduce using rule 40 (type -> STRING .)


state 165

    (41) type -> BOOLEAN .

    IGUAL           reduce using rule 41 (type -> BOOLEAN .)
    CORIZQ          reduce using rule 41 (type -> BOOLEAN .)
    CHR_IZQ         reduce using rule 41 (type -> BOOLEAN .)
    PARDER          reduce using rule 41 (type -> BOOLEAN .)
    COMA            reduce using rule 41 (type -> BOOLEAN .)
    PUNTOCOMA       reduce using rule 41 (type -> BOOLEAN .)


state 166

    (27) assignment -> VAR ID IGUAL expresion . PUNTOCOMA
    (48) expresion -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIVIDIDO expresion
    (82) expresion -> expresion . MOD expresion
    (85) expresion -> expresion . MENORQUE expresion
    (86) expresion -> expresion . MAYORQUE expresion
    (87) expresion -> expresion . MENORIGUAL expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . TERN expresion DOSPUNTOS expresion
    (90) expresion -> expresion . AND expresion
    (91) expresion -> expresion . OR expresion
    (93) expresion -> expresion . IGUALDAD expresion
    (94) expresion -> expresion . DIFERENTE expresion

    PUNTOCOMA       shift and go to state 204
    PUNTO           shift and go to state 61
    MAS             shift and go to state 102
    MENOS           shift and go to state 62
    POR             shift and go to state 63
    DIVIDIDO        shift and go to state 64
    MOD             shift and go to state 65
    MENORQUE        shift and go to state 66
    MAYORQUE        shift and go to state 67
    MENORIGUAL      shift and go to state 68
    MAYORIGUAL      shift and go to state 69
    TERN            shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    IGUALDAD        shift and go to state 73
    DIFERENTE       shift and go to state 74


state 167

    (60) call -> ID PARIZQ expressionList PARDER . PUNTOCOMA
    (83) expresion -> ID PARIZQ expressionList PARDER .

    PUNTOCOMA       shift and go to state 205
    MAS             reduce using rule 83 (expresion -> ID PARIZQ expressionList PARDER .)
    PUNTO           reduce using rule 83 (expresion -> ID PARIZQ expressionList PARDER .)
    MENOS           reduce using rule 83 (expresion -> ID PARIZQ expressionList PARDER .)
    POR             reduce using rule 83 (expresion -> ID PARIZQ expressionList PARDER .)
    DIVIDIDO        reduce using rule 83 (expresion -> ID PARIZQ expressionList PARDER .)
    MOD             reduce using rule 83 (expresion -> ID PARIZQ expressionList PARDER .)
    MENORQUE        reduce using rule 83 (expresion -> ID PARIZQ expressionList PARDER .)
    MAYORQUE        reduce using rule 83 (expresion -> ID PARIZQ expressionList PARDER .)
    MENORIGUAL      reduce using rule 83 (expresion -> ID PARIZQ expressionList PARDER .)
    MAYORIGUAL      reduce using rule 83 (expresion -> ID PARIZQ expressionList PARDER .)
    TERN            reduce using rule 83 (expresion -> ID PARIZQ expressionList PARDER .)
    AND             reduce using rule 83 (expresion -> ID PARIZQ expressionList PARDER .)
    OR              reduce using rule 83 (expresion -> ID PARIZQ expressionList PARDER .)
    IGUALDAD        reduce using rule 83 (expresion -> ID PARIZQ expressionList PARDER .)
    DIFERENTE       reduce using rule 83 (expresion -> ID PARIZQ expressionList PARDER .)


state 168

    (61) call -> ID PARIZQ PARDER PUNTOCOMA .

    CONSOLE         reduce using rule 61 (call -> ID PARIZQ PARDER PUNTOCOMA .)
    IF              reduce using rule 61 (call -> ID PARIZQ PARDER PUNTOCOMA .)
    VAR             reduce using rule 61 (call -> ID PARIZQ PARDER PUNTOCOMA .)
    WHILE           reduce using rule 61 (call -> ID PARIZQ PARDER PUNTOCOMA .)
    ID              reduce using rule 61 (call -> ID PARIZQ PARDER PUNTOCOMA .)
    FOR             reduce using rule 61 (call -> ID PARIZQ PARDER PUNTOCOMA .)
    BREAK           reduce using rule 61 (call -> ID PARIZQ PARDER PUNTOCOMA .)
    CONTINUE        reduce using rule 61 (call -> ID PARIZQ PARDER PUNTOCOMA .)
    FUNC            reduce using rule 61 (call -> ID PARIZQ PARDER PUNTOCOMA .)
    RETURN          reduce using rule 61 (call -> ID PARIZQ PARDER PUNTOCOMA .)
    SWITCH          reduce using rule 61 (call -> ID PARIZQ PARDER PUNTOCOMA .)
    CONST           reduce using rule 61 (call -> ID PARIZQ PARDER PUNTOCOMA .)
    INTERFACE       reduce using rule 61 (call -> ID PARIZQ PARDER PUNTOCOMA .)
    CORIZQ          reduce using rule 61 (call -> ID PARIZQ PARDER PUNTOCOMA .)
    PARSEINT        reduce using rule 61 (call -> ID PARIZQ PARDER PUNTOCOMA .)
    PARSEFLOAT      reduce using rule 61 (call -> ID PARIZQ PARDER PUNTOCOMA .)
    TYPEOF          reduce using rule 61 (call -> ID PARIZQ PARDER PUNTOCOMA .)
    NOT             reduce using rule 61 (call -> ID PARIZQ PARDER PUNTOCOMA .)
    MENOS           reduce using rule 61 (call -> ID PARIZQ PARDER PUNTOCOMA .)
    PARIZQ          reduce using rule 61 (call -> ID PARIZQ PARDER PUNTOCOMA .)
    ENTERO          reduce using rule 61 (call -> ID PARIZQ PARDER PUNTOCOMA .)
    BOOLEANO        reduce using rule 61 (call -> ID PARIZQ PARDER PUNTOCOMA .)
    CADENA          reduce using rule 61 (call -> ID PARIZQ PARDER PUNTOCOMA .)
    DECIMAL         reduce using rule 61 (call -> ID PARIZQ PARDER PUNTOCOMA .)
    $end            reduce using rule 61 (call -> ID PARIZQ PARDER PUNTOCOMA .)
    CHR_DER         reduce using rule 61 (call -> ID PARIZQ PARDER PUNTOCOMA .)
    DEFAULT         reduce using rule 61 (call -> ID PARIZQ PARDER PUNTOCOMA .)
    CASE            reduce using rule 61 (call -> ID PARIZQ PARDER PUNTOCOMA .)


state 169

    (34) pusheo -> ID PUNTO PUSH PARIZQ . expresion PARDER PUNTOCOMA
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CORIZQ          shift and go to state 34
    ID              shift and go to state 58
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expresion                      shift and go to state 206
    listArray                      shift and go to state 49

state 170

    (32) expresion -> ID PUNTO INDEXOF PARIZQ . expresion PARDER
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CORIZQ          shift and go to state 34
    ID              shift and go to state 58
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expresion                      shift and go to state 207
    listArray                      shift and go to state 49

state 171

    (33) expresion -> ID PUNTO POP PARIZQ . PARDER

    PARDER          shift and go to state 208


state 172

    (35) expresion -> ID PUNTO JOIN PARIZQ . PARDER

    PARDER          shift and go to state 209


state 173

    (49) expresion -> ID PUNTO TOSTRING PARIZQ . PARDER

    PARDER          shift and go to state 210


state 174

    (97) expresion -> ID PUNTO LCASE PARIZQ . PARDER

    PARDER          shift and go to state 211


state 175

    (98) expresion -> ID PUNTO UPCASE PARIZQ . PARDER

    PARDER          shift and go to state 212


state 176

    (44) whileinstruction -> WHILE PARIZQ expresion PARDER . CHR_IZQ block CHR_DER

    CHR_IZQ         shift and go to state 213


state 177

    (45) forinstruction -> FOR PARIZQ declaration expresion . PUNTOCOMA operadores PARDER CHR_IZQ block CHR_DER
    (48) expresion -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIVIDIDO expresion
    (82) expresion -> expresion . MOD expresion
    (85) expresion -> expresion . MENORQUE expresion
    (86) expresion -> expresion . MAYORQUE expresion
    (87) expresion -> expresion . MENORIGUAL expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . TERN expresion DOSPUNTOS expresion
    (90) expresion -> expresion . AND expresion
    (91) expresion -> expresion . OR expresion
    (93) expresion -> expresion . IGUALDAD expresion
    (94) expresion -> expresion . DIFERENTE expresion

    PUNTOCOMA       shift and go to state 214
    PUNTO           shift and go to state 61
    MAS             shift and go to state 102
    MENOS           shift and go to state 62
    POR             shift and go to state 63
    DIVIDIDO        shift and go to state 64
    MOD             shift and go to state 65
    MENORQUE        shift and go to state 66
    MAYORQUE        shift and go to state 67
    MENORIGUAL      shift and go to state 68
    MAYORIGUAL      shift and go to state 69
    TERN            shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    IGUALDAD        shift and go to state 73
    DIFERENTE       shift and go to state 74


state 178

    (25) declaration -> VAR ID . DOSPUNTOS type IGUAL expresion PUNTOCOMA

    DOSPUNTOS       shift and go to state 215


state 179

    (106) expressionList -> expressionList COMA expresion .
    (48) expresion -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIVIDIDO expresion
    (82) expresion -> expresion . MOD expresion
    (85) expresion -> expresion . MENORQUE expresion
    (86) expresion -> expresion . MAYORQUE expresion
    (87) expresion -> expresion . MENORIGUAL expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . TERN expresion DOSPUNTOS expresion
    (90) expresion -> expresion . AND expresion
    (91) expresion -> expresion . OR expresion
    (93) expresion -> expresion . IGUALDAD expresion
    (94) expresion -> expresion . DIFERENTE expresion

    CORDER          reduce using rule 106 (expressionList -> expressionList COMA expresion .)
    COMA            reduce using rule 106 (expressionList -> expressionList COMA expresion .)
    PARDER          reduce using rule 106 (expressionList -> expressionList COMA expresion .)
    PUNTO           shift and go to state 61
    MAS             shift and go to state 102
    MENOS           shift and go to state 62
    POR             shift and go to state 63
    DIVIDIDO        shift and go to state 64
    MOD             shift and go to state 65
    MENORQUE        shift and go to state 66
    MAYORQUE        shift and go to state 67
    MENORIGUAL      shift and go to state 68
    MAYORIGUAL      shift and go to state 69
    TERN            shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    IGUALDAD        shift and go to state 73
    DIFERENTE       shift and go to state 74


state 180

    (62) functionstmt -> FUNC ID funcparams functype . CHR_IZQ block CHR_DER

    CHR_IZQ         shift and go to state 216


state 181

    (74) functype -> DOSPUNTOS . type
    (38) type -> . NUMBER
    (39) type -> . FLOAT
    (40) type -> . STRING
    (41) type -> . BOOLEAN
    (42) type -> . ID
    (43) type -> . type CORIZQ CORDER

    NUMBER          shift and go to state 162
    FLOAT           shift and go to state 163
    STRING          shift and go to state 164
    BOOLEAN         shift and go to state 165
    ID              shift and go to state 218

    type                           shift and go to state 217

state 182

    (70) funcparams -> PARIZQ paramsList . PARDER
    (72) paramsList -> paramsList . COMA ID DOSPUNTOS type

    PARDER          shift and go to state 219
    COMA            shift and go to state 220


state 183

    (71) funcparams -> PARIZQ PARDER .

    DOSPUNTOS       reduce using rule 71 (funcparams -> PARIZQ PARDER .)
    CHR_IZQ         reduce using rule 71 (funcparams -> PARIZQ PARDER .)


state 184

    (73) paramsList -> ID . DOSPUNTOS type

    DOSPUNTOS       shift and go to state 221


state 185

    (54) switch_statement -> SWITCH PARIZQ expresion PARDER . CHR_IZQ cases_statement default_case CHR_DER
    (55) switch_statement -> SWITCH PARIZQ expresion PARDER . CHR_IZQ cases_statement CHR_DER

    CHR_IZQ         shift and go to state 222


state 186

    (65) interdeclaration -> CONST ID DOSPUNTOS ID . IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA
    (42) type -> ID .

  ! shift/reduce conflict for IGUAL resolved as shift
    IGUAL           shift and go to state 223
    CORIZQ          reduce using rule 42 (type -> ID .)

  ! IGUAL           [ reduce using rule 42 (type -> ID .) ]


state 187

    (26) constante -> CONST ID DOSPUNTOS type . IGUAL expresion PUNTOCOMA
    (43) type -> type . CORIZQ CORDER

    IGUAL           shift and go to state 224
    CORIZQ          shift and go to state 225


state 188

    (28) constante -> CONST ID IGUAL expresion . PUNTOCOMA
    (48) expresion -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIVIDIDO expresion
    (82) expresion -> expresion . MOD expresion
    (85) expresion -> expresion . MENORQUE expresion
    (86) expresion -> expresion . MAYORQUE expresion
    (87) expresion -> expresion . MENORIGUAL expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . TERN expresion DOSPUNTOS expresion
    (90) expresion -> expresion . AND expresion
    (91) expresion -> expresion . OR expresion
    (93) expresion -> expresion . IGUALDAD expresion
    (94) expresion -> expresion . DIFERENTE expresion

    PUNTOCOMA       shift and go to state 226
    PUNTO           shift and go to state 61
    MAS             shift and go to state 102
    MENOS           shift and go to state 62
    POR             shift and go to state 63
    DIVIDIDO        shift and go to state 64
    MOD             shift and go to state 65
    MENORQUE        shift and go to state 66
    MAYORQUE        shift and go to state 67
    MENORIGUAL      shift and go to state 68
    MAYORIGUAL      shift and go to state 69
    TERN            shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    IGUALDAD        shift and go to state 73
    DIFERENTE       shift and go to state 74


state 189

    (69) attributeList -> ID . DOSPUNTOS type PUNTOCOMA

    DOSPUNTOS       shift and go to state 227


state 190

    (63) interfacecreation -> INTERFACE ID CHR_IZQ attributeList . CHR_DER
    (68) attributeList -> attributeList . ID DOSPUNTOS type PUNTOCOMA

    CHR_DER         shift and go to state 229
    ID              shift and go to state 228


state 191

    (108) assigmentarray -> listArray2 IGUAL expresion PUNTOCOMA .

    CONSOLE         reduce using rule 108 (assigmentarray -> listArray2 IGUAL expresion PUNTOCOMA .)
    IF              reduce using rule 108 (assigmentarray -> listArray2 IGUAL expresion PUNTOCOMA .)
    VAR             reduce using rule 108 (assigmentarray -> listArray2 IGUAL expresion PUNTOCOMA .)
    WHILE           reduce using rule 108 (assigmentarray -> listArray2 IGUAL expresion PUNTOCOMA .)
    ID              reduce using rule 108 (assigmentarray -> listArray2 IGUAL expresion PUNTOCOMA .)
    FOR             reduce using rule 108 (assigmentarray -> listArray2 IGUAL expresion PUNTOCOMA .)
    BREAK           reduce using rule 108 (assigmentarray -> listArray2 IGUAL expresion PUNTOCOMA .)
    CONTINUE        reduce using rule 108 (assigmentarray -> listArray2 IGUAL expresion PUNTOCOMA .)
    FUNC            reduce using rule 108 (assigmentarray -> listArray2 IGUAL expresion PUNTOCOMA .)
    RETURN          reduce using rule 108 (assigmentarray -> listArray2 IGUAL expresion PUNTOCOMA .)
    SWITCH          reduce using rule 108 (assigmentarray -> listArray2 IGUAL expresion PUNTOCOMA .)
    CONST           reduce using rule 108 (assigmentarray -> listArray2 IGUAL expresion PUNTOCOMA .)
    INTERFACE       reduce using rule 108 (assigmentarray -> listArray2 IGUAL expresion PUNTOCOMA .)
    CORIZQ          reduce using rule 108 (assigmentarray -> listArray2 IGUAL expresion PUNTOCOMA .)
    PARSEINT        reduce using rule 108 (assigmentarray -> listArray2 IGUAL expresion PUNTOCOMA .)
    PARSEFLOAT      reduce using rule 108 (assigmentarray -> listArray2 IGUAL expresion PUNTOCOMA .)
    TYPEOF          reduce using rule 108 (assigmentarray -> listArray2 IGUAL expresion PUNTOCOMA .)
    NOT             reduce using rule 108 (assigmentarray -> listArray2 IGUAL expresion PUNTOCOMA .)
    MENOS           reduce using rule 108 (assigmentarray -> listArray2 IGUAL expresion PUNTOCOMA .)
    PARIZQ          reduce using rule 108 (assigmentarray -> listArray2 IGUAL expresion PUNTOCOMA .)
    ENTERO          reduce using rule 108 (assigmentarray -> listArray2 IGUAL expresion PUNTOCOMA .)
    BOOLEANO        reduce using rule 108 (assigmentarray -> listArray2 IGUAL expresion PUNTOCOMA .)
    CADENA          reduce using rule 108 (assigmentarray -> listArray2 IGUAL expresion PUNTOCOMA .)
    DECIMAL         reduce using rule 108 (assigmentarray -> listArray2 IGUAL expresion PUNTOCOMA .)
    $end            reduce using rule 108 (assigmentarray -> listArray2 IGUAL expresion PUNTOCOMA .)
    CHR_DER         reduce using rule 108 (assigmentarray -> listArray2 IGUAL expresion PUNTOCOMA .)
    DEFAULT         reduce using rule 108 (assigmentarray -> listArray2 IGUAL expresion PUNTOCOMA .)
    CASE            reduce using rule 108 (assigmentarray -> listArray2 IGUAL expresion PUNTOCOMA .)


state 192

    (109) listArray2 -> listArray2 CORIZQ expresion CORDER .

    IGUAL           reduce using rule 109 (listArray2 -> listArray2 CORIZQ expresion CORDER .)
    CORIZQ          reduce using rule 109 (listArray2 -> listArray2 CORIZQ expresion CORDER .)
    PUNTO           reduce using rule 109 (listArray2 -> listArray2 CORIZQ expresion CORDER .)


state 193

    (46) expresion -> PARSEINT PARIZQ expresion PARDER .

    MAS             reduce using rule 46 (expresion -> PARSEINT PARIZQ expresion PARDER .)
    PUNTO           reduce using rule 46 (expresion -> PARSEINT PARIZQ expresion PARDER .)
    MENOS           reduce using rule 46 (expresion -> PARSEINT PARIZQ expresion PARDER .)
    POR             reduce using rule 46 (expresion -> PARSEINT PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 46 (expresion -> PARSEINT PARIZQ expresion PARDER .)
    MOD             reduce using rule 46 (expresion -> PARSEINT PARIZQ expresion PARDER .)
    MENORQUE        reduce using rule 46 (expresion -> PARSEINT PARIZQ expresion PARDER .)
    MAYORQUE        reduce using rule 46 (expresion -> PARSEINT PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 46 (expresion -> PARSEINT PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 46 (expresion -> PARSEINT PARIZQ expresion PARDER .)
    TERN            reduce using rule 46 (expresion -> PARSEINT PARIZQ expresion PARDER .)
    AND             reduce using rule 46 (expresion -> PARSEINT PARIZQ expresion PARDER .)
    OR              reduce using rule 46 (expresion -> PARSEINT PARIZQ expresion PARDER .)
    IGUALDAD        reduce using rule 46 (expresion -> PARSEINT PARIZQ expresion PARDER .)
    DIFERENTE       reduce using rule 46 (expresion -> PARSEINT PARIZQ expresion PARDER .)
    PARDER          reduce using rule 46 (expresion -> PARSEINT PARIZQ expresion PARDER .)
    CORDER          reduce using rule 46 (expresion -> PARSEINT PARIZQ expresion PARDER .)
    COMA            reduce using rule 46 (expresion -> PARSEINT PARIZQ expresion PARDER .)
    PUNTOCOMA       reduce using rule 46 (expresion -> PARSEINT PARIZQ expresion PARDER .)
    DOSPUNTOS       reduce using rule 46 (expresion -> PARSEINT PARIZQ expresion PARDER .)
    CHR_DER         reduce using rule 46 (expresion -> PARSEINT PARIZQ expresion PARDER .)


state 194

    (47) expresion -> PARSEFLOAT PARIZQ expresion PARDER .

    MAS             reduce using rule 47 (expresion -> PARSEFLOAT PARIZQ expresion PARDER .)
    PUNTO           reduce using rule 47 (expresion -> PARSEFLOAT PARIZQ expresion PARDER .)
    MENOS           reduce using rule 47 (expresion -> PARSEFLOAT PARIZQ expresion PARDER .)
    POR             reduce using rule 47 (expresion -> PARSEFLOAT PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 47 (expresion -> PARSEFLOAT PARIZQ expresion PARDER .)
    MOD             reduce using rule 47 (expresion -> PARSEFLOAT PARIZQ expresion PARDER .)
    MENORQUE        reduce using rule 47 (expresion -> PARSEFLOAT PARIZQ expresion PARDER .)
    MAYORQUE        reduce using rule 47 (expresion -> PARSEFLOAT PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 47 (expresion -> PARSEFLOAT PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 47 (expresion -> PARSEFLOAT PARIZQ expresion PARDER .)
    TERN            reduce using rule 47 (expresion -> PARSEFLOAT PARIZQ expresion PARDER .)
    AND             reduce using rule 47 (expresion -> PARSEFLOAT PARIZQ expresion PARDER .)
    OR              reduce using rule 47 (expresion -> PARSEFLOAT PARIZQ expresion PARDER .)
    IGUALDAD        reduce using rule 47 (expresion -> PARSEFLOAT PARIZQ expresion PARDER .)
    DIFERENTE       reduce using rule 47 (expresion -> PARSEFLOAT PARIZQ expresion PARDER .)
    PARDER          reduce using rule 47 (expresion -> PARSEFLOAT PARIZQ expresion PARDER .)
    CORDER          reduce using rule 47 (expresion -> PARSEFLOAT PARIZQ expresion PARDER .)
    COMA            reduce using rule 47 (expresion -> PARSEFLOAT PARIZQ expresion PARDER .)
    PUNTOCOMA       reduce using rule 47 (expresion -> PARSEFLOAT PARIZQ expresion PARDER .)
    DOSPUNTOS       reduce using rule 47 (expresion -> PARSEFLOAT PARIZQ expresion PARDER .)
    CHR_DER         reduce using rule 47 (expresion -> PARSEFLOAT PARIZQ expresion PARDER .)


state 195

    (112) listArray -> listArray CORIZQ expresion CORDER .

    CORIZQ          reduce using rule 112 (listArray -> listArray CORIZQ expresion CORDER .)
    PUNTO           reduce using rule 112 (listArray -> listArray CORIZQ expresion CORDER .)
    MAS             reduce using rule 112 (listArray -> listArray CORIZQ expresion CORDER .)
    MENOS           reduce using rule 112 (listArray -> listArray CORIZQ expresion CORDER .)
    POR             reduce using rule 112 (listArray -> listArray CORIZQ expresion CORDER .)
    DIVIDIDO        reduce using rule 112 (listArray -> listArray CORIZQ expresion CORDER .)
    MOD             reduce using rule 112 (listArray -> listArray CORIZQ expresion CORDER .)
    MENORQUE        reduce using rule 112 (listArray -> listArray CORIZQ expresion CORDER .)
    MAYORQUE        reduce using rule 112 (listArray -> listArray CORIZQ expresion CORDER .)
    MENORIGUAL      reduce using rule 112 (listArray -> listArray CORIZQ expresion CORDER .)
    MAYORIGUAL      reduce using rule 112 (listArray -> listArray CORIZQ expresion CORDER .)
    TERN            reduce using rule 112 (listArray -> listArray CORIZQ expresion CORDER .)
    AND             reduce using rule 112 (listArray -> listArray CORIZQ expresion CORDER .)
    OR              reduce using rule 112 (listArray -> listArray CORIZQ expresion CORDER .)
    IGUALDAD        reduce using rule 112 (listArray -> listArray CORIZQ expresion CORDER .)
    DIFERENTE       reduce using rule 112 (listArray -> listArray CORIZQ expresion CORDER .)
    PARDER          reduce using rule 112 (listArray -> listArray CORIZQ expresion CORDER .)
    CORDER          reduce using rule 112 (listArray -> listArray CORIZQ expresion CORDER .)
    COMA            reduce using rule 112 (listArray -> listArray CORIZQ expresion CORDER .)
    PUNTOCOMA       reduce using rule 112 (listArray -> listArray CORIZQ expresion CORDER .)
    DOSPUNTOS       reduce using rule 112 (listArray -> listArray CORIZQ expresion CORDER .)
    CHR_DER         reduce using rule 112 (listArray -> listArray CORIZQ expresion CORDER .)


state 196

    (24) print -> CONSOLE PUNTO LOG PARIZQ expressionList . PARDER
    (106) expressionList -> expressionList . COMA expresion

    PARDER          shift and go to state 230
    COMA            shift and go to state 139


state 197

    (83) expresion -> ID PARIZQ expressionList PARDER .

    PARDER          reduce using rule 83 (expresion -> ID PARIZQ expressionList PARDER .)
    PUNTO           reduce using rule 83 (expresion -> ID PARIZQ expressionList PARDER .)
    MAS             reduce using rule 83 (expresion -> ID PARIZQ expressionList PARDER .)
    MENOS           reduce using rule 83 (expresion -> ID PARIZQ expressionList PARDER .)
    POR             reduce using rule 83 (expresion -> ID PARIZQ expressionList PARDER .)
    DIVIDIDO        reduce using rule 83 (expresion -> ID PARIZQ expressionList PARDER .)
    MOD             reduce using rule 83 (expresion -> ID PARIZQ expressionList PARDER .)
    MENORQUE        reduce using rule 83 (expresion -> ID PARIZQ expressionList PARDER .)
    MAYORQUE        reduce using rule 83 (expresion -> ID PARIZQ expressionList PARDER .)
    MENORIGUAL      reduce using rule 83 (expresion -> ID PARIZQ expressionList PARDER .)
    MAYORIGUAL      reduce using rule 83 (expresion -> ID PARIZQ expressionList PARDER .)
    TERN            reduce using rule 83 (expresion -> ID PARIZQ expressionList PARDER .)
    AND             reduce using rule 83 (expresion -> ID PARIZQ expressionList PARDER .)
    OR              reduce using rule 83 (expresion -> ID PARIZQ expressionList PARDER .)
    IGUALDAD        reduce using rule 83 (expresion -> ID PARIZQ expressionList PARDER .)
    DIFERENTE       reduce using rule 83 (expresion -> ID PARIZQ expressionList PARDER .)
    CORDER          reduce using rule 83 (expresion -> ID PARIZQ expressionList PARDER .)
    COMA            reduce using rule 83 (expresion -> ID PARIZQ expressionList PARDER .)
    PUNTOCOMA       reduce using rule 83 (expresion -> ID PARIZQ expressionList PARDER .)
    DOSPUNTOS       reduce using rule 83 (expresion -> ID PARIZQ expressionList PARDER .)
    CHR_DER         reduce using rule 83 (expresion -> ID PARIZQ expressionList PARDER .)


state 198

    (51) ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ . block CHR_DER ELSE CHR_IZQ block CHR_DER
    (52) ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ . block CHR_DER ELSE ifinstruction
    (53) ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ . block CHR_DER
    (2) block -> . block instruccion
    (3) block -> . instruccion
    (4) instruccion -> . print PUNTOCOMA
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . declaration
    (7) instruccion -> . assignment
    (8) instruccion -> . whileinstruction
    (9) instruccion -> . instancia PUNTOCOMA
    (10) instruccion -> . operadores PUNTOCOMA
    (11) instruccion -> . forinstruction
    (12) instruccion -> . breakstmt PUNTOCOMA
    (13) instruccion -> . continuestmt
    (14) instruccion -> . arraydeclaration
    (15) instruccion -> . functionstmt
    (16) instruccion -> . call
    (17) instruccion -> . returnstmt
    (18) instruccion -> . pusheo
    (19) instruccion -> . switch_statement
    (20) instruccion -> . constante
    (21) instruccion -> . interfacecreation
    (22) instruccion -> . interdeclaration
    (23) instruccion -> . assigmentarray
    (24) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER
    (51) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER
    (52) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE ifinstruction
    (53) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER
    (25) declaration -> . VAR ID DOSPUNTOS type IGUAL expresion PUNTOCOMA
    (27) assignment -> . VAR ID IGUAL expresion PUNTOCOMA
    (44) whileinstruction -> . WHILE PARIZQ expresion PARDER CHR_IZQ block CHR_DER
    (36) instancia -> . ID IGUAL expresion
    (37) operadores -> . expresion MAS MAS
    (45) forinstruction -> . FOR PARIZQ declaration expresion PUNTOCOMA operadores PARDER CHR_IZQ block CHR_DER
    (105) breakstmt -> . BREAK
    (104) continuestmt -> . CONTINUE PUNTOCOMA
    (29) arraydeclaration -> . VAR ID DOSPUNTOS type CORIZQ CORDER IGUAL expresion PUNTOCOMA
    (62) functionstmt -> . FUNC ID funcparams functype CHR_IZQ block CHR_DER
    (60) call -> . ID PARIZQ expressionList PARDER PUNTOCOMA
    (61) call -> . ID PARIZQ PARDER PUNTOCOMA
    (76) returnstmt -> . RETURN expresion PUNTOCOMA
    (77) returnstmt -> . RETURN PUNTOCOMA
    (34) pusheo -> . ID PUNTO PUSH PARIZQ expresion PARDER PUNTOCOMA
    (54) switch_statement -> . SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement default_case CHR_DER
    (55) switch_statement -> . SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement CHR_DER
    (26) constante -> . CONST ID DOSPUNTOS type IGUAL expresion PUNTOCOMA
    (28) constante -> . CONST ID IGUAL expresion PUNTOCOMA
    (63) interfacecreation -> . INTERFACE ID CHR_IZQ attributeList CHR_DER
    (64) interdeclaration -> . VAR ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA
    (65) interdeclaration -> . CONST ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA
    (108) assigmentarray -> . listArray2 IGUAL expresion PUNTOCOMA
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (109) listArray2 -> . listArray2 CORIZQ expresion CORDER
    (110) listArray2 -> . listArray2 PUNTO ID
    (111) listArray2 -> . ID
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CONSOLE         shift and go to state 24
    IF              shift and go to state 26
    VAR             shift and go to state 28
    WHILE           shift and go to state 30
    ID              shift and go to state 29
    FOR             shift and go to state 31
    BREAK           shift and go to state 32
    CONTINUE        shift and go to state 33
    FUNC            shift and go to state 35
    RETURN          shift and go to state 36
    SWITCH          shift and go to state 37
    CONST           shift and go to state 38
    INTERFACE       shift and go to state 39
    CORIZQ          shift and go to state 34
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expresion                      shift and go to state 27
    block                          shift and go to state 231
    ifinstruction                  shift and go to state 5
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    declaration                    shift and go to state 6
    assignment                     shift and go to state 7
    whileinstruction               shift and go to state 8
    instancia                      shift and go to state 9
    operadores                     shift and go to state 10
    forinstruction                 shift and go to state 11
    breakstmt                      shift and go to state 12
    continuestmt                   shift and go to state 13
    arraydeclaration               shift and go to state 14
    functionstmt                   shift and go to state 15
    call                           shift and go to state 16
    returnstmt                     shift and go to state 17
    pusheo                         shift and go to state 18
    switch_statement               shift and go to state 19
    constante                      shift and go to state 20
    interfacecreation              shift and go to state 21
    interdeclaration               shift and go to state 22
    assigmentarray                 shift and go to state 23
    listArray2                     shift and go to state 40
    listArray                      shift and go to state 49

state 199

    (48) expresion -> expresion PUNTO TOSTRING PARIZQ PARDER .

    MAS             reduce using rule 48 (expresion -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    PUNTO           reduce using rule 48 (expresion -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    MENOS           reduce using rule 48 (expresion -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    POR             reduce using rule 48 (expresion -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 48 (expresion -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    MOD             reduce using rule 48 (expresion -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    MENORQUE        reduce using rule 48 (expresion -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    MAYORQUE        reduce using rule 48 (expresion -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    MENORIGUAL      reduce using rule 48 (expresion -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    MAYORIGUAL      reduce using rule 48 (expresion -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    TERN            reduce using rule 48 (expresion -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    AND             reduce using rule 48 (expresion -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    OR              reduce using rule 48 (expresion -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    IGUALDAD        reduce using rule 48 (expresion -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    DIFERENTE       reduce using rule 48 (expresion -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    PARDER          reduce using rule 48 (expresion -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    CORDER          reduce using rule 48 (expresion -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    COMA            reduce using rule 48 (expresion -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    PUNTOCOMA       reduce using rule 48 (expresion -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    DOSPUNTOS       reduce using rule 48 (expresion -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    CHR_DER         reduce using rule 48 (expresion -> expresion PUNTO TOSTRING PARIZQ PARDER .)


state 200

    (89) expresion -> expresion TERN expresion DOSPUNTOS expresion .
    (48) expresion -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIVIDIDO expresion
    (82) expresion -> expresion . MOD expresion
    (85) expresion -> expresion . MENORQUE expresion
    (86) expresion -> expresion . MAYORQUE expresion
    (87) expresion -> expresion . MENORIGUAL expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . TERN expresion DOSPUNTOS expresion
    (90) expresion -> expresion . AND expresion
    (91) expresion -> expresion . OR expresion
    (93) expresion -> expresion . IGUALDAD expresion
    (94) expresion -> expresion . DIFERENTE expresion

  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for TERN resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for IGUALDAD resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
    PARDER          reduce using rule 89 (expresion -> expresion TERN expresion DOSPUNTOS expresion .)
    CORDER          reduce using rule 89 (expresion -> expresion TERN expresion DOSPUNTOS expresion .)
    COMA            reduce using rule 89 (expresion -> expresion TERN expresion DOSPUNTOS expresion .)
    PUNTOCOMA       reduce using rule 89 (expresion -> expresion TERN expresion DOSPUNTOS expresion .)
    DOSPUNTOS       reduce using rule 89 (expresion -> expresion TERN expresion DOSPUNTOS expresion .)
    CHR_DER         reduce using rule 89 (expresion -> expresion TERN expresion DOSPUNTOS expresion .)
    PUNTO           shift and go to state 61
    MAS             shift and go to state 102
    MENOS           shift and go to state 62
    POR             shift and go to state 63
    DIVIDIDO        shift and go to state 64
    MOD             shift and go to state 65
    MENORQUE        shift and go to state 66
    MAYORQUE        shift and go to state 67
    MENORIGUAL      shift and go to state 68
    MAYORIGUAL      shift and go to state 69
    TERN            shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    IGUALDAD        shift and go to state 73
    DIFERENTE       shift and go to state 74

  ! MAS             [ reduce using rule 89 (expresion -> expresion TERN expresion DOSPUNTOS expresion .) ]
  ! PUNTO           [ reduce using rule 89 (expresion -> expresion TERN expresion DOSPUNTOS expresion .) ]
  ! MENOS           [ reduce using rule 89 (expresion -> expresion TERN expresion DOSPUNTOS expresion .) ]
  ! POR             [ reduce using rule 89 (expresion -> expresion TERN expresion DOSPUNTOS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 89 (expresion -> expresion TERN expresion DOSPUNTOS expresion .) ]
  ! MOD             [ reduce using rule 89 (expresion -> expresion TERN expresion DOSPUNTOS expresion .) ]
  ! MENORQUE        [ reduce using rule 89 (expresion -> expresion TERN expresion DOSPUNTOS expresion .) ]
  ! MAYORQUE        [ reduce using rule 89 (expresion -> expresion TERN expresion DOSPUNTOS expresion .) ]
  ! MENORIGUAL      [ reduce using rule 89 (expresion -> expresion TERN expresion DOSPUNTOS expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 89 (expresion -> expresion TERN expresion DOSPUNTOS expresion .) ]
  ! TERN            [ reduce using rule 89 (expresion -> expresion TERN expresion DOSPUNTOS expresion .) ]
  ! AND             [ reduce using rule 89 (expresion -> expresion TERN expresion DOSPUNTOS expresion .) ]
  ! OR              [ reduce using rule 89 (expresion -> expresion TERN expresion DOSPUNTOS expresion .) ]
  ! IGUALDAD        [ reduce using rule 89 (expresion -> expresion TERN expresion DOSPUNTOS expresion .) ]
  ! DIFERENTE       [ reduce using rule 89 (expresion -> expresion TERN expresion DOSPUNTOS expresion .) ]


state 201

    (64) interdeclaration -> VAR ID DOSPUNTOS ID IGUAL . CHR_IZQ interfaceContent CHR_DER PUNTOCOMA

    CHR_IZQ         shift and go to state 232


state 202

    (25) declaration -> VAR ID DOSPUNTOS type IGUAL . expresion PUNTOCOMA
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CORIZQ          shift and go to state 34
    ID              shift and go to state 58
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expresion                      shift and go to state 233
    listArray                      shift and go to state 49

state 203

    (29) arraydeclaration -> VAR ID DOSPUNTOS type CORIZQ . CORDER IGUAL expresion PUNTOCOMA
    (43) type -> type CORIZQ . CORDER

    CORDER          shift and go to state 234


state 204

    (27) assignment -> VAR ID IGUAL expresion PUNTOCOMA .

    CONSOLE         reduce using rule 27 (assignment -> VAR ID IGUAL expresion PUNTOCOMA .)
    IF              reduce using rule 27 (assignment -> VAR ID IGUAL expresion PUNTOCOMA .)
    VAR             reduce using rule 27 (assignment -> VAR ID IGUAL expresion PUNTOCOMA .)
    WHILE           reduce using rule 27 (assignment -> VAR ID IGUAL expresion PUNTOCOMA .)
    ID              reduce using rule 27 (assignment -> VAR ID IGUAL expresion PUNTOCOMA .)
    FOR             reduce using rule 27 (assignment -> VAR ID IGUAL expresion PUNTOCOMA .)
    BREAK           reduce using rule 27 (assignment -> VAR ID IGUAL expresion PUNTOCOMA .)
    CONTINUE        reduce using rule 27 (assignment -> VAR ID IGUAL expresion PUNTOCOMA .)
    FUNC            reduce using rule 27 (assignment -> VAR ID IGUAL expresion PUNTOCOMA .)
    RETURN          reduce using rule 27 (assignment -> VAR ID IGUAL expresion PUNTOCOMA .)
    SWITCH          reduce using rule 27 (assignment -> VAR ID IGUAL expresion PUNTOCOMA .)
    CONST           reduce using rule 27 (assignment -> VAR ID IGUAL expresion PUNTOCOMA .)
    INTERFACE       reduce using rule 27 (assignment -> VAR ID IGUAL expresion PUNTOCOMA .)
    CORIZQ          reduce using rule 27 (assignment -> VAR ID IGUAL expresion PUNTOCOMA .)
    PARSEINT        reduce using rule 27 (assignment -> VAR ID IGUAL expresion PUNTOCOMA .)
    PARSEFLOAT      reduce using rule 27 (assignment -> VAR ID IGUAL expresion PUNTOCOMA .)
    TYPEOF          reduce using rule 27 (assignment -> VAR ID IGUAL expresion PUNTOCOMA .)
    NOT             reduce using rule 27 (assignment -> VAR ID IGUAL expresion PUNTOCOMA .)
    MENOS           reduce using rule 27 (assignment -> VAR ID IGUAL expresion PUNTOCOMA .)
    PARIZQ          reduce using rule 27 (assignment -> VAR ID IGUAL expresion PUNTOCOMA .)
    ENTERO          reduce using rule 27 (assignment -> VAR ID IGUAL expresion PUNTOCOMA .)
    BOOLEANO        reduce using rule 27 (assignment -> VAR ID IGUAL expresion PUNTOCOMA .)
    CADENA          reduce using rule 27 (assignment -> VAR ID IGUAL expresion PUNTOCOMA .)
    DECIMAL         reduce using rule 27 (assignment -> VAR ID IGUAL expresion PUNTOCOMA .)
    $end            reduce using rule 27 (assignment -> VAR ID IGUAL expresion PUNTOCOMA .)
    CHR_DER         reduce using rule 27 (assignment -> VAR ID IGUAL expresion PUNTOCOMA .)
    DEFAULT         reduce using rule 27 (assignment -> VAR ID IGUAL expresion PUNTOCOMA .)
    CASE            reduce using rule 27 (assignment -> VAR ID IGUAL expresion PUNTOCOMA .)


state 205

    (60) call -> ID PARIZQ expressionList PARDER PUNTOCOMA .

    CONSOLE         reduce using rule 60 (call -> ID PARIZQ expressionList PARDER PUNTOCOMA .)
    IF              reduce using rule 60 (call -> ID PARIZQ expressionList PARDER PUNTOCOMA .)
    VAR             reduce using rule 60 (call -> ID PARIZQ expressionList PARDER PUNTOCOMA .)
    WHILE           reduce using rule 60 (call -> ID PARIZQ expressionList PARDER PUNTOCOMA .)
    ID              reduce using rule 60 (call -> ID PARIZQ expressionList PARDER PUNTOCOMA .)
    FOR             reduce using rule 60 (call -> ID PARIZQ expressionList PARDER PUNTOCOMA .)
    BREAK           reduce using rule 60 (call -> ID PARIZQ expressionList PARDER PUNTOCOMA .)
    CONTINUE        reduce using rule 60 (call -> ID PARIZQ expressionList PARDER PUNTOCOMA .)
    FUNC            reduce using rule 60 (call -> ID PARIZQ expressionList PARDER PUNTOCOMA .)
    RETURN          reduce using rule 60 (call -> ID PARIZQ expressionList PARDER PUNTOCOMA .)
    SWITCH          reduce using rule 60 (call -> ID PARIZQ expressionList PARDER PUNTOCOMA .)
    CONST           reduce using rule 60 (call -> ID PARIZQ expressionList PARDER PUNTOCOMA .)
    INTERFACE       reduce using rule 60 (call -> ID PARIZQ expressionList PARDER PUNTOCOMA .)
    CORIZQ          reduce using rule 60 (call -> ID PARIZQ expressionList PARDER PUNTOCOMA .)
    PARSEINT        reduce using rule 60 (call -> ID PARIZQ expressionList PARDER PUNTOCOMA .)
    PARSEFLOAT      reduce using rule 60 (call -> ID PARIZQ expressionList PARDER PUNTOCOMA .)
    TYPEOF          reduce using rule 60 (call -> ID PARIZQ expressionList PARDER PUNTOCOMA .)
    NOT             reduce using rule 60 (call -> ID PARIZQ expressionList PARDER PUNTOCOMA .)
    MENOS           reduce using rule 60 (call -> ID PARIZQ expressionList PARDER PUNTOCOMA .)
    PARIZQ          reduce using rule 60 (call -> ID PARIZQ expressionList PARDER PUNTOCOMA .)
    ENTERO          reduce using rule 60 (call -> ID PARIZQ expressionList PARDER PUNTOCOMA .)
    BOOLEANO        reduce using rule 60 (call -> ID PARIZQ expressionList PARDER PUNTOCOMA .)
    CADENA          reduce using rule 60 (call -> ID PARIZQ expressionList PARDER PUNTOCOMA .)
    DECIMAL         reduce using rule 60 (call -> ID PARIZQ expressionList PARDER PUNTOCOMA .)
    $end            reduce using rule 60 (call -> ID PARIZQ expressionList PARDER PUNTOCOMA .)
    CHR_DER         reduce using rule 60 (call -> ID PARIZQ expressionList PARDER PUNTOCOMA .)
    DEFAULT         reduce using rule 60 (call -> ID PARIZQ expressionList PARDER PUNTOCOMA .)
    CASE            reduce using rule 60 (call -> ID PARIZQ expressionList PARDER PUNTOCOMA .)


state 206

    (34) pusheo -> ID PUNTO PUSH PARIZQ expresion . PARDER PUNTOCOMA
    (48) expresion -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIVIDIDO expresion
    (82) expresion -> expresion . MOD expresion
    (85) expresion -> expresion . MENORQUE expresion
    (86) expresion -> expresion . MAYORQUE expresion
    (87) expresion -> expresion . MENORIGUAL expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . TERN expresion DOSPUNTOS expresion
    (90) expresion -> expresion . AND expresion
    (91) expresion -> expresion . OR expresion
    (93) expresion -> expresion . IGUALDAD expresion
    (94) expresion -> expresion . DIFERENTE expresion

    PARDER          shift and go to state 235
    PUNTO           shift and go to state 61
    MAS             shift and go to state 102
    MENOS           shift and go to state 62
    POR             shift and go to state 63
    DIVIDIDO        shift and go to state 64
    MOD             shift and go to state 65
    MENORQUE        shift and go to state 66
    MAYORQUE        shift and go to state 67
    MENORIGUAL      shift and go to state 68
    MAYORIGUAL      shift and go to state 69
    TERN            shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    IGUALDAD        shift and go to state 73
    DIFERENTE       shift and go to state 74


state 207

    (32) expresion -> ID PUNTO INDEXOF PARIZQ expresion . PARDER
    (48) expresion -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIVIDIDO expresion
    (82) expresion -> expresion . MOD expresion
    (85) expresion -> expresion . MENORQUE expresion
    (86) expresion -> expresion . MAYORQUE expresion
    (87) expresion -> expresion . MENORIGUAL expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . TERN expresion DOSPUNTOS expresion
    (90) expresion -> expresion . AND expresion
    (91) expresion -> expresion . OR expresion
    (93) expresion -> expresion . IGUALDAD expresion
    (94) expresion -> expresion . DIFERENTE expresion

    PARDER          shift and go to state 236
    PUNTO           shift and go to state 61
    MAS             shift and go to state 102
    MENOS           shift and go to state 62
    POR             shift and go to state 63
    DIVIDIDO        shift and go to state 64
    MOD             shift and go to state 65
    MENORQUE        shift and go to state 66
    MAYORQUE        shift and go to state 67
    MENORIGUAL      shift and go to state 68
    MAYORIGUAL      shift and go to state 69
    TERN            shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    IGUALDAD        shift and go to state 73
    DIFERENTE       shift and go to state 74


state 208

    (33) expresion -> ID PUNTO POP PARIZQ PARDER .

    MAS             reduce using rule 33 (expresion -> ID PUNTO POP PARIZQ PARDER .)
    PUNTO           reduce using rule 33 (expresion -> ID PUNTO POP PARIZQ PARDER .)
    MENOS           reduce using rule 33 (expresion -> ID PUNTO POP PARIZQ PARDER .)
    POR             reduce using rule 33 (expresion -> ID PUNTO POP PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 33 (expresion -> ID PUNTO POP PARIZQ PARDER .)
    MOD             reduce using rule 33 (expresion -> ID PUNTO POP PARIZQ PARDER .)
    MENORQUE        reduce using rule 33 (expresion -> ID PUNTO POP PARIZQ PARDER .)
    MAYORQUE        reduce using rule 33 (expresion -> ID PUNTO POP PARIZQ PARDER .)
    MENORIGUAL      reduce using rule 33 (expresion -> ID PUNTO POP PARIZQ PARDER .)
    MAYORIGUAL      reduce using rule 33 (expresion -> ID PUNTO POP PARIZQ PARDER .)
    TERN            reduce using rule 33 (expresion -> ID PUNTO POP PARIZQ PARDER .)
    AND             reduce using rule 33 (expresion -> ID PUNTO POP PARIZQ PARDER .)
    OR              reduce using rule 33 (expresion -> ID PUNTO POP PARIZQ PARDER .)
    IGUALDAD        reduce using rule 33 (expresion -> ID PUNTO POP PARIZQ PARDER .)
    DIFERENTE       reduce using rule 33 (expresion -> ID PUNTO POP PARIZQ PARDER .)
    PARDER          reduce using rule 33 (expresion -> ID PUNTO POP PARIZQ PARDER .)
    CORDER          reduce using rule 33 (expresion -> ID PUNTO POP PARIZQ PARDER .)
    COMA            reduce using rule 33 (expresion -> ID PUNTO POP PARIZQ PARDER .)
    PUNTOCOMA       reduce using rule 33 (expresion -> ID PUNTO POP PARIZQ PARDER .)
    DOSPUNTOS       reduce using rule 33 (expresion -> ID PUNTO POP PARIZQ PARDER .)
    CHR_DER         reduce using rule 33 (expresion -> ID PUNTO POP PARIZQ PARDER .)


state 209

    (35) expresion -> ID PUNTO JOIN PARIZQ PARDER .

    MAS             reduce using rule 35 (expresion -> ID PUNTO JOIN PARIZQ PARDER .)
    PUNTO           reduce using rule 35 (expresion -> ID PUNTO JOIN PARIZQ PARDER .)
    MENOS           reduce using rule 35 (expresion -> ID PUNTO JOIN PARIZQ PARDER .)
    POR             reduce using rule 35 (expresion -> ID PUNTO JOIN PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 35 (expresion -> ID PUNTO JOIN PARIZQ PARDER .)
    MOD             reduce using rule 35 (expresion -> ID PUNTO JOIN PARIZQ PARDER .)
    MENORQUE        reduce using rule 35 (expresion -> ID PUNTO JOIN PARIZQ PARDER .)
    MAYORQUE        reduce using rule 35 (expresion -> ID PUNTO JOIN PARIZQ PARDER .)
    MENORIGUAL      reduce using rule 35 (expresion -> ID PUNTO JOIN PARIZQ PARDER .)
    MAYORIGUAL      reduce using rule 35 (expresion -> ID PUNTO JOIN PARIZQ PARDER .)
    TERN            reduce using rule 35 (expresion -> ID PUNTO JOIN PARIZQ PARDER .)
    AND             reduce using rule 35 (expresion -> ID PUNTO JOIN PARIZQ PARDER .)
    OR              reduce using rule 35 (expresion -> ID PUNTO JOIN PARIZQ PARDER .)
    IGUALDAD        reduce using rule 35 (expresion -> ID PUNTO JOIN PARIZQ PARDER .)
    DIFERENTE       reduce using rule 35 (expresion -> ID PUNTO JOIN PARIZQ PARDER .)
    PARDER          reduce using rule 35 (expresion -> ID PUNTO JOIN PARIZQ PARDER .)
    CORDER          reduce using rule 35 (expresion -> ID PUNTO JOIN PARIZQ PARDER .)
    COMA            reduce using rule 35 (expresion -> ID PUNTO JOIN PARIZQ PARDER .)
    PUNTOCOMA       reduce using rule 35 (expresion -> ID PUNTO JOIN PARIZQ PARDER .)
    DOSPUNTOS       reduce using rule 35 (expresion -> ID PUNTO JOIN PARIZQ PARDER .)
    CHR_DER         reduce using rule 35 (expresion -> ID PUNTO JOIN PARIZQ PARDER .)


state 210

    (49) expresion -> ID PUNTO TOSTRING PARIZQ PARDER .

    MAS             reduce using rule 49 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    PUNTO           reduce using rule 49 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    MENOS           reduce using rule 49 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    POR             reduce using rule 49 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 49 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    MOD             reduce using rule 49 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    MENORQUE        reduce using rule 49 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    MAYORQUE        reduce using rule 49 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    MENORIGUAL      reduce using rule 49 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    MAYORIGUAL      reduce using rule 49 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    TERN            reduce using rule 49 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    AND             reduce using rule 49 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    OR              reduce using rule 49 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    IGUALDAD        reduce using rule 49 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    DIFERENTE       reduce using rule 49 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    PARDER          reduce using rule 49 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    CORDER          reduce using rule 49 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    COMA            reduce using rule 49 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    PUNTOCOMA       reduce using rule 49 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    DOSPUNTOS       reduce using rule 49 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    CHR_DER         reduce using rule 49 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)


state 211

    (97) expresion -> ID PUNTO LCASE PARIZQ PARDER .

    MAS             reduce using rule 97 (expresion -> ID PUNTO LCASE PARIZQ PARDER .)
    PUNTO           reduce using rule 97 (expresion -> ID PUNTO LCASE PARIZQ PARDER .)
    MENOS           reduce using rule 97 (expresion -> ID PUNTO LCASE PARIZQ PARDER .)
    POR             reduce using rule 97 (expresion -> ID PUNTO LCASE PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 97 (expresion -> ID PUNTO LCASE PARIZQ PARDER .)
    MOD             reduce using rule 97 (expresion -> ID PUNTO LCASE PARIZQ PARDER .)
    MENORQUE        reduce using rule 97 (expresion -> ID PUNTO LCASE PARIZQ PARDER .)
    MAYORQUE        reduce using rule 97 (expresion -> ID PUNTO LCASE PARIZQ PARDER .)
    MENORIGUAL      reduce using rule 97 (expresion -> ID PUNTO LCASE PARIZQ PARDER .)
    MAYORIGUAL      reduce using rule 97 (expresion -> ID PUNTO LCASE PARIZQ PARDER .)
    TERN            reduce using rule 97 (expresion -> ID PUNTO LCASE PARIZQ PARDER .)
    AND             reduce using rule 97 (expresion -> ID PUNTO LCASE PARIZQ PARDER .)
    OR              reduce using rule 97 (expresion -> ID PUNTO LCASE PARIZQ PARDER .)
    IGUALDAD        reduce using rule 97 (expresion -> ID PUNTO LCASE PARIZQ PARDER .)
    DIFERENTE       reduce using rule 97 (expresion -> ID PUNTO LCASE PARIZQ PARDER .)
    PARDER          reduce using rule 97 (expresion -> ID PUNTO LCASE PARIZQ PARDER .)
    CORDER          reduce using rule 97 (expresion -> ID PUNTO LCASE PARIZQ PARDER .)
    COMA            reduce using rule 97 (expresion -> ID PUNTO LCASE PARIZQ PARDER .)
    PUNTOCOMA       reduce using rule 97 (expresion -> ID PUNTO LCASE PARIZQ PARDER .)
    DOSPUNTOS       reduce using rule 97 (expresion -> ID PUNTO LCASE PARIZQ PARDER .)
    CHR_DER         reduce using rule 97 (expresion -> ID PUNTO LCASE PARIZQ PARDER .)


state 212

    (98) expresion -> ID PUNTO UPCASE PARIZQ PARDER .

    MAS             reduce using rule 98 (expresion -> ID PUNTO UPCASE PARIZQ PARDER .)
    PUNTO           reduce using rule 98 (expresion -> ID PUNTO UPCASE PARIZQ PARDER .)
    MENOS           reduce using rule 98 (expresion -> ID PUNTO UPCASE PARIZQ PARDER .)
    POR             reduce using rule 98 (expresion -> ID PUNTO UPCASE PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 98 (expresion -> ID PUNTO UPCASE PARIZQ PARDER .)
    MOD             reduce using rule 98 (expresion -> ID PUNTO UPCASE PARIZQ PARDER .)
    MENORQUE        reduce using rule 98 (expresion -> ID PUNTO UPCASE PARIZQ PARDER .)
    MAYORQUE        reduce using rule 98 (expresion -> ID PUNTO UPCASE PARIZQ PARDER .)
    MENORIGUAL      reduce using rule 98 (expresion -> ID PUNTO UPCASE PARIZQ PARDER .)
    MAYORIGUAL      reduce using rule 98 (expresion -> ID PUNTO UPCASE PARIZQ PARDER .)
    TERN            reduce using rule 98 (expresion -> ID PUNTO UPCASE PARIZQ PARDER .)
    AND             reduce using rule 98 (expresion -> ID PUNTO UPCASE PARIZQ PARDER .)
    OR              reduce using rule 98 (expresion -> ID PUNTO UPCASE PARIZQ PARDER .)
    IGUALDAD        reduce using rule 98 (expresion -> ID PUNTO UPCASE PARIZQ PARDER .)
    DIFERENTE       reduce using rule 98 (expresion -> ID PUNTO UPCASE PARIZQ PARDER .)
    PARDER          reduce using rule 98 (expresion -> ID PUNTO UPCASE PARIZQ PARDER .)
    CORDER          reduce using rule 98 (expresion -> ID PUNTO UPCASE PARIZQ PARDER .)
    COMA            reduce using rule 98 (expresion -> ID PUNTO UPCASE PARIZQ PARDER .)
    PUNTOCOMA       reduce using rule 98 (expresion -> ID PUNTO UPCASE PARIZQ PARDER .)
    DOSPUNTOS       reduce using rule 98 (expresion -> ID PUNTO UPCASE PARIZQ PARDER .)
    CHR_DER         reduce using rule 98 (expresion -> ID PUNTO UPCASE PARIZQ PARDER .)


state 213

    (44) whileinstruction -> WHILE PARIZQ expresion PARDER CHR_IZQ . block CHR_DER
    (2) block -> . block instruccion
    (3) block -> . instruccion
    (4) instruccion -> . print PUNTOCOMA
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . declaration
    (7) instruccion -> . assignment
    (8) instruccion -> . whileinstruction
    (9) instruccion -> . instancia PUNTOCOMA
    (10) instruccion -> . operadores PUNTOCOMA
    (11) instruccion -> . forinstruction
    (12) instruccion -> . breakstmt PUNTOCOMA
    (13) instruccion -> . continuestmt
    (14) instruccion -> . arraydeclaration
    (15) instruccion -> . functionstmt
    (16) instruccion -> . call
    (17) instruccion -> . returnstmt
    (18) instruccion -> . pusheo
    (19) instruccion -> . switch_statement
    (20) instruccion -> . constante
    (21) instruccion -> . interfacecreation
    (22) instruccion -> . interdeclaration
    (23) instruccion -> . assigmentarray
    (24) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER
    (51) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER
    (52) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE ifinstruction
    (53) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER
    (25) declaration -> . VAR ID DOSPUNTOS type IGUAL expresion PUNTOCOMA
    (27) assignment -> . VAR ID IGUAL expresion PUNTOCOMA
    (44) whileinstruction -> . WHILE PARIZQ expresion PARDER CHR_IZQ block CHR_DER
    (36) instancia -> . ID IGUAL expresion
    (37) operadores -> . expresion MAS MAS
    (45) forinstruction -> . FOR PARIZQ declaration expresion PUNTOCOMA operadores PARDER CHR_IZQ block CHR_DER
    (105) breakstmt -> . BREAK
    (104) continuestmt -> . CONTINUE PUNTOCOMA
    (29) arraydeclaration -> . VAR ID DOSPUNTOS type CORIZQ CORDER IGUAL expresion PUNTOCOMA
    (62) functionstmt -> . FUNC ID funcparams functype CHR_IZQ block CHR_DER
    (60) call -> . ID PARIZQ expressionList PARDER PUNTOCOMA
    (61) call -> . ID PARIZQ PARDER PUNTOCOMA
    (76) returnstmt -> . RETURN expresion PUNTOCOMA
    (77) returnstmt -> . RETURN PUNTOCOMA
    (34) pusheo -> . ID PUNTO PUSH PARIZQ expresion PARDER PUNTOCOMA
    (54) switch_statement -> . SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement default_case CHR_DER
    (55) switch_statement -> . SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement CHR_DER
    (26) constante -> . CONST ID DOSPUNTOS type IGUAL expresion PUNTOCOMA
    (28) constante -> . CONST ID IGUAL expresion PUNTOCOMA
    (63) interfacecreation -> . INTERFACE ID CHR_IZQ attributeList CHR_DER
    (64) interdeclaration -> . VAR ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA
    (65) interdeclaration -> . CONST ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA
    (108) assigmentarray -> . listArray2 IGUAL expresion PUNTOCOMA
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (109) listArray2 -> . listArray2 CORIZQ expresion CORDER
    (110) listArray2 -> . listArray2 PUNTO ID
    (111) listArray2 -> . ID
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CONSOLE         shift and go to state 24
    IF              shift and go to state 26
    VAR             shift and go to state 28
    WHILE           shift and go to state 30
    ID              shift and go to state 29
    FOR             shift and go to state 31
    BREAK           shift and go to state 32
    CONTINUE        shift and go to state 33
    FUNC            shift and go to state 35
    RETURN          shift and go to state 36
    SWITCH          shift and go to state 37
    CONST           shift and go to state 38
    INTERFACE       shift and go to state 39
    CORIZQ          shift and go to state 34
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expresion                      shift and go to state 27
    block                          shift and go to state 237
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    declaration                    shift and go to state 6
    assignment                     shift and go to state 7
    whileinstruction               shift and go to state 8
    instancia                      shift and go to state 9
    operadores                     shift and go to state 10
    forinstruction                 shift and go to state 11
    breakstmt                      shift and go to state 12
    continuestmt                   shift and go to state 13
    arraydeclaration               shift and go to state 14
    functionstmt                   shift and go to state 15
    call                           shift and go to state 16
    returnstmt                     shift and go to state 17
    pusheo                         shift and go to state 18
    switch_statement               shift and go to state 19
    constante                      shift and go to state 20
    interfacecreation              shift and go to state 21
    interdeclaration               shift and go to state 22
    assigmentarray                 shift and go to state 23
    listArray2                     shift and go to state 40
    listArray                      shift and go to state 49

state 214

    (45) forinstruction -> FOR PARIZQ declaration expresion PUNTOCOMA . operadores PARDER CHR_IZQ block CHR_DER
    (37) operadores -> . expresion MAS MAS
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CORIZQ          shift and go to state 34
    ID              shift and go to state 58
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expresion                      shift and go to state 27
    operadores                     shift and go to state 238
    listArray                      shift and go to state 49

state 215

    (25) declaration -> VAR ID DOSPUNTOS . type IGUAL expresion PUNTOCOMA
    (38) type -> . NUMBER
    (39) type -> . FLOAT
    (40) type -> . STRING
    (41) type -> . BOOLEAN
    (42) type -> . ID
    (43) type -> . type CORIZQ CORDER

    NUMBER          shift and go to state 162
    FLOAT           shift and go to state 163
    STRING          shift and go to state 164
    BOOLEAN         shift and go to state 165
    ID              shift and go to state 218

    type                           shift and go to state 239

state 216

    (62) functionstmt -> FUNC ID funcparams functype CHR_IZQ . block CHR_DER
    (2) block -> . block instruccion
    (3) block -> . instruccion
    (4) instruccion -> . print PUNTOCOMA
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . declaration
    (7) instruccion -> . assignment
    (8) instruccion -> . whileinstruction
    (9) instruccion -> . instancia PUNTOCOMA
    (10) instruccion -> . operadores PUNTOCOMA
    (11) instruccion -> . forinstruction
    (12) instruccion -> . breakstmt PUNTOCOMA
    (13) instruccion -> . continuestmt
    (14) instruccion -> . arraydeclaration
    (15) instruccion -> . functionstmt
    (16) instruccion -> . call
    (17) instruccion -> . returnstmt
    (18) instruccion -> . pusheo
    (19) instruccion -> . switch_statement
    (20) instruccion -> . constante
    (21) instruccion -> . interfacecreation
    (22) instruccion -> . interdeclaration
    (23) instruccion -> . assigmentarray
    (24) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER
    (51) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER
    (52) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE ifinstruction
    (53) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER
    (25) declaration -> . VAR ID DOSPUNTOS type IGUAL expresion PUNTOCOMA
    (27) assignment -> . VAR ID IGUAL expresion PUNTOCOMA
    (44) whileinstruction -> . WHILE PARIZQ expresion PARDER CHR_IZQ block CHR_DER
    (36) instancia -> . ID IGUAL expresion
    (37) operadores -> . expresion MAS MAS
    (45) forinstruction -> . FOR PARIZQ declaration expresion PUNTOCOMA operadores PARDER CHR_IZQ block CHR_DER
    (105) breakstmt -> . BREAK
    (104) continuestmt -> . CONTINUE PUNTOCOMA
    (29) arraydeclaration -> . VAR ID DOSPUNTOS type CORIZQ CORDER IGUAL expresion PUNTOCOMA
    (62) functionstmt -> . FUNC ID funcparams functype CHR_IZQ block CHR_DER
    (60) call -> . ID PARIZQ expressionList PARDER PUNTOCOMA
    (61) call -> . ID PARIZQ PARDER PUNTOCOMA
    (76) returnstmt -> . RETURN expresion PUNTOCOMA
    (77) returnstmt -> . RETURN PUNTOCOMA
    (34) pusheo -> . ID PUNTO PUSH PARIZQ expresion PARDER PUNTOCOMA
    (54) switch_statement -> . SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement default_case CHR_DER
    (55) switch_statement -> . SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement CHR_DER
    (26) constante -> . CONST ID DOSPUNTOS type IGUAL expresion PUNTOCOMA
    (28) constante -> . CONST ID IGUAL expresion PUNTOCOMA
    (63) interfacecreation -> . INTERFACE ID CHR_IZQ attributeList CHR_DER
    (64) interdeclaration -> . VAR ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA
    (65) interdeclaration -> . CONST ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA
    (108) assigmentarray -> . listArray2 IGUAL expresion PUNTOCOMA
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (109) listArray2 -> . listArray2 CORIZQ expresion CORDER
    (110) listArray2 -> . listArray2 PUNTO ID
    (111) listArray2 -> . ID
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CONSOLE         shift and go to state 24
    IF              shift and go to state 26
    VAR             shift and go to state 28
    WHILE           shift and go to state 30
    ID              shift and go to state 29
    FOR             shift and go to state 31
    BREAK           shift and go to state 32
    CONTINUE        shift and go to state 33
    FUNC            shift and go to state 35
    RETURN          shift and go to state 36
    SWITCH          shift and go to state 37
    CONST           shift and go to state 38
    INTERFACE       shift and go to state 39
    CORIZQ          shift and go to state 34
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    block                          shift and go to state 240
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    declaration                    shift and go to state 6
    assignment                     shift and go to state 7
    whileinstruction               shift and go to state 8
    instancia                      shift and go to state 9
    operadores                     shift and go to state 10
    forinstruction                 shift and go to state 11
    breakstmt                      shift and go to state 12
    continuestmt                   shift and go to state 13
    arraydeclaration               shift and go to state 14
    functionstmt                   shift and go to state 15
    call                           shift and go to state 16
    returnstmt                     shift and go to state 17
    pusheo                         shift and go to state 18
    switch_statement               shift and go to state 19
    constante                      shift and go to state 20
    interfacecreation              shift and go to state 21
    interdeclaration               shift and go to state 22
    assigmentarray                 shift and go to state 23
    expresion                      shift and go to state 27
    listArray2                     shift and go to state 40
    listArray                      shift and go to state 49

state 217

    (74) functype -> DOSPUNTOS type .
    (43) type -> type . CORIZQ CORDER

    CHR_IZQ         reduce using rule 74 (functype -> DOSPUNTOS type .)
    CORIZQ          shift and go to state 225


state 218

    (42) type -> ID .

    CORIZQ          reduce using rule 42 (type -> ID .)
    CHR_IZQ         reduce using rule 42 (type -> ID .)
    IGUAL           reduce using rule 42 (type -> ID .)
    PARDER          reduce using rule 42 (type -> ID .)
    COMA            reduce using rule 42 (type -> ID .)
    PUNTOCOMA       reduce using rule 42 (type -> ID .)


state 219

    (70) funcparams -> PARIZQ paramsList PARDER .

    DOSPUNTOS       reduce using rule 70 (funcparams -> PARIZQ paramsList PARDER .)
    CHR_IZQ         reduce using rule 70 (funcparams -> PARIZQ paramsList PARDER .)


state 220

    (72) paramsList -> paramsList COMA . ID DOSPUNTOS type

    ID              shift and go to state 241


state 221

    (73) paramsList -> ID DOSPUNTOS . type
    (38) type -> . NUMBER
    (39) type -> . FLOAT
    (40) type -> . STRING
    (41) type -> . BOOLEAN
    (42) type -> . ID
    (43) type -> . type CORIZQ CORDER

    NUMBER          shift and go to state 162
    FLOAT           shift and go to state 163
    STRING          shift and go to state 164
    BOOLEAN         shift and go to state 165
    ID              shift and go to state 218

    type                           shift and go to state 242

state 222

    (54) switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ . cases_statement default_case CHR_DER
    (55) switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ . cases_statement CHR_DER
    (56) cases_statement -> . cases_statement case_statement
    (57) cases_statement -> . case_statement
    (58) case_statement -> . CASE expresion DOSPUNTOS block

    CASE            shift and go to state 245

    cases_statement                shift and go to state 243
    case_statement                 shift and go to state 244

state 223

    (65) interdeclaration -> CONST ID DOSPUNTOS ID IGUAL . CHR_IZQ interfaceContent CHR_DER PUNTOCOMA

    CHR_IZQ         shift and go to state 246


state 224

    (26) constante -> CONST ID DOSPUNTOS type IGUAL . expresion PUNTOCOMA
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CORIZQ          shift and go to state 34
    ID              shift and go to state 58
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expresion                      shift and go to state 247
    listArray                      shift and go to state 49

state 225

    (43) type -> type CORIZQ . CORDER

    CORDER          shift and go to state 248


state 226

    (28) constante -> CONST ID IGUAL expresion PUNTOCOMA .

    CONSOLE         reduce using rule 28 (constante -> CONST ID IGUAL expresion PUNTOCOMA .)
    IF              reduce using rule 28 (constante -> CONST ID IGUAL expresion PUNTOCOMA .)
    VAR             reduce using rule 28 (constante -> CONST ID IGUAL expresion PUNTOCOMA .)
    WHILE           reduce using rule 28 (constante -> CONST ID IGUAL expresion PUNTOCOMA .)
    ID              reduce using rule 28 (constante -> CONST ID IGUAL expresion PUNTOCOMA .)
    FOR             reduce using rule 28 (constante -> CONST ID IGUAL expresion PUNTOCOMA .)
    BREAK           reduce using rule 28 (constante -> CONST ID IGUAL expresion PUNTOCOMA .)
    CONTINUE        reduce using rule 28 (constante -> CONST ID IGUAL expresion PUNTOCOMA .)
    FUNC            reduce using rule 28 (constante -> CONST ID IGUAL expresion PUNTOCOMA .)
    RETURN          reduce using rule 28 (constante -> CONST ID IGUAL expresion PUNTOCOMA .)
    SWITCH          reduce using rule 28 (constante -> CONST ID IGUAL expresion PUNTOCOMA .)
    CONST           reduce using rule 28 (constante -> CONST ID IGUAL expresion PUNTOCOMA .)
    INTERFACE       reduce using rule 28 (constante -> CONST ID IGUAL expresion PUNTOCOMA .)
    CORIZQ          reduce using rule 28 (constante -> CONST ID IGUAL expresion PUNTOCOMA .)
    PARSEINT        reduce using rule 28 (constante -> CONST ID IGUAL expresion PUNTOCOMA .)
    PARSEFLOAT      reduce using rule 28 (constante -> CONST ID IGUAL expresion PUNTOCOMA .)
    TYPEOF          reduce using rule 28 (constante -> CONST ID IGUAL expresion PUNTOCOMA .)
    NOT             reduce using rule 28 (constante -> CONST ID IGUAL expresion PUNTOCOMA .)
    MENOS           reduce using rule 28 (constante -> CONST ID IGUAL expresion PUNTOCOMA .)
    PARIZQ          reduce using rule 28 (constante -> CONST ID IGUAL expresion PUNTOCOMA .)
    ENTERO          reduce using rule 28 (constante -> CONST ID IGUAL expresion PUNTOCOMA .)
    BOOLEANO        reduce using rule 28 (constante -> CONST ID IGUAL expresion PUNTOCOMA .)
    CADENA          reduce using rule 28 (constante -> CONST ID IGUAL expresion PUNTOCOMA .)
    DECIMAL         reduce using rule 28 (constante -> CONST ID IGUAL expresion PUNTOCOMA .)
    $end            reduce using rule 28 (constante -> CONST ID IGUAL expresion PUNTOCOMA .)
    CHR_DER         reduce using rule 28 (constante -> CONST ID IGUAL expresion PUNTOCOMA .)
    DEFAULT         reduce using rule 28 (constante -> CONST ID IGUAL expresion PUNTOCOMA .)
    CASE            reduce using rule 28 (constante -> CONST ID IGUAL expresion PUNTOCOMA .)


state 227

    (69) attributeList -> ID DOSPUNTOS . type PUNTOCOMA
    (38) type -> . NUMBER
    (39) type -> . FLOAT
    (40) type -> . STRING
    (41) type -> . BOOLEAN
    (42) type -> . ID
    (43) type -> . type CORIZQ CORDER

    NUMBER          shift and go to state 162
    FLOAT           shift and go to state 163
    STRING          shift and go to state 164
    BOOLEAN         shift and go to state 165
    ID              shift and go to state 218

    type                           shift and go to state 249

state 228

    (68) attributeList -> attributeList ID . DOSPUNTOS type PUNTOCOMA

    DOSPUNTOS       shift and go to state 250


state 229

    (63) interfacecreation -> INTERFACE ID CHR_IZQ attributeList CHR_DER .

    CONSOLE         reduce using rule 63 (interfacecreation -> INTERFACE ID CHR_IZQ attributeList CHR_DER .)
    IF              reduce using rule 63 (interfacecreation -> INTERFACE ID CHR_IZQ attributeList CHR_DER .)
    VAR             reduce using rule 63 (interfacecreation -> INTERFACE ID CHR_IZQ attributeList CHR_DER .)
    WHILE           reduce using rule 63 (interfacecreation -> INTERFACE ID CHR_IZQ attributeList CHR_DER .)
    ID              reduce using rule 63 (interfacecreation -> INTERFACE ID CHR_IZQ attributeList CHR_DER .)
    FOR             reduce using rule 63 (interfacecreation -> INTERFACE ID CHR_IZQ attributeList CHR_DER .)
    BREAK           reduce using rule 63 (interfacecreation -> INTERFACE ID CHR_IZQ attributeList CHR_DER .)
    CONTINUE        reduce using rule 63 (interfacecreation -> INTERFACE ID CHR_IZQ attributeList CHR_DER .)
    FUNC            reduce using rule 63 (interfacecreation -> INTERFACE ID CHR_IZQ attributeList CHR_DER .)
    RETURN          reduce using rule 63 (interfacecreation -> INTERFACE ID CHR_IZQ attributeList CHR_DER .)
    SWITCH          reduce using rule 63 (interfacecreation -> INTERFACE ID CHR_IZQ attributeList CHR_DER .)
    CONST           reduce using rule 63 (interfacecreation -> INTERFACE ID CHR_IZQ attributeList CHR_DER .)
    INTERFACE       reduce using rule 63 (interfacecreation -> INTERFACE ID CHR_IZQ attributeList CHR_DER .)
    CORIZQ          reduce using rule 63 (interfacecreation -> INTERFACE ID CHR_IZQ attributeList CHR_DER .)
    PARSEINT        reduce using rule 63 (interfacecreation -> INTERFACE ID CHR_IZQ attributeList CHR_DER .)
    PARSEFLOAT      reduce using rule 63 (interfacecreation -> INTERFACE ID CHR_IZQ attributeList CHR_DER .)
    TYPEOF          reduce using rule 63 (interfacecreation -> INTERFACE ID CHR_IZQ attributeList CHR_DER .)
    NOT             reduce using rule 63 (interfacecreation -> INTERFACE ID CHR_IZQ attributeList CHR_DER .)
    MENOS           reduce using rule 63 (interfacecreation -> INTERFACE ID CHR_IZQ attributeList CHR_DER .)
    PARIZQ          reduce using rule 63 (interfacecreation -> INTERFACE ID CHR_IZQ attributeList CHR_DER .)
    ENTERO          reduce using rule 63 (interfacecreation -> INTERFACE ID CHR_IZQ attributeList CHR_DER .)
    BOOLEANO        reduce using rule 63 (interfacecreation -> INTERFACE ID CHR_IZQ attributeList CHR_DER .)
    CADENA          reduce using rule 63 (interfacecreation -> INTERFACE ID CHR_IZQ attributeList CHR_DER .)
    DECIMAL         reduce using rule 63 (interfacecreation -> INTERFACE ID CHR_IZQ attributeList CHR_DER .)
    $end            reduce using rule 63 (interfacecreation -> INTERFACE ID CHR_IZQ attributeList CHR_DER .)
    CHR_DER         reduce using rule 63 (interfacecreation -> INTERFACE ID CHR_IZQ attributeList CHR_DER .)
    DEFAULT         reduce using rule 63 (interfacecreation -> INTERFACE ID CHR_IZQ attributeList CHR_DER .)
    CASE            reduce using rule 63 (interfacecreation -> INTERFACE ID CHR_IZQ attributeList CHR_DER .)


state 230

    (24) print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER .

    PUNTOCOMA       reduce using rule 24 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER .)


state 231

    (51) ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block . CHR_DER ELSE CHR_IZQ block CHR_DER
    (52) ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block . CHR_DER ELSE ifinstruction
    (53) ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block . CHR_DER
    (2) block -> block . instruccion
    (4) instruccion -> . print PUNTOCOMA
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . declaration
    (7) instruccion -> . assignment
    (8) instruccion -> . whileinstruction
    (9) instruccion -> . instancia PUNTOCOMA
    (10) instruccion -> . operadores PUNTOCOMA
    (11) instruccion -> . forinstruction
    (12) instruccion -> . breakstmt PUNTOCOMA
    (13) instruccion -> . continuestmt
    (14) instruccion -> . arraydeclaration
    (15) instruccion -> . functionstmt
    (16) instruccion -> . call
    (17) instruccion -> . returnstmt
    (18) instruccion -> . pusheo
    (19) instruccion -> . switch_statement
    (20) instruccion -> . constante
    (21) instruccion -> . interfacecreation
    (22) instruccion -> . interdeclaration
    (23) instruccion -> . assigmentarray
    (24) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER
    (51) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER
    (52) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE ifinstruction
    (53) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER
    (25) declaration -> . VAR ID DOSPUNTOS type IGUAL expresion PUNTOCOMA
    (27) assignment -> . VAR ID IGUAL expresion PUNTOCOMA
    (44) whileinstruction -> . WHILE PARIZQ expresion PARDER CHR_IZQ block CHR_DER
    (36) instancia -> . ID IGUAL expresion
    (37) operadores -> . expresion MAS MAS
    (45) forinstruction -> . FOR PARIZQ declaration expresion PUNTOCOMA operadores PARDER CHR_IZQ block CHR_DER
    (105) breakstmt -> . BREAK
    (104) continuestmt -> . CONTINUE PUNTOCOMA
    (29) arraydeclaration -> . VAR ID DOSPUNTOS type CORIZQ CORDER IGUAL expresion PUNTOCOMA
    (62) functionstmt -> . FUNC ID funcparams functype CHR_IZQ block CHR_DER
    (60) call -> . ID PARIZQ expressionList PARDER PUNTOCOMA
    (61) call -> . ID PARIZQ PARDER PUNTOCOMA
    (76) returnstmt -> . RETURN expresion PUNTOCOMA
    (77) returnstmt -> . RETURN PUNTOCOMA
    (34) pusheo -> . ID PUNTO PUSH PARIZQ expresion PARDER PUNTOCOMA
    (54) switch_statement -> . SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement default_case CHR_DER
    (55) switch_statement -> . SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement CHR_DER
    (26) constante -> . CONST ID DOSPUNTOS type IGUAL expresion PUNTOCOMA
    (28) constante -> . CONST ID IGUAL expresion PUNTOCOMA
    (63) interfacecreation -> . INTERFACE ID CHR_IZQ attributeList CHR_DER
    (64) interdeclaration -> . VAR ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA
    (65) interdeclaration -> . CONST ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA
    (108) assigmentarray -> . listArray2 IGUAL expresion PUNTOCOMA
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (109) listArray2 -> . listArray2 CORIZQ expresion CORDER
    (110) listArray2 -> . listArray2 PUNTO ID
    (111) listArray2 -> . ID
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CHR_DER         shift and go to state 251
    CONSOLE         shift and go to state 24
    IF              shift and go to state 26
    VAR             shift and go to state 28
    WHILE           shift and go to state 30
    ID              shift and go to state 29
    FOR             shift and go to state 31
    BREAK           shift and go to state 32
    CONTINUE        shift and go to state 33
    FUNC            shift and go to state 35
    RETURN          shift and go to state 36
    SWITCH          shift and go to state 37
    CONST           shift and go to state 38
    INTERFACE       shift and go to state 39
    CORIZQ          shift and go to state 34
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expresion                      shift and go to state 27
    ifinstruction                  shift and go to state 5
    instruccion                    shift and go to state 51
    print                          shift and go to state 4
    declaration                    shift and go to state 6
    assignment                     shift and go to state 7
    whileinstruction               shift and go to state 8
    instancia                      shift and go to state 9
    operadores                     shift and go to state 10
    forinstruction                 shift and go to state 11
    breakstmt                      shift and go to state 12
    continuestmt                   shift and go to state 13
    arraydeclaration               shift and go to state 14
    functionstmt                   shift and go to state 15
    call                           shift and go to state 16
    returnstmt                     shift and go to state 17
    pusheo                         shift and go to state 18
    switch_statement               shift and go to state 19
    constante                      shift and go to state 20
    interfacecreation              shift and go to state 21
    interdeclaration               shift and go to state 22
    assigmentarray                 shift and go to state 23
    listArray2                     shift and go to state 40
    listArray                      shift and go to state 49

state 232

    (64) interdeclaration -> VAR ID DOSPUNTOS ID IGUAL CHR_IZQ . interfaceContent CHR_DER PUNTOCOMA
    (66) interfaceContent -> . interfaceContent COMA ID DOSPUNTOS expresion
    (67) interfaceContent -> . ID DOSPUNTOS expresion

    ID              shift and go to state 252

    interfaceContent               shift and go to state 253

state 233

    (25) declaration -> VAR ID DOSPUNTOS type IGUAL expresion . PUNTOCOMA
    (48) expresion -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIVIDIDO expresion
    (82) expresion -> expresion . MOD expresion
    (85) expresion -> expresion . MENORQUE expresion
    (86) expresion -> expresion . MAYORQUE expresion
    (87) expresion -> expresion . MENORIGUAL expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . TERN expresion DOSPUNTOS expresion
    (90) expresion -> expresion . AND expresion
    (91) expresion -> expresion . OR expresion
    (93) expresion -> expresion . IGUALDAD expresion
    (94) expresion -> expresion . DIFERENTE expresion

    PUNTOCOMA       shift and go to state 254
    PUNTO           shift and go to state 61
    MAS             shift and go to state 102
    MENOS           shift and go to state 62
    POR             shift and go to state 63
    DIVIDIDO        shift and go to state 64
    MOD             shift and go to state 65
    MENORQUE        shift and go to state 66
    MAYORQUE        shift and go to state 67
    MENORIGUAL      shift and go to state 68
    MAYORIGUAL      shift and go to state 69
    TERN            shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    IGUALDAD        shift and go to state 73
    DIFERENTE       shift and go to state 74


state 234

    (29) arraydeclaration -> VAR ID DOSPUNTOS type CORIZQ CORDER . IGUAL expresion PUNTOCOMA
    (43) type -> type CORIZQ CORDER .

  ! shift/reduce conflict for IGUAL resolved as shift
    IGUAL           shift and go to state 255
    CORIZQ          reduce using rule 43 (type -> type CORIZQ CORDER .)

  ! IGUAL           [ reduce using rule 43 (type -> type CORIZQ CORDER .) ]


state 235

    (34) pusheo -> ID PUNTO PUSH PARIZQ expresion PARDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 256


state 236

    (32) expresion -> ID PUNTO INDEXOF PARIZQ expresion PARDER .

    MAS             reduce using rule 32 (expresion -> ID PUNTO INDEXOF PARIZQ expresion PARDER .)
    PUNTO           reduce using rule 32 (expresion -> ID PUNTO INDEXOF PARIZQ expresion PARDER .)
    MENOS           reduce using rule 32 (expresion -> ID PUNTO INDEXOF PARIZQ expresion PARDER .)
    POR             reduce using rule 32 (expresion -> ID PUNTO INDEXOF PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 32 (expresion -> ID PUNTO INDEXOF PARIZQ expresion PARDER .)
    MOD             reduce using rule 32 (expresion -> ID PUNTO INDEXOF PARIZQ expresion PARDER .)
    MENORQUE        reduce using rule 32 (expresion -> ID PUNTO INDEXOF PARIZQ expresion PARDER .)
    MAYORQUE        reduce using rule 32 (expresion -> ID PUNTO INDEXOF PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 32 (expresion -> ID PUNTO INDEXOF PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 32 (expresion -> ID PUNTO INDEXOF PARIZQ expresion PARDER .)
    TERN            reduce using rule 32 (expresion -> ID PUNTO INDEXOF PARIZQ expresion PARDER .)
    AND             reduce using rule 32 (expresion -> ID PUNTO INDEXOF PARIZQ expresion PARDER .)
    OR              reduce using rule 32 (expresion -> ID PUNTO INDEXOF PARIZQ expresion PARDER .)
    IGUALDAD        reduce using rule 32 (expresion -> ID PUNTO INDEXOF PARIZQ expresion PARDER .)
    DIFERENTE       reduce using rule 32 (expresion -> ID PUNTO INDEXOF PARIZQ expresion PARDER .)
    PARDER          reduce using rule 32 (expresion -> ID PUNTO INDEXOF PARIZQ expresion PARDER .)
    CORDER          reduce using rule 32 (expresion -> ID PUNTO INDEXOF PARIZQ expresion PARDER .)
    COMA            reduce using rule 32 (expresion -> ID PUNTO INDEXOF PARIZQ expresion PARDER .)
    PUNTOCOMA       reduce using rule 32 (expresion -> ID PUNTO INDEXOF PARIZQ expresion PARDER .)
    DOSPUNTOS       reduce using rule 32 (expresion -> ID PUNTO INDEXOF PARIZQ expresion PARDER .)
    CHR_DER         reduce using rule 32 (expresion -> ID PUNTO INDEXOF PARIZQ expresion PARDER .)


state 237

    (44) whileinstruction -> WHILE PARIZQ expresion PARDER CHR_IZQ block . CHR_DER
    (2) block -> block . instruccion
    (4) instruccion -> . print PUNTOCOMA
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . declaration
    (7) instruccion -> . assignment
    (8) instruccion -> . whileinstruction
    (9) instruccion -> . instancia PUNTOCOMA
    (10) instruccion -> . operadores PUNTOCOMA
    (11) instruccion -> . forinstruction
    (12) instruccion -> . breakstmt PUNTOCOMA
    (13) instruccion -> . continuestmt
    (14) instruccion -> . arraydeclaration
    (15) instruccion -> . functionstmt
    (16) instruccion -> . call
    (17) instruccion -> . returnstmt
    (18) instruccion -> . pusheo
    (19) instruccion -> . switch_statement
    (20) instruccion -> . constante
    (21) instruccion -> . interfacecreation
    (22) instruccion -> . interdeclaration
    (23) instruccion -> . assigmentarray
    (24) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER
    (51) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER
    (52) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE ifinstruction
    (53) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER
    (25) declaration -> . VAR ID DOSPUNTOS type IGUAL expresion PUNTOCOMA
    (27) assignment -> . VAR ID IGUAL expresion PUNTOCOMA
    (44) whileinstruction -> . WHILE PARIZQ expresion PARDER CHR_IZQ block CHR_DER
    (36) instancia -> . ID IGUAL expresion
    (37) operadores -> . expresion MAS MAS
    (45) forinstruction -> . FOR PARIZQ declaration expresion PUNTOCOMA operadores PARDER CHR_IZQ block CHR_DER
    (105) breakstmt -> . BREAK
    (104) continuestmt -> . CONTINUE PUNTOCOMA
    (29) arraydeclaration -> . VAR ID DOSPUNTOS type CORIZQ CORDER IGUAL expresion PUNTOCOMA
    (62) functionstmt -> . FUNC ID funcparams functype CHR_IZQ block CHR_DER
    (60) call -> . ID PARIZQ expressionList PARDER PUNTOCOMA
    (61) call -> . ID PARIZQ PARDER PUNTOCOMA
    (76) returnstmt -> . RETURN expresion PUNTOCOMA
    (77) returnstmt -> . RETURN PUNTOCOMA
    (34) pusheo -> . ID PUNTO PUSH PARIZQ expresion PARDER PUNTOCOMA
    (54) switch_statement -> . SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement default_case CHR_DER
    (55) switch_statement -> . SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement CHR_DER
    (26) constante -> . CONST ID DOSPUNTOS type IGUAL expresion PUNTOCOMA
    (28) constante -> . CONST ID IGUAL expresion PUNTOCOMA
    (63) interfacecreation -> . INTERFACE ID CHR_IZQ attributeList CHR_DER
    (64) interdeclaration -> . VAR ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA
    (65) interdeclaration -> . CONST ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA
    (108) assigmentarray -> . listArray2 IGUAL expresion PUNTOCOMA
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (109) listArray2 -> . listArray2 CORIZQ expresion CORDER
    (110) listArray2 -> . listArray2 PUNTO ID
    (111) listArray2 -> . ID
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CHR_DER         shift and go to state 257
    CONSOLE         shift and go to state 24
    IF              shift and go to state 26
    VAR             shift and go to state 28
    WHILE           shift and go to state 30
    ID              shift and go to state 29
    FOR             shift and go to state 31
    BREAK           shift and go to state 32
    CONTINUE        shift and go to state 33
    FUNC            shift and go to state 35
    RETURN          shift and go to state 36
    SWITCH          shift and go to state 37
    CONST           shift and go to state 38
    INTERFACE       shift and go to state 39
    CORIZQ          shift and go to state 34
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expresion                      shift and go to state 27
    instruccion                    shift and go to state 51
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    declaration                    shift and go to state 6
    assignment                     shift and go to state 7
    whileinstruction               shift and go to state 8
    instancia                      shift and go to state 9
    operadores                     shift and go to state 10
    forinstruction                 shift and go to state 11
    breakstmt                      shift and go to state 12
    continuestmt                   shift and go to state 13
    arraydeclaration               shift and go to state 14
    functionstmt                   shift and go to state 15
    call                           shift and go to state 16
    returnstmt                     shift and go to state 17
    pusheo                         shift and go to state 18
    switch_statement               shift and go to state 19
    constante                      shift and go to state 20
    interfacecreation              shift and go to state 21
    interdeclaration               shift and go to state 22
    assigmentarray                 shift and go to state 23
    listArray2                     shift and go to state 40
    listArray                      shift and go to state 49

state 238

    (45) forinstruction -> FOR PARIZQ declaration expresion PUNTOCOMA operadores . PARDER CHR_IZQ block CHR_DER

    PARDER          shift and go to state 258


state 239

    (25) declaration -> VAR ID DOSPUNTOS type . IGUAL expresion PUNTOCOMA
    (43) type -> type . CORIZQ CORDER

    IGUAL           shift and go to state 202
    CORIZQ          shift and go to state 225


state 240

    (62) functionstmt -> FUNC ID funcparams functype CHR_IZQ block . CHR_DER
    (2) block -> block . instruccion
    (4) instruccion -> . print PUNTOCOMA
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . declaration
    (7) instruccion -> . assignment
    (8) instruccion -> . whileinstruction
    (9) instruccion -> . instancia PUNTOCOMA
    (10) instruccion -> . operadores PUNTOCOMA
    (11) instruccion -> . forinstruction
    (12) instruccion -> . breakstmt PUNTOCOMA
    (13) instruccion -> . continuestmt
    (14) instruccion -> . arraydeclaration
    (15) instruccion -> . functionstmt
    (16) instruccion -> . call
    (17) instruccion -> . returnstmt
    (18) instruccion -> . pusheo
    (19) instruccion -> . switch_statement
    (20) instruccion -> . constante
    (21) instruccion -> . interfacecreation
    (22) instruccion -> . interdeclaration
    (23) instruccion -> . assigmentarray
    (24) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER
    (51) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER
    (52) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE ifinstruction
    (53) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER
    (25) declaration -> . VAR ID DOSPUNTOS type IGUAL expresion PUNTOCOMA
    (27) assignment -> . VAR ID IGUAL expresion PUNTOCOMA
    (44) whileinstruction -> . WHILE PARIZQ expresion PARDER CHR_IZQ block CHR_DER
    (36) instancia -> . ID IGUAL expresion
    (37) operadores -> . expresion MAS MAS
    (45) forinstruction -> . FOR PARIZQ declaration expresion PUNTOCOMA operadores PARDER CHR_IZQ block CHR_DER
    (105) breakstmt -> . BREAK
    (104) continuestmt -> . CONTINUE PUNTOCOMA
    (29) arraydeclaration -> . VAR ID DOSPUNTOS type CORIZQ CORDER IGUAL expresion PUNTOCOMA
    (62) functionstmt -> . FUNC ID funcparams functype CHR_IZQ block CHR_DER
    (60) call -> . ID PARIZQ expressionList PARDER PUNTOCOMA
    (61) call -> . ID PARIZQ PARDER PUNTOCOMA
    (76) returnstmt -> . RETURN expresion PUNTOCOMA
    (77) returnstmt -> . RETURN PUNTOCOMA
    (34) pusheo -> . ID PUNTO PUSH PARIZQ expresion PARDER PUNTOCOMA
    (54) switch_statement -> . SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement default_case CHR_DER
    (55) switch_statement -> . SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement CHR_DER
    (26) constante -> . CONST ID DOSPUNTOS type IGUAL expresion PUNTOCOMA
    (28) constante -> . CONST ID IGUAL expresion PUNTOCOMA
    (63) interfacecreation -> . INTERFACE ID CHR_IZQ attributeList CHR_DER
    (64) interdeclaration -> . VAR ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA
    (65) interdeclaration -> . CONST ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA
    (108) assigmentarray -> . listArray2 IGUAL expresion PUNTOCOMA
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (109) listArray2 -> . listArray2 CORIZQ expresion CORDER
    (110) listArray2 -> . listArray2 PUNTO ID
    (111) listArray2 -> . ID
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CHR_DER         shift and go to state 259
    CONSOLE         shift and go to state 24
    IF              shift and go to state 26
    VAR             shift and go to state 28
    WHILE           shift and go to state 30
    ID              shift and go to state 29
    FOR             shift and go to state 31
    BREAK           shift and go to state 32
    CONTINUE        shift and go to state 33
    FUNC            shift and go to state 35
    RETURN          shift and go to state 36
    SWITCH          shift and go to state 37
    CONST           shift and go to state 38
    INTERFACE       shift and go to state 39
    CORIZQ          shift and go to state 34
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    instruccion                    shift and go to state 51
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    declaration                    shift and go to state 6
    assignment                     shift and go to state 7
    whileinstruction               shift and go to state 8
    instancia                      shift and go to state 9
    operadores                     shift and go to state 10
    forinstruction                 shift and go to state 11
    breakstmt                      shift and go to state 12
    continuestmt                   shift and go to state 13
    arraydeclaration               shift and go to state 14
    functionstmt                   shift and go to state 15
    call                           shift and go to state 16
    returnstmt                     shift and go to state 17
    pusheo                         shift and go to state 18
    switch_statement               shift and go to state 19
    constante                      shift and go to state 20
    interfacecreation              shift and go to state 21
    interdeclaration               shift and go to state 22
    assigmentarray                 shift and go to state 23
    expresion                      shift and go to state 27
    listArray2                     shift and go to state 40
    listArray                      shift and go to state 49

state 241

    (72) paramsList -> paramsList COMA ID . DOSPUNTOS type

    DOSPUNTOS       shift and go to state 260


state 242

    (73) paramsList -> ID DOSPUNTOS type .
    (43) type -> type . CORIZQ CORDER

    PARDER          reduce using rule 73 (paramsList -> ID DOSPUNTOS type .)
    COMA            reduce using rule 73 (paramsList -> ID DOSPUNTOS type .)
    CORIZQ          shift and go to state 225


state 243

    (54) switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement . default_case CHR_DER
    (55) switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement . CHR_DER
    (56) cases_statement -> cases_statement . case_statement
    (59) default_case -> . DEFAULT DOSPUNTOS block
    (58) case_statement -> . CASE expresion DOSPUNTOS block

    CHR_DER         shift and go to state 262
    DEFAULT         shift and go to state 264
    CASE            shift and go to state 245

    default_case                   shift and go to state 261
    case_statement                 shift and go to state 263

state 244

    (57) cases_statement -> case_statement .

    CHR_DER         reduce using rule 57 (cases_statement -> case_statement .)
    DEFAULT         reduce using rule 57 (cases_statement -> case_statement .)
    CASE            reduce using rule 57 (cases_statement -> case_statement .)


state 245

    (58) case_statement -> CASE . expresion DOSPUNTOS block
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CORIZQ          shift and go to state 34
    ID              shift and go to state 58
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expresion                      shift and go to state 265
    listArray                      shift and go to state 49

state 246

    (65) interdeclaration -> CONST ID DOSPUNTOS ID IGUAL CHR_IZQ . interfaceContent CHR_DER PUNTOCOMA
    (66) interfaceContent -> . interfaceContent COMA ID DOSPUNTOS expresion
    (67) interfaceContent -> . ID DOSPUNTOS expresion

    ID              shift and go to state 252

    interfaceContent               shift and go to state 266

state 247

    (26) constante -> CONST ID DOSPUNTOS type IGUAL expresion . PUNTOCOMA
    (48) expresion -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIVIDIDO expresion
    (82) expresion -> expresion . MOD expresion
    (85) expresion -> expresion . MENORQUE expresion
    (86) expresion -> expresion . MAYORQUE expresion
    (87) expresion -> expresion . MENORIGUAL expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . TERN expresion DOSPUNTOS expresion
    (90) expresion -> expresion . AND expresion
    (91) expresion -> expresion . OR expresion
    (93) expresion -> expresion . IGUALDAD expresion
    (94) expresion -> expresion . DIFERENTE expresion

    PUNTOCOMA       shift and go to state 267
    PUNTO           shift and go to state 61
    MAS             shift and go to state 102
    MENOS           shift and go to state 62
    POR             shift and go to state 63
    DIVIDIDO        shift and go to state 64
    MOD             shift and go to state 65
    MENORQUE        shift and go to state 66
    MAYORQUE        shift and go to state 67
    MENORIGUAL      shift and go to state 68
    MAYORIGUAL      shift and go to state 69
    TERN            shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    IGUALDAD        shift and go to state 73
    DIFERENTE       shift and go to state 74


state 248

    (43) type -> type CORIZQ CORDER .

    IGUAL           reduce using rule 43 (type -> type CORIZQ CORDER .)
    CORIZQ          reduce using rule 43 (type -> type CORIZQ CORDER .)
    CHR_IZQ         reduce using rule 43 (type -> type CORIZQ CORDER .)
    PARDER          reduce using rule 43 (type -> type CORIZQ CORDER .)
    COMA            reduce using rule 43 (type -> type CORIZQ CORDER .)
    PUNTOCOMA       reduce using rule 43 (type -> type CORIZQ CORDER .)


state 249

    (69) attributeList -> ID DOSPUNTOS type . PUNTOCOMA
    (43) type -> type . CORIZQ CORDER

    PUNTOCOMA       shift and go to state 268
    CORIZQ          shift and go to state 225


state 250

    (68) attributeList -> attributeList ID DOSPUNTOS . type PUNTOCOMA
    (38) type -> . NUMBER
    (39) type -> . FLOAT
    (40) type -> . STRING
    (41) type -> . BOOLEAN
    (42) type -> . ID
    (43) type -> . type CORIZQ CORDER

    NUMBER          shift and go to state 162
    FLOAT           shift and go to state 163
    STRING          shift and go to state 164
    BOOLEAN         shift and go to state 165
    ID              shift and go to state 218

    type                           shift and go to state 269

state 251

    (51) ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER . ELSE CHR_IZQ block CHR_DER
    (52) ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER . ELSE ifinstruction
    (53) ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER .

    ELSE            shift and go to state 270
    CONSOLE         reduce using rule 53 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    IF              reduce using rule 53 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    VAR             reduce using rule 53 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    WHILE           reduce using rule 53 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    ID              reduce using rule 53 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    FOR             reduce using rule 53 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    BREAK           reduce using rule 53 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    CONTINUE        reduce using rule 53 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    FUNC            reduce using rule 53 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    RETURN          reduce using rule 53 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    SWITCH          reduce using rule 53 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    CONST           reduce using rule 53 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    INTERFACE       reduce using rule 53 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    CORIZQ          reduce using rule 53 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    PARSEINT        reduce using rule 53 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    PARSEFLOAT      reduce using rule 53 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    TYPEOF          reduce using rule 53 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    NOT             reduce using rule 53 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    MENOS           reduce using rule 53 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    PARIZQ          reduce using rule 53 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    ENTERO          reduce using rule 53 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    BOOLEANO        reduce using rule 53 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    CADENA          reduce using rule 53 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    DECIMAL         reduce using rule 53 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    $end            reduce using rule 53 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    CHR_DER         reduce using rule 53 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    DEFAULT         reduce using rule 53 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    CASE            reduce using rule 53 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)


state 252

    (67) interfaceContent -> ID . DOSPUNTOS expresion

    DOSPUNTOS       shift and go to state 271


state 253

    (64) interdeclaration -> VAR ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent . CHR_DER PUNTOCOMA
    (66) interfaceContent -> interfaceContent . COMA ID DOSPUNTOS expresion

    CHR_DER         shift and go to state 272
    COMA            shift and go to state 273


state 254

    (25) declaration -> VAR ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .

    CONSOLE         reduce using rule 25 (declaration -> VAR ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    IF              reduce using rule 25 (declaration -> VAR ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    VAR             reduce using rule 25 (declaration -> VAR ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    WHILE           reduce using rule 25 (declaration -> VAR ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    ID              reduce using rule 25 (declaration -> VAR ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    FOR             reduce using rule 25 (declaration -> VAR ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    BREAK           reduce using rule 25 (declaration -> VAR ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    CONTINUE        reduce using rule 25 (declaration -> VAR ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    FUNC            reduce using rule 25 (declaration -> VAR ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    RETURN          reduce using rule 25 (declaration -> VAR ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    SWITCH          reduce using rule 25 (declaration -> VAR ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    CONST           reduce using rule 25 (declaration -> VAR ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    INTERFACE       reduce using rule 25 (declaration -> VAR ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    CORIZQ          reduce using rule 25 (declaration -> VAR ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    PARSEINT        reduce using rule 25 (declaration -> VAR ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    PARSEFLOAT      reduce using rule 25 (declaration -> VAR ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    TYPEOF          reduce using rule 25 (declaration -> VAR ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    NOT             reduce using rule 25 (declaration -> VAR ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    MENOS           reduce using rule 25 (declaration -> VAR ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    PARIZQ          reduce using rule 25 (declaration -> VAR ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    ENTERO          reduce using rule 25 (declaration -> VAR ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    BOOLEANO        reduce using rule 25 (declaration -> VAR ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    CADENA          reduce using rule 25 (declaration -> VAR ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    DECIMAL         reduce using rule 25 (declaration -> VAR ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    $end            reduce using rule 25 (declaration -> VAR ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    CHR_DER         reduce using rule 25 (declaration -> VAR ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    DEFAULT         reduce using rule 25 (declaration -> VAR ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    CASE            reduce using rule 25 (declaration -> VAR ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)


state 255

    (29) arraydeclaration -> VAR ID DOSPUNTOS type CORIZQ CORDER IGUAL . expresion PUNTOCOMA
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CORIZQ          shift and go to state 34
    ID              shift and go to state 58
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expresion                      shift and go to state 274
    listArray                      shift and go to state 49

state 256

    (34) pusheo -> ID PUNTO PUSH PARIZQ expresion PARDER PUNTOCOMA .

    CONSOLE         reduce using rule 34 (pusheo -> ID PUNTO PUSH PARIZQ expresion PARDER PUNTOCOMA .)
    IF              reduce using rule 34 (pusheo -> ID PUNTO PUSH PARIZQ expresion PARDER PUNTOCOMA .)
    VAR             reduce using rule 34 (pusheo -> ID PUNTO PUSH PARIZQ expresion PARDER PUNTOCOMA .)
    WHILE           reduce using rule 34 (pusheo -> ID PUNTO PUSH PARIZQ expresion PARDER PUNTOCOMA .)
    ID              reduce using rule 34 (pusheo -> ID PUNTO PUSH PARIZQ expresion PARDER PUNTOCOMA .)
    FOR             reduce using rule 34 (pusheo -> ID PUNTO PUSH PARIZQ expresion PARDER PUNTOCOMA .)
    BREAK           reduce using rule 34 (pusheo -> ID PUNTO PUSH PARIZQ expresion PARDER PUNTOCOMA .)
    CONTINUE        reduce using rule 34 (pusheo -> ID PUNTO PUSH PARIZQ expresion PARDER PUNTOCOMA .)
    FUNC            reduce using rule 34 (pusheo -> ID PUNTO PUSH PARIZQ expresion PARDER PUNTOCOMA .)
    RETURN          reduce using rule 34 (pusheo -> ID PUNTO PUSH PARIZQ expresion PARDER PUNTOCOMA .)
    SWITCH          reduce using rule 34 (pusheo -> ID PUNTO PUSH PARIZQ expresion PARDER PUNTOCOMA .)
    CONST           reduce using rule 34 (pusheo -> ID PUNTO PUSH PARIZQ expresion PARDER PUNTOCOMA .)
    INTERFACE       reduce using rule 34 (pusheo -> ID PUNTO PUSH PARIZQ expresion PARDER PUNTOCOMA .)
    CORIZQ          reduce using rule 34 (pusheo -> ID PUNTO PUSH PARIZQ expresion PARDER PUNTOCOMA .)
    PARSEINT        reduce using rule 34 (pusheo -> ID PUNTO PUSH PARIZQ expresion PARDER PUNTOCOMA .)
    PARSEFLOAT      reduce using rule 34 (pusheo -> ID PUNTO PUSH PARIZQ expresion PARDER PUNTOCOMA .)
    TYPEOF          reduce using rule 34 (pusheo -> ID PUNTO PUSH PARIZQ expresion PARDER PUNTOCOMA .)
    NOT             reduce using rule 34 (pusheo -> ID PUNTO PUSH PARIZQ expresion PARDER PUNTOCOMA .)
    MENOS           reduce using rule 34 (pusheo -> ID PUNTO PUSH PARIZQ expresion PARDER PUNTOCOMA .)
    PARIZQ          reduce using rule 34 (pusheo -> ID PUNTO PUSH PARIZQ expresion PARDER PUNTOCOMA .)
    ENTERO          reduce using rule 34 (pusheo -> ID PUNTO PUSH PARIZQ expresion PARDER PUNTOCOMA .)
    BOOLEANO        reduce using rule 34 (pusheo -> ID PUNTO PUSH PARIZQ expresion PARDER PUNTOCOMA .)
    CADENA          reduce using rule 34 (pusheo -> ID PUNTO PUSH PARIZQ expresion PARDER PUNTOCOMA .)
    DECIMAL         reduce using rule 34 (pusheo -> ID PUNTO PUSH PARIZQ expresion PARDER PUNTOCOMA .)
    $end            reduce using rule 34 (pusheo -> ID PUNTO PUSH PARIZQ expresion PARDER PUNTOCOMA .)
    CHR_DER         reduce using rule 34 (pusheo -> ID PUNTO PUSH PARIZQ expresion PARDER PUNTOCOMA .)
    DEFAULT         reduce using rule 34 (pusheo -> ID PUNTO PUSH PARIZQ expresion PARDER PUNTOCOMA .)
    CASE            reduce using rule 34 (pusheo -> ID PUNTO PUSH PARIZQ expresion PARDER PUNTOCOMA .)


state 257

    (44) whileinstruction -> WHILE PARIZQ expresion PARDER CHR_IZQ block CHR_DER .

    CONSOLE         reduce using rule 44 (whileinstruction -> WHILE PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    IF              reduce using rule 44 (whileinstruction -> WHILE PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    VAR             reduce using rule 44 (whileinstruction -> WHILE PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    WHILE           reduce using rule 44 (whileinstruction -> WHILE PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    ID              reduce using rule 44 (whileinstruction -> WHILE PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    FOR             reduce using rule 44 (whileinstruction -> WHILE PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    BREAK           reduce using rule 44 (whileinstruction -> WHILE PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    CONTINUE        reduce using rule 44 (whileinstruction -> WHILE PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    FUNC            reduce using rule 44 (whileinstruction -> WHILE PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    RETURN          reduce using rule 44 (whileinstruction -> WHILE PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    SWITCH          reduce using rule 44 (whileinstruction -> WHILE PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    CONST           reduce using rule 44 (whileinstruction -> WHILE PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    INTERFACE       reduce using rule 44 (whileinstruction -> WHILE PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    CORIZQ          reduce using rule 44 (whileinstruction -> WHILE PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    PARSEINT        reduce using rule 44 (whileinstruction -> WHILE PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    PARSEFLOAT      reduce using rule 44 (whileinstruction -> WHILE PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    TYPEOF          reduce using rule 44 (whileinstruction -> WHILE PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    NOT             reduce using rule 44 (whileinstruction -> WHILE PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    MENOS           reduce using rule 44 (whileinstruction -> WHILE PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    PARIZQ          reduce using rule 44 (whileinstruction -> WHILE PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    ENTERO          reduce using rule 44 (whileinstruction -> WHILE PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    BOOLEANO        reduce using rule 44 (whileinstruction -> WHILE PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    CADENA          reduce using rule 44 (whileinstruction -> WHILE PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    DECIMAL         reduce using rule 44 (whileinstruction -> WHILE PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    $end            reduce using rule 44 (whileinstruction -> WHILE PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    CHR_DER         reduce using rule 44 (whileinstruction -> WHILE PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    DEFAULT         reduce using rule 44 (whileinstruction -> WHILE PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)
    CASE            reduce using rule 44 (whileinstruction -> WHILE PARIZQ expresion PARDER CHR_IZQ block CHR_DER .)


state 258

    (45) forinstruction -> FOR PARIZQ declaration expresion PUNTOCOMA operadores PARDER . CHR_IZQ block CHR_DER

    CHR_IZQ         shift and go to state 275


state 259

    (62) functionstmt -> FUNC ID funcparams functype CHR_IZQ block CHR_DER .

    CONSOLE         reduce using rule 62 (functionstmt -> FUNC ID funcparams functype CHR_IZQ block CHR_DER .)
    IF              reduce using rule 62 (functionstmt -> FUNC ID funcparams functype CHR_IZQ block CHR_DER .)
    VAR             reduce using rule 62 (functionstmt -> FUNC ID funcparams functype CHR_IZQ block CHR_DER .)
    WHILE           reduce using rule 62 (functionstmt -> FUNC ID funcparams functype CHR_IZQ block CHR_DER .)
    ID              reduce using rule 62 (functionstmt -> FUNC ID funcparams functype CHR_IZQ block CHR_DER .)
    FOR             reduce using rule 62 (functionstmt -> FUNC ID funcparams functype CHR_IZQ block CHR_DER .)
    BREAK           reduce using rule 62 (functionstmt -> FUNC ID funcparams functype CHR_IZQ block CHR_DER .)
    CONTINUE        reduce using rule 62 (functionstmt -> FUNC ID funcparams functype CHR_IZQ block CHR_DER .)
    FUNC            reduce using rule 62 (functionstmt -> FUNC ID funcparams functype CHR_IZQ block CHR_DER .)
    RETURN          reduce using rule 62 (functionstmt -> FUNC ID funcparams functype CHR_IZQ block CHR_DER .)
    SWITCH          reduce using rule 62 (functionstmt -> FUNC ID funcparams functype CHR_IZQ block CHR_DER .)
    CONST           reduce using rule 62 (functionstmt -> FUNC ID funcparams functype CHR_IZQ block CHR_DER .)
    INTERFACE       reduce using rule 62 (functionstmt -> FUNC ID funcparams functype CHR_IZQ block CHR_DER .)
    CORIZQ          reduce using rule 62 (functionstmt -> FUNC ID funcparams functype CHR_IZQ block CHR_DER .)
    PARSEINT        reduce using rule 62 (functionstmt -> FUNC ID funcparams functype CHR_IZQ block CHR_DER .)
    PARSEFLOAT      reduce using rule 62 (functionstmt -> FUNC ID funcparams functype CHR_IZQ block CHR_DER .)
    TYPEOF          reduce using rule 62 (functionstmt -> FUNC ID funcparams functype CHR_IZQ block CHR_DER .)
    NOT             reduce using rule 62 (functionstmt -> FUNC ID funcparams functype CHR_IZQ block CHR_DER .)
    MENOS           reduce using rule 62 (functionstmt -> FUNC ID funcparams functype CHR_IZQ block CHR_DER .)
    PARIZQ          reduce using rule 62 (functionstmt -> FUNC ID funcparams functype CHR_IZQ block CHR_DER .)
    ENTERO          reduce using rule 62 (functionstmt -> FUNC ID funcparams functype CHR_IZQ block CHR_DER .)
    BOOLEANO        reduce using rule 62 (functionstmt -> FUNC ID funcparams functype CHR_IZQ block CHR_DER .)
    CADENA          reduce using rule 62 (functionstmt -> FUNC ID funcparams functype CHR_IZQ block CHR_DER .)
    DECIMAL         reduce using rule 62 (functionstmt -> FUNC ID funcparams functype CHR_IZQ block CHR_DER .)
    $end            reduce using rule 62 (functionstmt -> FUNC ID funcparams functype CHR_IZQ block CHR_DER .)
    CHR_DER         reduce using rule 62 (functionstmt -> FUNC ID funcparams functype CHR_IZQ block CHR_DER .)
    DEFAULT         reduce using rule 62 (functionstmt -> FUNC ID funcparams functype CHR_IZQ block CHR_DER .)
    CASE            reduce using rule 62 (functionstmt -> FUNC ID funcparams functype CHR_IZQ block CHR_DER .)


state 260

    (72) paramsList -> paramsList COMA ID DOSPUNTOS . type
    (38) type -> . NUMBER
    (39) type -> . FLOAT
    (40) type -> . STRING
    (41) type -> . BOOLEAN
    (42) type -> . ID
    (43) type -> . type CORIZQ CORDER

    NUMBER          shift and go to state 162
    FLOAT           shift and go to state 163
    STRING          shift and go to state 164
    BOOLEAN         shift and go to state 165
    ID              shift and go to state 218

    type                           shift and go to state 276

state 261

    (54) switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement default_case . CHR_DER

    CHR_DER         shift and go to state 277


state 262

    (55) switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement CHR_DER .

    CONSOLE         reduce using rule 55 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement CHR_DER .)
    IF              reduce using rule 55 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement CHR_DER .)
    VAR             reduce using rule 55 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement CHR_DER .)
    WHILE           reduce using rule 55 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement CHR_DER .)
    ID              reduce using rule 55 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement CHR_DER .)
    FOR             reduce using rule 55 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement CHR_DER .)
    BREAK           reduce using rule 55 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement CHR_DER .)
    CONTINUE        reduce using rule 55 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement CHR_DER .)
    FUNC            reduce using rule 55 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement CHR_DER .)
    RETURN          reduce using rule 55 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement CHR_DER .)
    SWITCH          reduce using rule 55 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement CHR_DER .)
    CONST           reduce using rule 55 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement CHR_DER .)
    INTERFACE       reduce using rule 55 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement CHR_DER .)
    CORIZQ          reduce using rule 55 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement CHR_DER .)
    PARSEINT        reduce using rule 55 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement CHR_DER .)
    PARSEFLOAT      reduce using rule 55 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement CHR_DER .)
    TYPEOF          reduce using rule 55 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement CHR_DER .)
    NOT             reduce using rule 55 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement CHR_DER .)
    MENOS           reduce using rule 55 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement CHR_DER .)
    PARIZQ          reduce using rule 55 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement CHR_DER .)
    ENTERO          reduce using rule 55 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement CHR_DER .)
    BOOLEANO        reduce using rule 55 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement CHR_DER .)
    CADENA          reduce using rule 55 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement CHR_DER .)
    DECIMAL         reduce using rule 55 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement CHR_DER .)
    $end            reduce using rule 55 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement CHR_DER .)
    CHR_DER         reduce using rule 55 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement CHR_DER .)
    DEFAULT         reduce using rule 55 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement CHR_DER .)
    CASE            reduce using rule 55 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement CHR_DER .)


state 263

    (56) cases_statement -> cases_statement case_statement .

    CHR_DER         reduce using rule 56 (cases_statement -> cases_statement case_statement .)
    DEFAULT         reduce using rule 56 (cases_statement -> cases_statement case_statement .)
    CASE            reduce using rule 56 (cases_statement -> cases_statement case_statement .)


state 264

    (59) default_case -> DEFAULT . DOSPUNTOS block

    DOSPUNTOS       shift and go to state 278


state 265

    (58) case_statement -> CASE expresion . DOSPUNTOS block
    (48) expresion -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIVIDIDO expresion
    (82) expresion -> expresion . MOD expresion
    (85) expresion -> expresion . MENORQUE expresion
    (86) expresion -> expresion . MAYORQUE expresion
    (87) expresion -> expresion . MENORIGUAL expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . TERN expresion DOSPUNTOS expresion
    (90) expresion -> expresion . AND expresion
    (91) expresion -> expresion . OR expresion
    (93) expresion -> expresion . IGUALDAD expresion
    (94) expresion -> expresion . DIFERENTE expresion

    DOSPUNTOS       shift and go to state 279
    PUNTO           shift and go to state 61
    MAS             shift and go to state 102
    MENOS           shift and go to state 62
    POR             shift and go to state 63
    DIVIDIDO        shift and go to state 64
    MOD             shift and go to state 65
    MENORQUE        shift and go to state 66
    MAYORQUE        shift and go to state 67
    MENORIGUAL      shift and go to state 68
    MAYORIGUAL      shift and go to state 69
    TERN            shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    IGUALDAD        shift and go to state 73
    DIFERENTE       shift and go to state 74


state 266

    (65) interdeclaration -> CONST ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent . CHR_DER PUNTOCOMA
    (66) interfaceContent -> interfaceContent . COMA ID DOSPUNTOS expresion

    CHR_DER         shift and go to state 280
    COMA            shift and go to state 273


state 267

    (26) constante -> CONST ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .

    CONSOLE         reduce using rule 26 (constante -> CONST ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    IF              reduce using rule 26 (constante -> CONST ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    VAR             reduce using rule 26 (constante -> CONST ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    WHILE           reduce using rule 26 (constante -> CONST ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    ID              reduce using rule 26 (constante -> CONST ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    FOR             reduce using rule 26 (constante -> CONST ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    BREAK           reduce using rule 26 (constante -> CONST ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    CONTINUE        reduce using rule 26 (constante -> CONST ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    FUNC            reduce using rule 26 (constante -> CONST ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    RETURN          reduce using rule 26 (constante -> CONST ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    SWITCH          reduce using rule 26 (constante -> CONST ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    CONST           reduce using rule 26 (constante -> CONST ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    INTERFACE       reduce using rule 26 (constante -> CONST ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    CORIZQ          reduce using rule 26 (constante -> CONST ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    PARSEINT        reduce using rule 26 (constante -> CONST ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    PARSEFLOAT      reduce using rule 26 (constante -> CONST ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    TYPEOF          reduce using rule 26 (constante -> CONST ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    NOT             reduce using rule 26 (constante -> CONST ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    MENOS           reduce using rule 26 (constante -> CONST ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    PARIZQ          reduce using rule 26 (constante -> CONST ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    ENTERO          reduce using rule 26 (constante -> CONST ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    BOOLEANO        reduce using rule 26 (constante -> CONST ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    CADENA          reduce using rule 26 (constante -> CONST ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    DECIMAL         reduce using rule 26 (constante -> CONST ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    $end            reduce using rule 26 (constante -> CONST ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    CHR_DER         reduce using rule 26 (constante -> CONST ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    DEFAULT         reduce using rule 26 (constante -> CONST ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)
    CASE            reduce using rule 26 (constante -> CONST ID DOSPUNTOS type IGUAL expresion PUNTOCOMA .)


state 268

    (69) attributeList -> ID DOSPUNTOS type PUNTOCOMA .

    CHR_DER         reduce using rule 69 (attributeList -> ID DOSPUNTOS type PUNTOCOMA .)
    ID              reduce using rule 69 (attributeList -> ID DOSPUNTOS type PUNTOCOMA .)


state 269

    (68) attributeList -> attributeList ID DOSPUNTOS type . PUNTOCOMA
    (43) type -> type . CORIZQ CORDER

    PUNTOCOMA       shift and go to state 281
    CORIZQ          shift and go to state 225


state 270

    (51) ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE . CHR_IZQ block CHR_DER
    (52) ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE . ifinstruction
    (51) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER
    (52) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE ifinstruction
    (53) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER

    CHR_IZQ         shift and go to state 282
    IF              shift and go to state 26

    ifinstruction                  shift and go to state 283

state 271

    (67) interfaceContent -> ID DOSPUNTOS . expresion
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CORIZQ          shift and go to state 34
    ID              shift and go to state 58
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expresion                      shift and go to state 284
    listArray                      shift and go to state 49

state 272

    (64) interdeclaration -> VAR ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 285


state 273

    (66) interfaceContent -> interfaceContent COMA . ID DOSPUNTOS expresion

    ID              shift and go to state 286


state 274

    (29) arraydeclaration -> VAR ID DOSPUNTOS type CORIZQ CORDER IGUAL expresion . PUNTOCOMA
    (48) expresion -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIVIDIDO expresion
    (82) expresion -> expresion . MOD expresion
    (85) expresion -> expresion . MENORQUE expresion
    (86) expresion -> expresion . MAYORQUE expresion
    (87) expresion -> expresion . MENORIGUAL expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . TERN expresion DOSPUNTOS expresion
    (90) expresion -> expresion . AND expresion
    (91) expresion -> expresion . OR expresion
    (93) expresion -> expresion . IGUALDAD expresion
    (94) expresion -> expresion . DIFERENTE expresion

    PUNTOCOMA       shift and go to state 287
    PUNTO           shift and go to state 61
    MAS             shift and go to state 102
    MENOS           shift and go to state 62
    POR             shift and go to state 63
    DIVIDIDO        shift and go to state 64
    MOD             shift and go to state 65
    MENORQUE        shift and go to state 66
    MAYORQUE        shift and go to state 67
    MENORIGUAL      shift and go to state 68
    MAYORIGUAL      shift and go to state 69
    TERN            shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    IGUALDAD        shift and go to state 73
    DIFERENTE       shift and go to state 74


state 275

    (45) forinstruction -> FOR PARIZQ declaration expresion PUNTOCOMA operadores PARDER CHR_IZQ . block CHR_DER
    (2) block -> . block instruccion
    (3) block -> . instruccion
    (4) instruccion -> . print PUNTOCOMA
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . declaration
    (7) instruccion -> . assignment
    (8) instruccion -> . whileinstruction
    (9) instruccion -> . instancia PUNTOCOMA
    (10) instruccion -> . operadores PUNTOCOMA
    (11) instruccion -> . forinstruction
    (12) instruccion -> . breakstmt PUNTOCOMA
    (13) instruccion -> . continuestmt
    (14) instruccion -> . arraydeclaration
    (15) instruccion -> . functionstmt
    (16) instruccion -> . call
    (17) instruccion -> . returnstmt
    (18) instruccion -> . pusheo
    (19) instruccion -> . switch_statement
    (20) instruccion -> . constante
    (21) instruccion -> . interfacecreation
    (22) instruccion -> . interdeclaration
    (23) instruccion -> . assigmentarray
    (24) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER
    (51) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER
    (52) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE ifinstruction
    (53) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER
    (25) declaration -> . VAR ID DOSPUNTOS type IGUAL expresion PUNTOCOMA
    (27) assignment -> . VAR ID IGUAL expresion PUNTOCOMA
    (44) whileinstruction -> . WHILE PARIZQ expresion PARDER CHR_IZQ block CHR_DER
    (36) instancia -> . ID IGUAL expresion
    (37) operadores -> . expresion MAS MAS
    (45) forinstruction -> . FOR PARIZQ declaration expresion PUNTOCOMA operadores PARDER CHR_IZQ block CHR_DER
    (105) breakstmt -> . BREAK
    (104) continuestmt -> . CONTINUE PUNTOCOMA
    (29) arraydeclaration -> . VAR ID DOSPUNTOS type CORIZQ CORDER IGUAL expresion PUNTOCOMA
    (62) functionstmt -> . FUNC ID funcparams functype CHR_IZQ block CHR_DER
    (60) call -> . ID PARIZQ expressionList PARDER PUNTOCOMA
    (61) call -> . ID PARIZQ PARDER PUNTOCOMA
    (76) returnstmt -> . RETURN expresion PUNTOCOMA
    (77) returnstmt -> . RETURN PUNTOCOMA
    (34) pusheo -> . ID PUNTO PUSH PARIZQ expresion PARDER PUNTOCOMA
    (54) switch_statement -> . SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement default_case CHR_DER
    (55) switch_statement -> . SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement CHR_DER
    (26) constante -> . CONST ID DOSPUNTOS type IGUAL expresion PUNTOCOMA
    (28) constante -> . CONST ID IGUAL expresion PUNTOCOMA
    (63) interfacecreation -> . INTERFACE ID CHR_IZQ attributeList CHR_DER
    (64) interdeclaration -> . VAR ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA
    (65) interdeclaration -> . CONST ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA
    (108) assigmentarray -> . listArray2 IGUAL expresion PUNTOCOMA
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (109) listArray2 -> . listArray2 CORIZQ expresion CORDER
    (110) listArray2 -> . listArray2 PUNTO ID
    (111) listArray2 -> . ID
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CONSOLE         shift and go to state 24
    IF              shift and go to state 26
    VAR             shift and go to state 28
    WHILE           shift and go to state 30
    ID              shift and go to state 29
    FOR             shift and go to state 31
    BREAK           shift and go to state 32
    CONTINUE        shift and go to state 33
    FUNC            shift and go to state 35
    RETURN          shift and go to state 36
    SWITCH          shift and go to state 37
    CONST           shift and go to state 38
    INTERFACE       shift and go to state 39
    CORIZQ          shift and go to state 34
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    declaration                    shift and go to state 6
    expresion                      shift and go to state 27
    operadores                     shift and go to state 10
    block                          shift and go to state 288
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    assignment                     shift and go to state 7
    whileinstruction               shift and go to state 8
    instancia                      shift and go to state 9
    forinstruction                 shift and go to state 11
    breakstmt                      shift and go to state 12
    continuestmt                   shift and go to state 13
    arraydeclaration               shift and go to state 14
    functionstmt                   shift and go to state 15
    call                           shift and go to state 16
    returnstmt                     shift and go to state 17
    pusheo                         shift and go to state 18
    switch_statement               shift and go to state 19
    constante                      shift and go to state 20
    interfacecreation              shift and go to state 21
    interdeclaration               shift and go to state 22
    assigmentarray                 shift and go to state 23
    listArray2                     shift and go to state 40
    listArray                      shift and go to state 49

state 276

    (72) paramsList -> paramsList COMA ID DOSPUNTOS type .
    (43) type -> type . CORIZQ CORDER

    PARDER          reduce using rule 72 (paramsList -> paramsList COMA ID DOSPUNTOS type .)
    COMA            reduce using rule 72 (paramsList -> paramsList COMA ID DOSPUNTOS type .)
    CORIZQ          shift and go to state 225


state 277

    (54) switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement default_case CHR_DER .

    CONSOLE         reduce using rule 54 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement default_case CHR_DER .)
    IF              reduce using rule 54 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement default_case CHR_DER .)
    VAR             reduce using rule 54 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement default_case CHR_DER .)
    WHILE           reduce using rule 54 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement default_case CHR_DER .)
    ID              reduce using rule 54 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement default_case CHR_DER .)
    FOR             reduce using rule 54 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement default_case CHR_DER .)
    BREAK           reduce using rule 54 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement default_case CHR_DER .)
    CONTINUE        reduce using rule 54 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement default_case CHR_DER .)
    FUNC            reduce using rule 54 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement default_case CHR_DER .)
    RETURN          reduce using rule 54 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement default_case CHR_DER .)
    SWITCH          reduce using rule 54 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement default_case CHR_DER .)
    CONST           reduce using rule 54 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement default_case CHR_DER .)
    INTERFACE       reduce using rule 54 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement default_case CHR_DER .)
    CORIZQ          reduce using rule 54 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement default_case CHR_DER .)
    PARSEINT        reduce using rule 54 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement default_case CHR_DER .)
    PARSEFLOAT      reduce using rule 54 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement default_case CHR_DER .)
    TYPEOF          reduce using rule 54 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement default_case CHR_DER .)
    NOT             reduce using rule 54 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement default_case CHR_DER .)
    MENOS           reduce using rule 54 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement default_case CHR_DER .)
    PARIZQ          reduce using rule 54 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement default_case CHR_DER .)
    ENTERO          reduce using rule 54 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement default_case CHR_DER .)
    BOOLEANO        reduce using rule 54 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement default_case CHR_DER .)
    CADENA          reduce using rule 54 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement default_case CHR_DER .)
    DECIMAL         reduce using rule 54 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement default_case CHR_DER .)
    $end            reduce using rule 54 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement default_case CHR_DER .)
    CHR_DER         reduce using rule 54 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement default_case CHR_DER .)
    DEFAULT         reduce using rule 54 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement default_case CHR_DER .)
    CASE            reduce using rule 54 (switch_statement -> SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement default_case CHR_DER .)


state 278

    (59) default_case -> DEFAULT DOSPUNTOS . block
    (2) block -> . block instruccion
    (3) block -> . instruccion
    (4) instruccion -> . print PUNTOCOMA
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . declaration
    (7) instruccion -> . assignment
    (8) instruccion -> . whileinstruction
    (9) instruccion -> . instancia PUNTOCOMA
    (10) instruccion -> . operadores PUNTOCOMA
    (11) instruccion -> . forinstruction
    (12) instruccion -> . breakstmt PUNTOCOMA
    (13) instruccion -> . continuestmt
    (14) instruccion -> . arraydeclaration
    (15) instruccion -> . functionstmt
    (16) instruccion -> . call
    (17) instruccion -> . returnstmt
    (18) instruccion -> . pusheo
    (19) instruccion -> . switch_statement
    (20) instruccion -> . constante
    (21) instruccion -> . interfacecreation
    (22) instruccion -> . interdeclaration
    (23) instruccion -> . assigmentarray
    (24) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER
    (51) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER
    (52) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE ifinstruction
    (53) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER
    (25) declaration -> . VAR ID DOSPUNTOS type IGUAL expresion PUNTOCOMA
    (27) assignment -> . VAR ID IGUAL expresion PUNTOCOMA
    (44) whileinstruction -> . WHILE PARIZQ expresion PARDER CHR_IZQ block CHR_DER
    (36) instancia -> . ID IGUAL expresion
    (37) operadores -> . expresion MAS MAS
    (45) forinstruction -> . FOR PARIZQ declaration expresion PUNTOCOMA operadores PARDER CHR_IZQ block CHR_DER
    (105) breakstmt -> . BREAK
    (104) continuestmt -> . CONTINUE PUNTOCOMA
    (29) arraydeclaration -> . VAR ID DOSPUNTOS type CORIZQ CORDER IGUAL expresion PUNTOCOMA
    (62) functionstmt -> . FUNC ID funcparams functype CHR_IZQ block CHR_DER
    (60) call -> . ID PARIZQ expressionList PARDER PUNTOCOMA
    (61) call -> . ID PARIZQ PARDER PUNTOCOMA
    (76) returnstmt -> . RETURN expresion PUNTOCOMA
    (77) returnstmt -> . RETURN PUNTOCOMA
    (34) pusheo -> . ID PUNTO PUSH PARIZQ expresion PARDER PUNTOCOMA
    (54) switch_statement -> . SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement default_case CHR_DER
    (55) switch_statement -> . SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement CHR_DER
    (26) constante -> . CONST ID DOSPUNTOS type IGUAL expresion PUNTOCOMA
    (28) constante -> . CONST ID IGUAL expresion PUNTOCOMA
    (63) interfacecreation -> . INTERFACE ID CHR_IZQ attributeList CHR_DER
    (64) interdeclaration -> . VAR ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA
    (65) interdeclaration -> . CONST ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA
    (108) assigmentarray -> . listArray2 IGUAL expresion PUNTOCOMA
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (109) listArray2 -> . listArray2 CORIZQ expresion CORDER
    (110) listArray2 -> . listArray2 PUNTO ID
    (111) listArray2 -> . ID
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CONSOLE         shift and go to state 24
    IF              shift and go to state 26
    VAR             shift and go to state 28
    WHILE           shift and go to state 30
    ID              shift and go to state 29
    FOR             shift and go to state 31
    BREAK           shift and go to state 32
    CONTINUE        shift and go to state 33
    FUNC            shift and go to state 35
    RETURN          shift and go to state 36
    SWITCH          shift and go to state 37
    CONST           shift and go to state 38
    INTERFACE       shift and go to state 39
    CORIZQ          shift and go to state 34
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    block                          shift and go to state 289
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    declaration                    shift and go to state 6
    assignment                     shift and go to state 7
    whileinstruction               shift and go to state 8
    instancia                      shift and go to state 9
    operadores                     shift and go to state 10
    forinstruction                 shift and go to state 11
    breakstmt                      shift and go to state 12
    continuestmt                   shift and go to state 13
    arraydeclaration               shift and go to state 14
    functionstmt                   shift and go to state 15
    call                           shift and go to state 16
    returnstmt                     shift and go to state 17
    pusheo                         shift and go to state 18
    switch_statement               shift and go to state 19
    constante                      shift and go to state 20
    interfacecreation              shift and go to state 21
    interdeclaration               shift and go to state 22
    assigmentarray                 shift and go to state 23
    expresion                      shift and go to state 27
    listArray2                     shift and go to state 40
    listArray                      shift and go to state 49

state 279

    (58) case_statement -> CASE expresion DOSPUNTOS . block
    (2) block -> . block instruccion
    (3) block -> . instruccion
    (4) instruccion -> . print PUNTOCOMA
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . declaration
    (7) instruccion -> . assignment
    (8) instruccion -> . whileinstruction
    (9) instruccion -> . instancia PUNTOCOMA
    (10) instruccion -> . operadores PUNTOCOMA
    (11) instruccion -> . forinstruction
    (12) instruccion -> . breakstmt PUNTOCOMA
    (13) instruccion -> . continuestmt
    (14) instruccion -> . arraydeclaration
    (15) instruccion -> . functionstmt
    (16) instruccion -> . call
    (17) instruccion -> . returnstmt
    (18) instruccion -> . pusheo
    (19) instruccion -> . switch_statement
    (20) instruccion -> . constante
    (21) instruccion -> . interfacecreation
    (22) instruccion -> . interdeclaration
    (23) instruccion -> . assigmentarray
    (24) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER
    (51) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER
    (52) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE ifinstruction
    (53) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER
    (25) declaration -> . VAR ID DOSPUNTOS type IGUAL expresion PUNTOCOMA
    (27) assignment -> . VAR ID IGUAL expresion PUNTOCOMA
    (44) whileinstruction -> . WHILE PARIZQ expresion PARDER CHR_IZQ block CHR_DER
    (36) instancia -> . ID IGUAL expresion
    (37) operadores -> . expresion MAS MAS
    (45) forinstruction -> . FOR PARIZQ declaration expresion PUNTOCOMA operadores PARDER CHR_IZQ block CHR_DER
    (105) breakstmt -> . BREAK
    (104) continuestmt -> . CONTINUE PUNTOCOMA
    (29) arraydeclaration -> . VAR ID DOSPUNTOS type CORIZQ CORDER IGUAL expresion PUNTOCOMA
    (62) functionstmt -> . FUNC ID funcparams functype CHR_IZQ block CHR_DER
    (60) call -> . ID PARIZQ expressionList PARDER PUNTOCOMA
    (61) call -> . ID PARIZQ PARDER PUNTOCOMA
    (76) returnstmt -> . RETURN expresion PUNTOCOMA
    (77) returnstmt -> . RETURN PUNTOCOMA
    (34) pusheo -> . ID PUNTO PUSH PARIZQ expresion PARDER PUNTOCOMA
    (54) switch_statement -> . SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement default_case CHR_DER
    (55) switch_statement -> . SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement CHR_DER
    (26) constante -> . CONST ID DOSPUNTOS type IGUAL expresion PUNTOCOMA
    (28) constante -> . CONST ID IGUAL expresion PUNTOCOMA
    (63) interfacecreation -> . INTERFACE ID CHR_IZQ attributeList CHR_DER
    (64) interdeclaration -> . VAR ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA
    (65) interdeclaration -> . CONST ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA
    (108) assigmentarray -> . listArray2 IGUAL expresion PUNTOCOMA
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (109) listArray2 -> . listArray2 CORIZQ expresion CORDER
    (110) listArray2 -> . listArray2 PUNTO ID
    (111) listArray2 -> . ID
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CONSOLE         shift and go to state 24
    IF              shift and go to state 26
    VAR             shift and go to state 28
    WHILE           shift and go to state 30
    ID              shift and go to state 29
    FOR             shift and go to state 31
    BREAK           shift and go to state 32
    CONTINUE        shift and go to state 33
    FUNC            shift and go to state 35
    RETURN          shift and go to state 36
    SWITCH          shift and go to state 37
    CONST           shift and go to state 38
    INTERFACE       shift and go to state 39
    CORIZQ          shift and go to state 34
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expresion                      shift and go to state 27
    block                          shift and go to state 290
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    declaration                    shift and go to state 6
    assignment                     shift and go to state 7
    whileinstruction               shift and go to state 8
    instancia                      shift and go to state 9
    operadores                     shift and go to state 10
    forinstruction                 shift and go to state 11
    breakstmt                      shift and go to state 12
    continuestmt                   shift and go to state 13
    arraydeclaration               shift and go to state 14
    functionstmt                   shift and go to state 15
    call                           shift and go to state 16
    returnstmt                     shift and go to state 17
    pusheo                         shift and go to state 18
    switch_statement               shift and go to state 19
    constante                      shift and go to state 20
    interfacecreation              shift and go to state 21
    interdeclaration               shift and go to state 22
    assigmentarray                 shift and go to state 23
    listArray2                     shift and go to state 40
    listArray                      shift and go to state 49

state 280

    (65) interdeclaration -> CONST ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 291


state 281

    (68) attributeList -> attributeList ID DOSPUNTOS type PUNTOCOMA .

    CHR_DER         reduce using rule 68 (attributeList -> attributeList ID DOSPUNTOS type PUNTOCOMA .)
    ID              reduce using rule 68 (attributeList -> attributeList ID DOSPUNTOS type PUNTOCOMA .)


state 282

    (51) ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ . block CHR_DER
    (2) block -> . block instruccion
    (3) block -> . instruccion
    (4) instruccion -> . print PUNTOCOMA
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . declaration
    (7) instruccion -> . assignment
    (8) instruccion -> . whileinstruction
    (9) instruccion -> . instancia PUNTOCOMA
    (10) instruccion -> . operadores PUNTOCOMA
    (11) instruccion -> . forinstruction
    (12) instruccion -> . breakstmt PUNTOCOMA
    (13) instruccion -> . continuestmt
    (14) instruccion -> . arraydeclaration
    (15) instruccion -> . functionstmt
    (16) instruccion -> . call
    (17) instruccion -> . returnstmt
    (18) instruccion -> . pusheo
    (19) instruccion -> . switch_statement
    (20) instruccion -> . constante
    (21) instruccion -> . interfacecreation
    (22) instruccion -> . interdeclaration
    (23) instruccion -> . assigmentarray
    (24) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER
    (51) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER
    (52) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE ifinstruction
    (53) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER
    (25) declaration -> . VAR ID DOSPUNTOS type IGUAL expresion PUNTOCOMA
    (27) assignment -> . VAR ID IGUAL expresion PUNTOCOMA
    (44) whileinstruction -> . WHILE PARIZQ expresion PARDER CHR_IZQ block CHR_DER
    (36) instancia -> . ID IGUAL expresion
    (37) operadores -> . expresion MAS MAS
    (45) forinstruction -> . FOR PARIZQ declaration expresion PUNTOCOMA operadores PARDER CHR_IZQ block CHR_DER
    (105) breakstmt -> . BREAK
    (104) continuestmt -> . CONTINUE PUNTOCOMA
    (29) arraydeclaration -> . VAR ID DOSPUNTOS type CORIZQ CORDER IGUAL expresion PUNTOCOMA
    (62) functionstmt -> . FUNC ID funcparams functype CHR_IZQ block CHR_DER
    (60) call -> . ID PARIZQ expressionList PARDER PUNTOCOMA
    (61) call -> . ID PARIZQ PARDER PUNTOCOMA
    (76) returnstmt -> . RETURN expresion PUNTOCOMA
    (77) returnstmt -> . RETURN PUNTOCOMA
    (34) pusheo -> . ID PUNTO PUSH PARIZQ expresion PARDER PUNTOCOMA
    (54) switch_statement -> . SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement default_case CHR_DER
    (55) switch_statement -> . SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement CHR_DER
    (26) constante -> . CONST ID DOSPUNTOS type IGUAL expresion PUNTOCOMA
    (28) constante -> . CONST ID IGUAL expresion PUNTOCOMA
    (63) interfacecreation -> . INTERFACE ID CHR_IZQ attributeList CHR_DER
    (64) interdeclaration -> . VAR ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA
    (65) interdeclaration -> . CONST ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA
    (108) assigmentarray -> . listArray2 IGUAL expresion PUNTOCOMA
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (109) listArray2 -> . listArray2 CORIZQ expresion CORDER
    (110) listArray2 -> . listArray2 PUNTO ID
    (111) listArray2 -> . ID
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CONSOLE         shift and go to state 24
    IF              shift and go to state 26
    VAR             shift and go to state 28
    WHILE           shift and go to state 30
    ID              shift and go to state 29
    FOR             shift and go to state 31
    BREAK           shift and go to state 32
    CONTINUE        shift and go to state 33
    FUNC            shift and go to state 35
    RETURN          shift and go to state 36
    SWITCH          shift and go to state 37
    CONST           shift and go to state 38
    INTERFACE       shift and go to state 39
    CORIZQ          shift and go to state 34
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expresion                      shift and go to state 27
    block                          shift and go to state 292
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    declaration                    shift and go to state 6
    assignment                     shift and go to state 7
    whileinstruction               shift and go to state 8
    instancia                      shift and go to state 9
    operadores                     shift and go to state 10
    forinstruction                 shift and go to state 11
    breakstmt                      shift and go to state 12
    continuestmt                   shift and go to state 13
    arraydeclaration               shift and go to state 14
    functionstmt                   shift and go to state 15
    call                           shift and go to state 16
    returnstmt                     shift and go to state 17
    pusheo                         shift and go to state 18
    switch_statement               shift and go to state 19
    constante                      shift and go to state 20
    interfacecreation              shift and go to state 21
    interdeclaration               shift and go to state 22
    assigmentarray                 shift and go to state 23
    listArray2                     shift and go to state 40
    listArray                      shift and go to state 49

state 283

    (52) ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE ifinstruction .

    CONSOLE         reduce using rule 52 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE ifinstruction .)
    IF              reduce using rule 52 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE ifinstruction .)
    VAR             reduce using rule 52 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE ifinstruction .)
    WHILE           reduce using rule 52 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE ifinstruction .)
    ID              reduce using rule 52 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE ifinstruction .)
    FOR             reduce using rule 52 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE ifinstruction .)
    BREAK           reduce using rule 52 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE ifinstruction .)
    CONTINUE        reduce using rule 52 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE ifinstruction .)
    FUNC            reduce using rule 52 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE ifinstruction .)
    RETURN          reduce using rule 52 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE ifinstruction .)
    SWITCH          reduce using rule 52 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE ifinstruction .)
    CONST           reduce using rule 52 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE ifinstruction .)
    INTERFACE       reduce using rule 52 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE ifinstruction .)
    CORIZQ          reduce using rule 52 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE ifinstruction .)
    PARSEINT        reduce using rule 52 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE ifinstruction .)
    PARSEFLOAT      reduce using rule 52 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE ifinstruction .)
    TYPEOF          reduce using rule 52 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE ifinstruction .)
    NOT             reduce using rule 52 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE ifinstruction .)
    MENOS           reduce using rule 52 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE ifinstruction .)
    PARIZQ          reduce using rule 52 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE ifinstruction .)
    ENTERO          reduce using rule 52 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE ifinstruction .)
    BOOLEANO        reduce using rule 52 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE ifinstruction .)
    CADENA          reduce using rule 52 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE ifinstruction .)
    DECIMAL         reduce using rule 52 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE ifinstruction .)
    $end            reduce using rule 52 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE ifinstruction .)
    CHR_DER         reduce using rule 52 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE ifinstruction .)
    DEFAULT         reduce using rule 52 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE ifinstruction .)
    CASE            reduce using rule 52 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE ifinstruction .)


state 284

    (67) interfaceContent -> ID DOSPUNTOS expresion .
    (48) expresion -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIVIDIDO expresion
    (82) expresion -> expresion . MOD expresion
    (85) expresion -> expresion . MENORQUE expresion
    (86) expresion -> expresion . MAYORQUE expresion
    (87) expresion -> expresion . MENORIGUAL expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . TERN expresion DOSPUNTOS expresion
    (90) expresion -> expresion . AND expresion
    (91) expresion -> expresion . OR expresion
    (93) expresion -> expresion . IGUALDAD expresion
    (94) expresion -> expresion . DIFERENTE expresion

    CHR_DER         reduce using rule 67 (interfaceContent -> ID DOSPUNTOS expresion .)
    COMA            reduce using rule 67 (interfaceContent -> ID DOSPUNTOS expresion .)
    PUNTO           shift and go to state 61
    MAS             shift and go to state 102
    MENOS           shift and go to state 62
    POR             shift and go to state 63
    DIVIDIDO        shift and go to state 64
    MOD             shift and go to state 65
    MENORQUE        shift and go to state 66
    MAYORQUE        shift and go to state 67
    MENORIGUAL      shift and go to state 68
    MAYORIGUAL      shift and go to state 69
    TERN            shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    IGUALDAD        shift and go to state 73
    DIFERENTE       shift and go to state 74


state 285

    (64) interdeclaration -> VAR ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .

    CONSOLE         reduce using rule 64 (interdeclaration -> VAR ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    IF              reduce using rule 64 (interdeclaration -> VAR ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    VAR             reduce using rule 64 (interdeclaration -> VAR ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    WHILE           reduce using rule 64 (interdeclaration -> VAR ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    ID              reduce using rule 64 (interdeclaration -> VAR ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    FOR             reduce using rule 64 (interdeclaration -> VAR ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    BREAK           reduce using rule 64 (interdeclaration -> VAR ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    CONTINUE        reduce using rule 64 (interdeclaration -> VAR ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    FUNC            reduce using rule 64 (interdeclaration -> VAR ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    RETURN          reduce using rule 64 (interdeclaration -> VAR ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    SWITCH          reduce using rule 64 (interdeclaration -> VAR ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    CONST           reduce using rule 64 (interdeclaration -> VAR ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    INTERFACE       reduce using rule 64 (interdeclaration -> VAR ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    CORIZQ          reduce using rule 64 (interdeclaration -> VAR ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    PARSEINT        reduce using rule 64 (interdeclaration -> VAR ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    PARSEFLOAT      reduce using rule 64 (interdeclaration -> VAR ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    TYPEOF          reduce using rule 64 (interdeclaration -> VAR ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    NOT             reduce using rule 64 (interdeclaration -> VAR ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    MENOS           reduce using rule 64 (interdeclaration -> VAR ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    PARIZQ          reduce using rule 64 (interdeclaration -> VAR ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    ENTERO          reduce using rule 64 (interdeclaration -> VAR ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    BOOLEANO        reduce using rule 64 (interdeclaration -> VAR ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    CADENA          reduce using rule 64 (interdeclaration -> VAR ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    DECIMAL         reduce using rule 64 (interdeclaration -> VAR ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    $end            reduce using rule 64 (interdeclaration -> VAR ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    CHR_DER         reduce using rule 64 (interdeclaration -> VAR ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    DEFAULT         reduce using rule 64 (interdeclaration -> VAR ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    CASE            reduce using rule 64 (interdeclaration -> VAR ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)


state 286

    (66) interfaceContent -> interfaceContent COMA ID . DOSPUNTOS expresion

    DOSPUNTOS       shift and go to state 293


state 287

    (29) arraydeclaration -> VAR ID DOSPUNTOS type CORIZQ CORDER IGUAL expresion PUNTOCOMA .

    CONSOLE         reduce using rule 29 (arraydeclaration -> VAR ID DOSPUNTOS type CORIZQ CORDER IGUAL expresion PUNTOCOMA .)
    IF              reduce using rule 29 (arraydeclaration -> VAR ID DOSPUNTOS type CORIZQ CORDER IGUAL expresion PUNTOCOMA .)
    VAR             reduce using rule 29 (arraydeclaration -> VAR ID DOSPUNTOS type CORIZQ CORDER IGUAL expresion PUNTOCOMA .)
    WHILE           reduce using rule 29 (arraydeclaration -> VAR ID DOSPUNTOS type CORIZQ CORDER IGUAL expresion PUNTOCOMA .)
    ID              reduce using rule 29 (arraydeclaration -> VAR ID DOSPUNTOS type CORIZQ CORDER IGUAL expresion PUNTOCOMA .)
    FOR             reduce using rule 29 (arraydeclaration -> VAR ID DOSPUNTOS type CORIZQ CORDER IGUAL expresion PUNTOCOMA .)
    BREAK           reduce using rule 29 (arraydeclaration -> VAR ID DOSPUNTOS type CORIZQ CORDER IGUAL expresion PUNTOCOMA .)
    CONTINUE        reduce using rule 29 (arraydeclaration -> VAR ID DOSPUNTOS type CORIZQ CORDER IGUAL expresion PUNTOCOMA .)
    FUNC            reduce using rule 29 (arraydeclaration -> VAR ID DOSPUNTOS type CORIZQ CORDER IGUAL expresion PUNTOCOMA .)
    RETURN          reduce using rule 29 (arraydeclaration -> VAR ID DOSPUNTOS type CORIZQ CORDER IGUAL expresion PUNTOCOMA .)
    SWITCH          reduce using rule 29 (arraydeclaration -> VAR ID DOSPUNTOS type CORIZQ CORDER IGUAL expresion PUNTOCOMA .)
    CONST           reduce using rule 29 (arraydeclaration -> VAR ID DOSPUNTOS type CORIZQ CORDER IGUAL expresion PUNTOCOMA .)
    INTERFACE       reduce using rule 29 (arraydeclaration -> VAR ID DOSPUNTOS type CORIZQ CORDER IGUAL expresion PUNTOCOMA .)
    CORIZQ          reduce using rule 29 (arraydeclaration -> VAR ID DOSPUNTOS type CORIZQ CORDER IGUAL expresion PUNTOCOMA .)
    PARSEINT        reduce using rule 29 (arraydeclaration -> VAR ID DOSPUNTOS type CORIZQ CORDER IGUAL expresion PUNTOCOMA .)
    PARSEFLOAT      reduce using rule 29 (arraydeclaration -> VAR ID DOSPUNTOS type CORIZQ CORDER IGUAL expresion PUNTOCOMA .)
    TYPEOF          reduce using rule 29 (arraydeclaration -> VAR ID DOSPUNTOS type CORIZQ CORDER IGUAL expresion PUNTOCOMA .)
    NOT             reduce using rule 29 (arraydeclaration -> VAR ID DOSPUNTOS type CORIZQ CORDER IGUAL expresion PUNTOCOMA .)
    MENOS           reduce using rule 29 (arraydeclaration -> VAR ID DOSPUNTOS type CORIZQ CORDER IGUAL expresion PUNTOCOMA .)
    PARIZQ          reduce using rule 29 (arraydeclaration -> VAR ID DOSPUNTOS type CORIZQ CORDER IGUAL expresion PUNTOCOMA .)
    ENTERO          reduce using rule 29 (arraydeclaration -> VAR ID DOSPUNTOS type CORIZQ CORDER IGUAL expresion PUNTOCOMA .)
    BOOLEANO        reduce using rule 29 (arraydeclaration -> VAR ID DOSPUNTOS type CORIZQ CORDER IGUAL expresion PUNTOCOMA .)
    CADENA          reduce using rule 29 (arraydeclaration -> VAR ID DOSPUNTOS type CORIZQ CORDER IGUAL expresion PUNTOCOMA .)
    DECIMAL         reduce using rule 29 (arraydeclaration -> VAR ID DOSPUNTOS type CORIZQ CORDER IGUAL expresion PUNTOCOMA .)
    $end            reduce using rule 29 (arraydeclaration -> VAR ID DOSPUNTOS type CORIZQ CORDER IGUAL expresion PUNTOCOMA .)
    CHR_DER         reduce using rule 29 (arraydeclaration -> VAR ID DOSPUNTOS type CORIZQ CORDER IGUAL expresion PUNTOCOMA .)
    DEFAULT         reduce using rule 29 (arraydeclaration -> VAR ID DOSPUNTOS type CORIZQ CORDER IGUAL expresion PUNTOCOMA .)
    CASE            reduce using rule 29 (arraydeclaration -> VAR ID DOSPUNTOS type CORIZQ CORDER IGUAL expresion PUNTOCOMA .)


state 288

    (45) forinstruction -> FOR PARIZQ declaration expresion PUNTOCOMA operadores PARDER CHR_IZQ block . CHR_DER
    (2) block -> block . instruccion
    (4) instruccion -> . print PUNTOCOMA
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . declaration
    (7) instruccion -> . assignment
    (8) instruccion -> . whileinstruction
    (9) instruccion -> . instancia PUNTOCOMA
    (10) instruccion -> . operadores PUNTOCOMA
    (11) instruccion -> . forinstruction
    (12) instruccion -> . breakstmt PUNTOCOMA
    (13) instruccion -> . continuestmt
    (14) instruccion -> . arraydeclaration
    (15) instruccion -> . functionstmt
    (16) instruccion -> . call
    (17) instruccion -> . returnstmt
    (18) instruccion -> . pusheo
    (19) instruccion -> . switch_statement
    (20) instruccion -> . constante
    (21) instruccion -> . interfacecreation
    (22) instruccion -> . interdeclaration
    (23) instruccion -> . assigmentarray
    (24) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER
    (51) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER
    (52) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE ifinstruction
    (53) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER
    (25) declaration -> . VAR ID DOSPUNTOS type IGUAL expresion PUNTOCOMA
    (27) assignment -> . VAR ID IGUAL expresion PUNTOCOMA
    (44) whileinstruction -> . WHILE PARIZQ expresion PARDER CHR_IZQ block CHR_DER
    (36) instancia -> . ID IGUAL expresion
    (37) operadores -> . expresion MAS MAS
    (45) forinstruction -> . FOR PARIZQ declaration expresion PUNTOCOMA operadores PARDER CHR_IZQ block CHR_DER
    (105) breakstmt -> . BREAK
    (104) continuestmt -> . CONTINUE PUNTOCOMA
    (29) arraydeclaration -> . VAR ID DOSPUNTOS type CORIZQ CORDER IGUAL expresion PUNTOCOMA
    (62) functionstmt -> . FUNC ID funcparams functype CHR_IZQ block CHR_DER
    (60) call -> . ID PARIZQ expressionList PARDER PUNTOCOMA
    (61) call -> . ID PARIZQ PARDER PUNTOCOMA
    (76) returnstmt -> . RETURN expresion PUNTOCOMA
    (77) returnstmt -> . RETURN PUNTOCOMA
    (34) pusheo -> . ID PUNTO PUSH PARIZQ expresion PARDER PUNTOCOMA
    (54) switch_statement -> . SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement default_case CHR_DER
    (55) switch_statement -> . SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement CHR_DER
    (26) constante -> . CONST ID DOSPUNTOS type IGUAL expresion PUNTOCOMA
    (28) constante -> . CONST ID IGUAL expresion PUNTOCOMA
    (63) interfacecreation -> . INTERFACE ID CHR_IZQ attributeList CHR_DER
    (64) interdeclaration -> . VAR ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA
    (65) interdeclaration -> . CONST ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA
    (108) assigmentarray -> . listArray2 IGUAL expresion PUNTOCOMA
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (109) listArray2 -> . listArray2 CORIZQ expresion CORDER
    (110) listArray2 -> . listArray2 PUNTO ID
    (111) listArray2 -> . ID
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CHR_DER         shift and go to state 294
    CONSOLE         shift and go to state 24
    IF              shift and go to state 26
    VAR             shift and go to state 28
    WHILE           shift and go to state 30
    ID              shift and go to state 29
    FOR             shift and go to state 31
    BREAK           shift and go to state 32
    CONTINUE        shift and go to state 33
    FUNC            shift and go to state 35
    RETURN          shift and go to state 36
    SWITCH          shift and go to state 37
    CONST           shift and go to state 38
    INTERFACE       shift and go to state 39
    CORIZQ          shift and go to state 34
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    declaration                    shift and go to state 6
    expresion                      shift and go to state 27
    operadores                     shift and go to state 10
    instruccion                    shift and go to state 51
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    assignment                     shift and go to state 7
    whileinstruction               shift and go to state 8
    instancia                      shift and go to state 9
    forinstruction                 shift and go to state 11
    breakstmt                      shift and go to state 12
    continuestmt                   shift and go to state 13
    arraydeclaration               shift and go to state 14
    functionstmt                   shift and go to state 15
    call                           shift and go to state 16
    returnstmt                     shift and go to state 17
    pusheo                         shift and go to state 18
    switch_statement               shift and go to state 19
    constante                      shift and go to state 20
    interfacecreation              shift and go to state 21
    interdeclaration               shift and go to state 22
    assigmentarray                 shift and go to state 23
    listArray2                     shift and go to state 40
    listArray                      shift and go to state 49

state 289

    (59) default_case -> DEFAULT DOSPUNTOS block .
    (2) block -> block . instruccion
    (4) instruccion -> . print PUNTOCOMA
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . declaration
    (7) instruccion -> . assignment
    (8) instruccion -> . whileinstruction
    (9) instruccion -> . instancia PUNTOCOMA
    (10) instruccion -> . operadores PUNTOCOMA
    (11) instruccion -> . forinstruction
    (12) instruccion -> . breakstmt PUNTOCOMA
    (13) instruccion -> . continuestmt
    (14) instruccion -> . arraydeclaration
    (15) instruccion -> . functionstmt
    (16) instruccion -> . call
    (17) instruccion -> . returnstmt
    (18) instruccion -> . pusheo
    (19) instruccion -> . switch_statement
    (20) instruccion -> . constante
    (21) instruccion -> . interfacecreation
    (22) instruccion -> . interdeclaration
    (23) instruccion -> . assigmentarray
    (24) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER
    (51) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER
    (52) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE ifinstruction
    (53) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER
    (25) declaration -> . VAR ID DOSPUNTOS type IGUAL expresion PUNTOCOMA
    (27) assignment -> . VAR ID IGUAL expresion PUNTOCOMA
    (44) whileinstruction -> . WHILE PARIZQ expresion PARDER CHR_IZQ block CHR_DER
    (36) instancia -> . ID IGUAL expresion
    (37) operadores -> . expresion MAS MAS
    (45) forinstruction -> . FOR PARIZQ declaration expresion PUNTOCOMA operadores PARDER CHR_IZQ block CHR_DER
    (105) breakstmt -> . BREAK
    (104) continuestmt -> . CONTINUE PUNTOCOMA
    (29) arraydeclaration -> . VAR ID DOSPUNTOS type CORIZQ CORDER IGUAL expresion PUNTOCOMA
    (62) functionstmt -> . FUNC ID funcparams functype CHR_IZQ block CHR_DER
    (60) call -> . ID PARIZQ expressionList PARDER PUNTOCOMA
    (61) call -> . ID PARIZQ PARDER PUNTOCOMA
    (76) returnstmt -> . RETURN expresion PUNTOCOMA
    (77) returnstmt -> . RETURN PUNTOCOMA
    (34) pusheo -> . ID PUNTO PUSH PARIZQ expresion PARDER PUNTOCOMA
    (54) switch_statement -> . SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement default_case CHR_DER
    (55) switch_statement -> . SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement CHR_DER
    (26) constante -> . CONST ID DOSPUNTOS type IGUAL expresion PUNTOCOMA
    (28) constante -> . CONST ID IGUAL expresion PUNTOCOMA
    (63) interfacecreation -> . INTERFACE ID CHR_IZQ attributeList CHR_DER
    (64) interdeclaration -> . VAR ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA
    (65) interdeclaration -> . CONST ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA
    (108) assigmentarray -> . listArray2 IGUAL expresion PUNTOCOMA
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (109) listArray2 -> . listArray2 CORIZQ expresion CORDER
    (110) listArray2 -> . listArray2 PUNTO ID
    (111) listArray2 -> . ID
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CHR_DER         reduce using rule 59 (default_case -> DEFAULT DOSPUNTOS block .)
    CONSOLE         shift and go to state 24
    IF              shift and go to state 26
    VAR             shift and go to state 28
    WHILE           shift and go to state 30
    ID              shift and go to state 29
    FOR             shift and go to state 31
    BREAK           shift and go to state 32
    CONTINUE        shift and go to state 33
    FUNC            shift and go to state 35
    RETURN          shift and go to state 36
    SWITCH          shift and go to state 37
    CONST           shift and go to state 38
    INTERFACE       shift and go to state 39
    CORIZQ          shift and go to state 34
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    instruccion                    shift and go to state 51
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    declaration                    shift and go to state 6
    assignment                     shift and go to state 7
    whileinstruction               shift and go to state 8
    instancia                      shift and go to state 9
    operadores                     shift and go to state 10
    forinstruction                 shift and go to state 11
    breakstmt                      shift and go to state 12
    continuestmt                   shift and go to state 13
    arraydeclaration               shift and go to state 14
    functionstmt                   shift and go to state 15
    call                           shift and go to state 16
    returnstmt                     shift and go to state 17
    pusheo                         shift and go to state 18
    switch_statement               shift and go to state 19
    constante                      shift and go to state 20
    interfacecreation              shift and go to state 21
    interdeclaration               shift and go to state 22
    assigmentarray                 shift and go to state 23
    expresion                      shift and go to state 27
    listArray2                     shift and go to state 40
    listArray                      shift and go to state 49

state 290

    (58) case_statement -> CASE expresion DOSPUNTOS block .
    (2) block -> block . instruccion
    (4) instruccion -> . print PUNTOCOMA
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . declaration
    (7) instruccion -> . assignment
    (8) instruccion -> . whileinstruction
    (9) instruccion -> . instancia PUNTOCOMA
    (10) instruccion -> . operadores PUNTOCOMA
    (11) instruccion -> . forinstruction
    (12) instruccion -> . breakstmt PUNTOCOMA
    (13) instruccion -> . continuestmt
    (14) instruccion -> . arraydeclaration
    (15) instruccion -> . functionstmt
    (16) instruccion -> . call
    (17) instruccion -> . returnstmt
    (18) instruccion -> . pusheo
    (19) instruccion -> . switch_statement
    (20) instruccion -> . constante
    (21) instruccion -> . interfacecreation
    (22) instruccion -> . interdeclaration
    (23) instruccion -> . assigmentarray
    (24) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER
    (51) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER
    (52) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE ifinstruction
    (53) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER
    (25) declaration -> . VAR ID DOSPUNTOS type IGUAL expresion PUNTOCOMA
    (27) assignment -> . VAR ID IGUAL expresion PUNTOCOMA
    (44) whileinstruction -> . WHILE PARIZQ expresion PARDER CHR_IZQ block CHR_DER
    (36) instancia -> . ID IGUAL expresion
    (37) operadores -> . expresion MAS MAS
    (45) forinstruction -> . FOR PARIZQ declaration expresion PUNTOCOMA operadores PARDER CHR_IZQ block CHR_DER
    (105) breakstmt -> . BREAK
    (104) continuestmt -> . CONTINUE PUNTOCOMA
    (29) arraydeclaration -> . VAR ID DOSPUNTOS type CORIZQ CORDER IGUAL expresion PUNTOCOMA
    (62) functionstmt -> . FUNC ID funcparams functype CHR_IZQ block CHR_DER
    (60) call -> . ID PARIZQ expressionList PARDER PUNTOCOMA
    (61) call -> . ID PARIZQ PARDER PUNTOCOMA
    (76) returnstmt -> . RETURN expresion PUNTOCOMA
    (77) returnstmt -> . RETURN PUNTOCOMA
    (34) pusheo -> . ID PUNTO PUSH PARIZQ expresion PARDER PUNTOCOMA
    (54) switch_statement -> . SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement default_case CHR_DER
    (55) switch_statement -> . SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement CHR_DER
    (26) constante -> . CONST ID DOSPUNTOS type IGUAL expresion PUNTOCOMA
    (28) constante -> . CONST ID IGUAL expresion PUNTOCOMA
    (63) interfacecreation -> . INTERFACE ID CHR_IZQ attributeList CHR_DER
    (64) interdeclaration -> . VAR ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA
    (65) interdeclaration -> . CONST ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA
    (108) assigmentarray -> . listArray2 IGUAL expresion PUNTOCOMA
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (109) listArray2 -> . listArray2 CORIZQ expresion CORDER
    (110) listArray2 -> . listArray2 PUNTO ID
    (111) listArray2 -> . ID
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CHR_DER         reduce using rule 58 (case_statement -> CASE expresion DOSPUNTOS block .)
    DEFAULT         reduce using rule 58 (case_statement -> CASE expresion DOSPUNTOS block .)
    CASE            reduce using rule 58 (case_statement -> CASE expresion DOSPUNTOS block .)
    CONSOLE         shift and go to state 24
    IF              shift and go to state 26
    VAR             shift and go to state 28
    WHILE           shift and go to state 30
    ID              shift and go to state 29
    FOR             shift and go to state 31
    BREAK           shift and go to state 32
    CONTINUE        shift and go to state 33
    FUNC            shift and go to state 35
    RETURN          shift and go to state 36
    SWITCH          shift and go to state 37
    CONST           shift and go to state 38
    INTERFACE       shift and go to state 39
    CORIZQ          shift and go to state 34
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expresion                      shift and go to state 27
    instruccion                    shift and go to state 51
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    declaration                    shift and go to state 6
    assignment                     shift and go to state 7
    whileinstruction               shift and go to state 8
    instancia                      shift and go to state 9
    operadores                     shift and go to state 10
    forinstruction                 shift and go to state 11
    breakstmt                      shift and go to state 12
    continuestmt                   shift and go to state 13
    arraydeclaration               shift and go to state 14
    functionstmt                   shift and go to state 15
    call                           shift and go to state 16
    returnstmt                     shift and go to state 17
    pusheo                         shift and go to state 18
    switch_statement               shift and go to state 19
    constante                      shift and go to state 20
    interfacecreation              shift and go to state 21
    interdeclaration               shift and go to state 22
    assigmentarray                 shift and go to state 23
    listArray2                     shift and go to state 40
    listArray                      shift and go to state 49

state 291

    (65) interdeclaration -> CONST ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .

    CONSOLE         reduce using rule 65 (interdeclaration -> CONST ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    IF              reduce using rule 65 (interdeclaration -> CONST ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    VAR             reduce using rule 65 (interdeclaration -> CONST ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    WHILE           reduce using rule 65 (interdeclaration -> CONST ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    ID              reduce using rule 65 (interdeclaration -> CONST ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    FOR             reduce using rule 65 (interdeclaration -> CONST ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    BREAK           reduce using rule 65 (interdeclaration -> CONST ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    CONTINUE        reduce using rule 65 (interdeclaration -> CONST ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    FUNC            reduce using rule 65 (interdeclaration -> CONST ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    RETURN          reduce using rule 65 (interdeclaration -> CONST ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    SWITCH          reduce using rule 65 (interdeclaration -> CONST ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    CONST           reduce using rule 65 (interdeclaration -> CONST ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    INTERFACE       reduce using rule 65 (interdeclaration -> CONST ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    CORIZQ          reduce using rule 65 (interdeclaration -> CONST ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    PARSEINT        reduce using rule 65 (interdeclaration -> CONST ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    PARSEFLOAT      reduce using rule 65 (interdeclaration -> CONST ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    TYPEOF          reduce using rule 65 (interdeclaration -> CONST ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    NOT             reduce using rule 65 (interdeclaration -> CONST ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    MENOS           reduce using rule 65 (interdeclaration -> CONST ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    PARIZQ          reduce using rule 65 (interdeclaration -> CONST ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    ENTERO          reduce using rule 65 (interdeclaration -> CONST ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    BOOLEANO        reduce using rule 65 (interdeclaration -> CONST ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    CADENA          reduce using rule 65 (interdeclaration -> CONST ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    DECIMAL         reduce using rule 65 (interdeclaration -> CONST ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    $end            reduce using rule 65 (interdeclaration -> CONST ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    CHR_DER         reduce using rule 65 (interdeclaration -> CONST ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    DEFAULT         reduce using rule 65 (interdeclaration -> CONST ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)
    CASE            reduce using rule 65 (interdeclaration -> CONST ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA .)


state 292

    (51) ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block . CHR_DER
    (2) block -> block . instruccion
    (4) instruccion -> . print PUNTOCOMA
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . declaration
    (7) instruccion -> . assignment
    (8) instruccion -> . whileinstruction
    (9) instruccion -> . instancia PUNTOCOMA
    (10) instruccion -> . operadores PUNTOCOMA
    (11) instruccion -> . forinstruction
    (12) instruccion -> . breakstmt PUNTOCOMA
    (13) instruccion -> . continuestmt
    (14) instruccion -> . arraydeclaration
    (15) instruccion -> . functionstmt
    (16) instruccion -> . call
    (17) instruccion -> . returnstmt
    (18) instruccion -> . pusheo
    (19) instruccion -> . switch_statement
    (20) instruccion -> . constante
    (21) instruccion -> . interfacecreation
    (22) instruccion -> . interdeclaration
    (23) instruccion -> . assigmentarray
    (24) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER
    (51) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER
    (52) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE ifinstruction
    (53) ifinstruction -> . IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER
    (25) declaration -> . VAR ID DOSPUNTOS type IGUAL expresion PUNTOCOMA
    (27) assignment -> . VAR ID IGUAL expresion PUNTOCOMA
    (44) whileinstruction -> . WHILE PARIZQ expresion PARDER CHR_IZQ block CHR_DER
    (36) instancia -> . ID IGUAL expresion
    (37) operadores -> . expresion MAS MAS
    (45) forinstruction -> . FOR PARIZQ declaration expresion PUNTOCOMA operadores PARDER CHR_IZQ block CHR_DER
    (105) breakstmt -> . BREAK
    (104) continuestmt -> . CONTINUE PUNTOCOMA
    (29) arraydeclaration -> . VAR ID DOSPUNTOS type CORIZQ CORDER IGUAL expresion PUNTOCOMA
    (62) functionstmt -> . FUNC ID funcparams functype CHR_IZQ block CHR_DER
    (60) call -> . ID PARIZQ expressionList PARDER PUNTOCOMA
    (61) call -> . ID PARIZQ PARDER PUNTOCOMA
    (76) returnstmt -> . RETURN expresion PUNTOCOMA
    (77) returnstmt -> . RETURN PUNTOCOMA
    (34) pusheo -> . ID PUNTO PUSH PARIZQ expresion PARDER PUNTOCOMA
    (54) switch_statement -> . SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement default_case CHR_DER
    (55) switch_statement -> . SWITCH PARIZQ expresion PARDER CHR_IZQ cases_statement CHR_DER
    (26) constante -> . CONST ID DOSPUNTOS type IGUAL expresion PUNTOCOMA
    (28) constante -> . CONST ID IGUAL expresion PUNTOCOMA
    (63) interfacecreation -> . INTERFACE ID CHR_IZQ attributeList CHR_DER
    (64) interdeclaration -> . VAR ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA
    (65) interdeclaration -> . CONST ID DOSPUNTOS ID IGUAL CHR_IZQ interfaceContent CHR_DER PUNTOCOMA
    (108) assigmentarray -> . listArray2 IGUAL expresion PUNTOCOMA
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (109) listArray2 -> . listArray2 CORIZQ expresion CORDER
    (110) listArray2 -> . listArray2 PUNTO ID
    (111) listArray2 -> . ID
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CHR_DER         shift and go to state 295
    CONSOLE         shift and go to state 24
    IF              shift and go to state 26
    VAR             shift and go to state 28
    WHILE           shift and go to state 30
    ID              shift and go to state 29
    FOR             shift and go to state 31
    BREAK           shift and go to state 32
    CONTINUE        shift and go to state 33
    FUNC            shift and go to state 35
    RETURN          shift and go to state 36
    SWITCH          shift and go to state 37
    CONST           shift and go to state 38
    INTERFACE       shift and go to state 39
    CORIZQ          shift and go to state 34
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expresion                      shift and go to state 27
    instruccion                    shift and go to state 51
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    declaration                    shift and go to state 6
    assignment                     shift and go to state 7
    whileinstruction               shift and go to state 8
    instancia                      shift and go to state 9
    operadores                     shift and go to state 10
    forinstruction                 shift and go to state 11
    breakstmt                      shift and go to state 12
    continuestmt                   shift and go to state 13
    arraydeclaration               shift and go to state 14
    functionstmt                   shift and go to state 15
    call                           shift and go to state 16
    returnstmt                     shift and go to state 17
    pusheo                         shift and go to state 18
    switch_statement               shift and go to state 19
    constante                      shift and go to state 20
    interfacecreation              shift and go to state 21
    interdeclaration               shift and go to state 22
    assigmentarray                 shift and go to state 23
    listArray2                     shift and go to state 40
    listArray                      shift and go to state 49

state 293

    (66) interfaceContent -> interfaceContent COMA ID DOSPUNTOS . expresion
    (30) expresion -> . CORIZQ expressionList CORDER
    (31) expresion -> . ID PUNTO LENGHT
    (32) expresion -> . ID PUNTO INDEXOF PARIZQ expresion PARDER
    (33) expresion -> . ID PUNTO POP PARIZQ PARDER
    (35) expresion -> . ID PUNTO JOIN PARIZQ PARDER
    (46) expresion -> . PARSEINT PARIZQ expresion PARDER
    (47) expresion -> . PARSEFLOAT PARIZQ expresion PARDER
    (48) expresion -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (49) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (50) expresion -> . TYPEOF expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIVIDIDO expresion
    (82) expresion -> . expresion MOD expresion
    (83) expresion -> . ID PARIZQ expressionList PARDER
    (84) expresion -> . ID PARIZQ PARDER
    (85) expresion -> . expresion MENORQUE expresion
    (86) expresion -> . expresion MAYORQUE expresion
    (87) expresion -> . expresion MENORIGUAL expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion TERN expresion DOSPUNTOS expresion
    (90) expresion -> . expresion AND expresion
    (91) expresion -> . expresion OR expresion
    (92) expresion -> . NOT expresion
    (93) expresion -> . expresion IGUALDAD expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . MENOS expresion
    (96) expresion -> . PARIZQ expresion PARDER
    (97) expresion -> . ID PUNTO LCASE PARIZQ PARDER
    (98) expresion -> . ID PUNTO UPCASE PARIZQ PARDER
    (99) expresion -> . ENTERO
    (100) expresion -> . BOOLEANO
    (101) expresion -> . CADENA
    (102) expresion -> . listArray
    (103) expresion -> . DECIMAL
    (112) listArray -> . listArray CORIZQ expresion CORDER
    (113) listArray -> . listArray PUNTO ID
    (114) listArray -> . ID

    CORIZQ          shift and go to state 34
    ID              shift and go to state 58
    PARSEINT        shift and go to state 41
    PARSEFLOAT      shift and go to state 42
    TYPEOF          shift and go to state 43
    NOT             shift and go to state 45
    MENOS           shift and go to state 44
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 46
    BOOLEANO        shift and go to state 47
    CADENA          shift and go to state 48
    DECIMAL         shift and go to state 50

    expresion                      shift and go to state 296
    listArray                      shift and go to state 49

state 294

    (45) forinstruction -> FOR PARIZQ declaration expresion PUNTOCOMA operadores PARDER CHR_IZQ block CHR_DER .

    CONSOLE         reduce using rule 45 (forinstruction -> FOR PARIZQ declaration expresion PUNTOCOMA operadores PARDER CHR_IZQ block CHR_DER .)
    IF              reduce using rule 45 (forinstruction -> FOR PARIZQ declaration expresion PUNTOCOMA operadores PARDER CHR_IZQ block CHR_DER .)
    VAR             reduce using rule 45 (forinstruction -> FOR PARIZQ declaration expresion PUNTOCOMA operadores PARDER CHR_IZQ block CHR_DER .)
    WHILE           reduce using rule 45 (forinstruction -> FOR PARIZQ declaration expresion PUNTOCOMA operadores PARDER CHR_IZQ block CHR_DER .)
    ID              reduce using rule 45 (forinstruction -> FOR PARIZQ declaration expresion PUNTOCOMA operadores PARDER CHR_IZQ block CHR_DER .)
    FOR             reduce using rule 45 (forinstruction -> FOR PARIZQ declaration expresion PUNTOCOMA operadores PARDER CHR_IZQ block CHR_DER .)
    BREAK           reduce using rule 45 (forinstruction -> FOR PARIZQ declaration expresion PUNTOCOMA operadores PARDER CHR_IZQ block CHR_DER .)
    CONTINUE        reduce using rule 45 (forinstruction -> FOR PARIZQ declaration expresion PUNTOCOMA operadores PARDER CHR_IZQ block CHR_DER .)
    FUNC            reduce using rule 45 (forinstruction -> FOR PARIZQ declaration expresion PUNTOCOMA operadores PARDER CHR_IZQ block CHR_DER .)
    RETURN          reduce using rule 45 (forinstruction -> FOR PARIZQ declaration expresion PUNTOCOMA operadores PARDER CHR_IZQ block CHR_DER .)
    SWITCH          reduce using rule 45 (forinstruction -> FOR PARIZQ declaration expresion PUNTOCOMA operadores PARDER CHR_IZQ block CHR_DER .)
    CONST           reduce using rule 45 (forinstruction -> FOR PARIZQ declaration expresion PUNTOCOMA operadores PARDER CHR_IZQ block CHR_DER .)
    INTERFACE       reduce using rule 45 (forinstruction -> FOR PARIZQ declaration expresion PUNTOCOMA operadores PARDER CHR_IZQ block CHR_DER .)
    CORIZQ          reduce using rule 45 (forinstruction -> FOR PARIZQ declaration expresion PUNTOCOMA operadores PARDER CHR_IZQ block CHR_DER .)
    PARSEINT        reduce using rule 45 (forinstruction -> FOR PARIZQ declaration expresion PUNTOCOMA operadores PARDER CHR_IZQ block CHR_DER .)
    PARSEFLOAT      reduce using rule 45 (forinstruction -> FOR PARIZQ declaration expresion PUNTOCOMA operadores PARDER CHR_IZQ block CHR_DER .)
    TYPEOF          reduce using rule 45 (forinstruction -> FOR PARIZQ declaration expresion PUNTOCOMA operadores PARDER CHR_IZQ block CHR_DER .)
    NOT             reduce using rule 45 (forinstruction -> FOR PARIZQ declaration expresion PUNTOCOMA operadores PARDER CHR_IZQ block CHR_DER .)
    MENOS           reduce using rule 45 (forinstruction -> FOR PARIZQ declaration expresion PUNTOCOMA operadores PARDER CHR_IZQ block CHR_DER .)
    PARIZQ          reduce using rule 45 (forinstruction -> FOR PARIZQ declaration expresion PUNTOCOMA operadores PARDER CHR_IZQ block CHR_DER .)
    ENTERO          reduce using rule 45 (forinstruction -> FOR PARIZQ declaration expresion PUNTOCOMA operadores PARDER CHR_IZQ block CHR_DER .)
    BOOLEANO        reduce using rule 45 (forinstruction -> FOR PARIZQ declaration expresion PUNTOCOMA operadores PARDER CHR_IZQ block CHR_DER .)
    CADENA          reduce using rule 45 (forinstruction -> FOR PARIZQ declaration expresion PUNTOCOMA operadores PARDER CHR_IZQ block CHR_DER .)
    DECIMAL         reduce using rule 45 (forinstruction -> FOR PARIZQ declaration expresion PUNTOCOMA operadores PARDER CHR_IZQ block CHR_DER .)
    $end            reduce using rule 45 (forinstruction -> FOR PARIZQ declaration expresion PUNTOCOMA operadores PARDER CHR_IZQ block CHR_DER .)
    CHR_DER         reduce using rule 45 (forinstruction -> FOR PARIZQ declaration expresion PUNTOCOMA operadores PARDER CHR_IZQ block CHR_DER .)
    DEFAULT         reduce using rule 45 (forinstruction -> FOR PARIZQ declaration expresion PUNTOCOMA operadores PARDER CHR_IZQ block CHR_DER .)
    CASE            reduce using rule 45 (forinstruction -> FOR PARIZQ declaration expresion PUNTOCOMA operadores PARDER CHR_IZQ block CHR_DER .)


state 295

    (51) ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER .

    CONSOLE         reduce using rule 51 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER .)
    IF              reduce using rule 51 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER .)
    VAR             reduce using rule 51 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER .)
    WHILE           reduce using rule 51 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER .)
    ID              reduce using rule 51 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER .)
    FOR             reduce using rule 51 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER .)
    BREAK           reduce using rule 51 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER .)
    CONTINUE        reduce using rule 51 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER .)
    FUNC            reduce using rule 51 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER .)
    RETURN          reduce using rule 51 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER .)
    SWITCH          reduce using rule 51 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER .)
    CONST           reduce using rule 51 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER .)
    INTERFACE       reduce using rule 51 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER .)
    CORIZQ          reduce using rule 51 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER .)
    PARSEINT        reduce using rule 51 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER .)
    PARSEFLOAT      reduce using rule 51 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER .)
    TYPEOF          reduce using rule 51 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER .)
    NOT             reduce using rule 51 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER .)
    MENOS           reduce using rule 51 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER .)
    PARIZQ          reduce using rule 51 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER .)
    ENTERO          reduce using rule 51 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER .)
    BOOLEANO        reduce using rule 51 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER .)
    CADENA          reduce using rule 51 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER .)
    DECIMAL         reduce using rule 51 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER .)
    $end            reduce using rule 51 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER .)
    CHR_DER         reduce using rule 51 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER .)
    DEFAULT         reduce using rule 51 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER .)
    CASE            reduce using rule 51 (ifinstruction -> IF PARIZQ expresion PARDER CHR_IZQ block CHR_DER ELSE CHR_IZQ block CHR_DER .)


state 296

    (66) interfaceContent -> interfaceContent COMA ID DOSPUNTOS expresion .
    (48) expresion -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIVIDIDO expresion
    (82) expresion -> expresion . MOD expresion
    (85) expresion -> expresion . MENORQUE expresion
    (86) expresion -> expresion . MAYORQUE expresion
    (87) expresion -> expresion . MENORIGUAL expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . TERN expresion DOSPUNTOS expresion
    (90) expresion -> expresion . AND expresion
    (91) expresion -> expresion . OR expresion
    (93) expresion -> expresion . IGUALDAD expresion
    (94) expresion -> expresion . DIFERENTE expresion

    CHR_DER         reduce using rule 66 (interfaceContent -> interfaceContent COMA ID DOSPUNTOS expresion .)
    COMA            reduce using rule 66 (interfaceContent -> interfaceContent COMA ID DOSPUNTOS expresion .)
    PUNTO           shift and go to state 61
    MAS             shift and go to state 102
    MENOS           shift and go to state 62
    POR             shift and go to state 63
    DIVIDIDO        shift and go to state 64
    MOD             shift and go to state 65
    MENORQUE        shift and go to state 66
    MAYORQUE        shift and go to state 67
    MENORIGUAL      shift and go to state 68
    MAYORIGUAL      shift and go to state 69
    TERN            shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    IGUALDAD        shift and go to state 73
    DIFERENTE       shift and go to state 74

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IGUAL in state 29 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 29 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 29 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 49 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 58 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 95 resolved as shift
WARNING: shift/reduce conflict for MAS in state 95 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 95 resolved as shift
WARNING: shift/reduce conflict for POR in state 95 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 95 resolved as shift
WARNING: shift/reduce conflict for MOD in state 95 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 95 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 95 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 95 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 95 resolved as shift
WARNING: shift/reduce conflict for TERN in state 95 resolved as shift
WARNING: shift/reduce conflict for AND in state 95 resolved as shift
WARNING: shift/reduce conflict for OR in state 95 resolved as shift
WARNING: shift/reduce conflict for IGUALDAD in state 95 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 95 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 97 resolved as shift
WARNING: shift/reduce conflict for MAS in state 97 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 97 resolved as shift
WARNING: shift/reduce conflict for POR in state 97 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 97 resolved as shift
WARNING: shift/reduce conflict for MOD in state 97 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 97 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 97 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 97 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 97 resolved as shift
WARNING: shift/reduce conflict for TERN in state 97 resolved as shift
WARNING: shift/reduce conflict for AND in state 97 resolved as shift
WARNING: shift/reduce conflict for OR in state 97 resolved as shift
WARNING: shift/reduce conflict for IGUALDAD in state 97 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 97 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 118 resolved as shift
WARNING: shift/reduce conflict for MAS in state 118 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 118 resolved as shift
WARNING: shift/reduce conflict for POR in state 118 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 118 resolved as shift
WARNING: shift/reduce conflict for MOD in state 118 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 118 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 118 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 118 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 118 resolved as shift
WARNING: shift/reduce conflict for TERN in state 118 resolved as shift
WARNING: shift/reduce conflict for AND in state 118 resolved as shift
WARNING: shift/reduce conflict for OR in state 118 resolved as shift
WARNING: shift/reduce conflict for IGUALDAD in state 118 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 118 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 119 resolved as shift
WARNING: shift/reduce conflict for MAS in state 119 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 119 resolved as shift
WARNING: shift/reduce conflict for POR in state 119 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 119 resolved as shift
WARNING: shift/reduce conflict for MOD in state 119 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 119 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 119 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 119 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 119 resolved as shift
WARNING: shift/reduce conflict for TERN in state 119 resolved as shift
WARNING: shift/reduce conflict for AND in state 119 resolved as shift
WARNING: shift/reduce conflict for OR in state 119 resolved as shift
WARNING: shift/reduce conflict for IGUALDAD in state 119 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 119 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 120 resolved as shift
WARNING: shift/reduce conflict for MAS in state 120 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 120 resolved as shift
WARNING: shift/reduce conflict for POR in state 120 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 120 resolved as shift
WARNING: shift/reduce conflict for MOD in state 120 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 120 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 120 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 120 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 120 resolved as shift
WARNING: shift/reduce conflict for TERN in state 120 resolved as shift
WARNING: shift/reduce conflict for AND in state 120 resolved as shift
WARNING: shift/reduce conflict for OR in state 120 resolved as shift
WARNING: shift/reduce conflict for IGUALDAD in state 120 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 120 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 121 resolved as shift
WARNING: shift/reduce conflict for MAS in state 121 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 121 resolved as shift
WARNING: shift/reduce conflict for POR in state 121 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 121 resolved as shift
WARNING: shift/reduce conflict for MOD in state 121 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 121 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 121 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 121 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 121 resolved as shift
WARNING: shift/reduce conflict for TERN in state 121 resolved as shift
WARNING: shift/reduce conflict for AND in state 121 resolved as shift
WARNING: shift/reduce conflict for OR in state 121 resolved as shift
WARNING: shift/reduce conflict for IGUALDAD in state 121 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 121 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 160 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 186 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 200 resolved as shift
WARNING: shift/reduce conflict for MAS in state 200 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 200 resolved as shift
WARNING: shift/reduce conflict for POR in state 200 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 200 resolved as shift
WARNING: shift/reduce conflict for MOD in state 200 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 200 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 200 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 200 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 200 resolved as shift
WARNING: shift/reduce conflict for TERN in state 200 resolved as shift
WARNING: shift/reduce conflict for AND in state 200 resolved as shift
WARNING: shift/reduce conflict for OR in state 200 resolved as shift
WARNING: shift/reduce conflict for IGUALDAD in state 200 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 200 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 234 resolved as shift
WARNING: reduce/reduce conflict in state 29 resolved using rule (listArray2 -> ID)
WARNING: rejected rule (listArray -> ID) in state 29
